// +build production
// Code generated by go-bindata.
// sources:
// templates/.DS_Store
// templates/dataset/finishpage.tmpl
// templates/dataset/index.tmpl
// templates/dataset/middlepage.tmpl
// templates/dataset-filter/age-selector-list.tmpl
// templates/dataset-filter/age-selector-range.tmpl
// templates/dataset-filter/filter-overview.tmpl
// templates/error.tmpl
// templates/homepage.tmpl
// templates/main.tmpl
// templates/partials/filter-selection.tmpl
// templates/partials/footer.tmpl
// templates/partials/header.tmpl
// templates/productPage.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDs_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x41\x6a\xc3\x30\x10\x45\xff\xa8\x86\x0a\xba\xd1\xb2\x4b\x5d\xa1\x37\x10\xc6\x3d\x81\x2f\x50\x83\x4b\x37\xc5\x85\xd6\xed\xda\xab\x9e\x2b\x47\x0b\x46\x3f\xc4\x60\x3b\xab\x84\x38\xe1\x3f\x10\x6f\xa1\x19\xdb\x78\x21\xcd\x0c\x00\x2b\x7f\xdb\x17\x20\x00\xf0\xc8\xc6\x3f\x16\xf1\x5c\x33\x1c\x6d\x79\x05\xe0\x07\xef\xe8\xff\xea\xef\xee\xf3\x6b\xf9\x59\x33\xc6\xdc\x47\xb4\x68\xd0\xa3\x99\xe6\x77\x1f\xdc\x15\x42\x08\x21\xc4\x39\xe1\xed\xea\x9f\xae\xfd\x21\x42\x88\xcd\x31\x9e\x0f\x91\x4e\xf4\x90\x6d\xdc\x77\x74\x31\xc9\x09\x74\xa4\x13\x3d\x64\x1b\xe3\x1c\x5d\xd0\x9e\x0e\x74\xa4\x13\x3d\x64\xf3\xd0\x32\x36\x1f\xc6\x37\x1b\x3b\x14\x0b\x74\xa4\xd3\x65\xfe\x8d\x10\xb7\xce\x43\x56\x18\xef\xff\xd7\xf5\xfe\x5f\x08\x71\xc7\x58\x51\xd5\x55\x79\x62\xdc\xe6\x58\x08\xbc\x31\x66\x77\x48\x5c\x29\x04\x5c\x1e\x18\x3e\xe3\x18\xa7\x62\x40\x88\x0d\xb1\x0f\x00\x00\xff\xff\x54\x56\xba\x3f\x04\x18\x00\x00")

func templatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_templatesDs_store,
		"templates/.DS_Store",
	)
}

func templatesDs_store() (*asset, error) {
	bytes, err := templatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1497865736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetFinishpageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6a\xc4\x30\x0c\x40\x77\x7f\x85\x70\xe9\xec\x92\xa1\x93\xa2\x25\x1d\x3a\x75\x68\xa1\xbb\x52\x2b\xd8\x90\xc6\x46\xf6\x25\xe4\xef\x0f\x73\x77\x1c\x97\xdb\x1e\x92\xde\x43\xe8\xe3\x0a\x7f\x33\x97\xd2\xdb\x4d\x39\x67\x51\x4b\x06\x00\x43\x47\x9f\xa2\x02\xb1\x00\x43\x59\x38\x97\x90\x2a\xa4\x09\xf6\x74\x52\xf0\x5c\x19\x5d\xe8\x08\x47\x25\xd3\xee\x2b\x8f\xb3\x34\xb3\xb1\x5e\xa0\xa1\xa7\x21\xd6\x1d\x5d\xf5\x0f\x33\x8d\xff\x02\xdf\x5c\xe5\xbe\x41\x77\xf3\x0e\x81\x2f\xd9\x72\xd2\x7a\x6c\xbc\xbf\xbd\x3e\xcb\xe8\xae\x8f\x34\x66\x08\x2a\x53\x6f\x5f\x2c\x7d\xa4\x6d\x99\x13\x7b\x18\x7e\x7e\xd1\x31\x19\x74\x3e\xae\x64\xce\x01\x00\x00\xff\xff\x79\x27\xa5\xff\x00\x01\x00\x00")

func templatesDatasetFinishpageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetFinishpageTmpl,
		"templates/dataset/finishpage.tmpl",
	)
}

func templatesDatasetFinishpageTmpl() (*asset, error) {
	bytes, err := templatesDatasetFinishpageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset/finishpage.tmpl", size: 256, mode: os.FileMode(420), modTime: time.Unix(1498748517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x4d\x4e\xc4\x30\x0c\x46\xf7\x3d\x85\xe5\x3d\x0a\x53\x7e\x86\x45\x9a\x0d\x0b\x0e\x00\x17\x48\x1b\x0f\xb1\x68\x26\x91\xed\x16\xe6\xf6\xa8\x1d\xc1\x0a\x89\x9d\x3f\x5b\xef\xd9\xf6\x89\x57\x98\xe6\xa8\x3a\xe0\xa7\xc4\xd6\x48\x30\x74\x00\x3e\xf7\xe1\x39\xd7\xaa\x04\x11\x4e\x3c\x1b\x89\x77\xb9\xdf\x47\xa7\x2a\x05\xe2\x64\x5c\xcf\x03\xba\x14\x2d\x2a\x99\xba\x43\x7f\x77\xef\x28\xf1\xd6\x57\xf7\xf0\x78\x7c\x72\x2b\x89\xee\xa9\xbf\x3d\x1c\xdd\x55\x83\x50\xc8\x72\x4d\x03\xb6\xaa\xb6\x2f\x03\xf0\x7c\x6e\x8b\x81\x5d\x1a\x0d\x53\xa6\xe9\x63\xac\x5f\xb0\xc6\x79\xa1\x01\x5f\xa8\xbe\x4b\x6c\xf9\x82\xe1\xb7\xf4\xa3\xfc\x0f\x1a\x17\xba\x51\x12\x26\xc5\xf0\xc6\x85\xe0\x75\x0f\x1b\xfc\xa7\x00\x75\x19\x0b\x1b\xfe\x08\xd4\xa2\x5c\x2f\xf4\x6e\x7b\x3a\x74\xde\x25\x5e\x43\xf7\x1d\x00\x00\xff\xff\x6f\x0e\xc7\xb2\x36\x01\x00\x00")

func templatesDatasetIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetIndexTmpl,
		"templates/dataset/index.tmpl",
	)
}

func templatesDatasetIndexTmpl() (*asset, error) {
	bytes, err := templatesDatasetIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset/index.tmpl", size: 310, mode: os.FileMode(420), modTime: time.Unix(1498748517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetMiddlepageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xdd\x6f\xe3\x44\x10\x7f\xf6\xfd\x15\xa3\xe5\x95\x8d\x53\x5a\x51\x40\x4e\x24\x44\x85\x00\x1d\x3c\x50\xc4\xeb\x69\xec\x9d\xc4\xd3\xee\x87\xb5\x1f\xc9\x95\xd3\xfd\xef\xc8\xf1\xc6\x76\xda\xdc\xb5\x45\x20\xf1\x10\x79\x76\xbe\xf6\x37\xbf\xd9\xcc\x6e\xa5\x78\x07\x8d\xc6\x10\x56\xa2\xc3\x2d\xc9\xc6\xd9\x48\x36\x8a\xf5\x9b\x62\x6e\xdb\x7b\xec\x3a\xf2\xbd\xfa\x44\xdf\x38\x2d\x7b\xdb\xc1\xf0\xd8\x32\x28\x1f\x6b\xa1\x8f\x91\x46\xc9\xab\xeb\x41\xd4\x5b\x79\xf9\x2d\x18\xf4\x5b\xb6\xb2\x76\x31\x3a\x23\xe5\x95\x58\xbf\x39\x44\x17\xd5\xc6\x79\x73\x8c\x3f\xc8\xa8\xee\x52\x88\x72\xe3\x6c\x94\x81\xff\x22\x29\x2f\xbe\x16\x80\x4d\x64\x67\x57\xa2\xbc\x73\x75\x28\x3f\x7c\x58\xdc\x60\xc4\xc5\x2f\xae\xfe\xf9\xe6\xe3\xc7\x52\xb1\x21\x1b\xd8\xd9\x90\x51\x15\x45\xd5\x5e\x1c\xd3\xe6\xcd\xa3\xeb\xa4\xbc\x3a\x85\x02\x7b\x79\xbd\x5c\x8a\xf5\xef\x14\x58\x91\x6d\x08\xfe\x78\xe8\xa8\x2a\xdb\x8b\x23\xc0\xa2\x52\x14\x91\x75\x00\xef\x34\xad\xc4\xd6\xbb\xd4\x89\x47\xa9\x87\x64\xe3\xde\x00\x55\x48\xc6\xa0\x7f\x58\x57\xa1\x43\x7b\xf4\xce\x4a\xb1\xfe\x89\x74\x07\x7b\x8e\x2d\xc4\x96\x03\x28\x8c\x18\x28\x56\x65\xef\xbc\xae\xca\x63\xf0\x94\xee\xa4\x91\x96\xf4\x6c\xab\xa2\x6a\x2f\xcf\xc2\x91\x72\x79\x2c\xef\xd6\x19\x82\xc8\x51\xf7\xa5\x5d\x4e\xb1\x00\x55\x77\x8e\xa5\xa5\x58\xbf\x75\x9e\x0c\x70\x17\x92\x01\xe5\xb4\xf3\x10\x38\x02\x1a\x8a\x5f\x42\xe3\x6c\xa0\x26\x52\x4c\x1e\x50\x71\xc7\xa1\x61\xbb\x05\xd2\x1c\x17\xf0\x2b\x26\xcf\x01\x76\x1c\x91\xc0\xb7\xce\x36\x29\x80\x62\x34\x0b\xf8\x93\x77\x68\x52\x00\xeb\x2c\x18\x0c\x01\x41\x73\x4d\xde\x2d\xe0\xb7\xa4\x35\x66\xfd\x7b\xee\x7d\x02\x99\x05\xfc\x98\x42\x43\xc0\x0a\x76\x14\x22\xd7\x49\x27\x73\x0c\xa9\xca\x6e\xc6\x4f\xa9\x78\x37\x76\xbe\xcc\x1d\x9b\xb5\x90\x77\xb9\x7d\xd1\x39\x5d\xa3\x17\x80\x9e\x51\x6a\xac\x49\xaf\x44\xd3\x52\x73\x5f\xbb\xf7\x10\x48\x53\x13\x9d\x3f\xdf\x5f\x29\xbf\x82\xbb\x20\xe5\xe0\x25\x51\x6b\x69\x9d\x25\xb0\xae\xd7\xb6\xac\x68\x6c\x4b\x51\xd5\x29\x46\x67\x21\x3e\x74\xb4\x12\xc3\x42\x00\xab\x95\x98\xa2\x33\x08\xc5\x01\x6b\x4d\x6a\x25\x36\xa8\x03\x89\x8c\xf4\x18\x73\x8a\xc4\xf3\xb6\x8d\x50\x47\xdb\xff\xa4\xd4\x6c\xef\x27\x49\x26\xab\xc8\x6b\xb6\xa4\xa0\x43\xa5\xd8\x6e\x73\x3f\xc7\xe5\x78\x34\xc4\xfa\xf6\x00\x04\x50\xeb\xaa\x1c\x36\x7b\x39\xfa\xbe\xee\x27\xf0\xa3\x4f\x24\xe0\xb8\xfe\x77\xca\x98\x94\x63\xde\xe7\x2b\xbb\xa1\xf0\xc9\xda\x4e\x8f\xca\x7c\x78\xe5\x43\x20\x87\x7f\xf8\xc4\xc5\x19\x9f\xc9\x5a\x54\x6c\xbb\x14\x33\x53\xa3\xfd\x71\xc0\xbb\x77\x07\xb7\x81\xc3\xef\xb5\x86\x06\x23\x6d\x9d\x67\x0a\xdf\xc1\xe9\xf0\x11\x60\xd1\xd0\xf3\x5e\x3b\xd4\xe9\x79\xb7\x19\xd0\xc3\x61\x7f\x0a\xec\xa0\x16\xb0\x71\xfe\x15\xc9\x8a\xcf\x7b\x4e\x9b\x96\x87\xf4\x13\x99\x73\xf6\xff\x03\x6a\xdf\xf2\x8e\x02\xb0\x05\x84\xc6\x19\x93\x2c\x6a\xa0\x10\xb1\xd6\x1c\x5a\xd3\x5f\x7d\x99\xdd\x17\x38\x66\x82\x9f\xf7\x7c\x1d\xc7\xaf\xc9\x57\x3c\xeb\xfc\x7f\x60\xba\x75\x29\x50\xeb\xb4\x3a\x43\xee\xcc\xf6\x94\xcf\xc9\xf8\x8f\x29\x3c\x97\xa2\x38\x67\x7f\x19\x51\x9f\x9c\x0e\x9f\x79\x43\x48\xf9\xcd\x6c\x5a\x0c\x4c\xe6\xa8\x71\xc0\x75\x9e\xfb\x1b\x7d\x58\xc4\x96\x9b\x3c\xee\xf6\xac\x68\x90\x6a\xde\xc2\x7c\x38\x4a\xd9\xa2\xde\xc0\xe1\x19\xb4\xa7\x41\x73\xbd\x5c\xc2\xfc\x5d\x74\x0d\xa1\x75\x7b\xb9\x71\x4d\x0a\x22\x77\x2f\xa4\xda\xf0\x74\x7a\x6f\x71\x47\xf9\x5a\x63\x67\xe7\xf7\x93\x9f\x64\x84\xd6\xd3\x66\x25\xbe\x18\x5b\xce\xb6\x1f\xbf\xb2\xd6\xae\xb9\x87\xd3\xda\xc7\xe1\x3c\x4c\xed\x19\x82\xf5\x0f\x68\x1b\xd2\x55\x89\xe7\xe8\xac\xca\xfe\x79\x97\x1f\x8d\xa3\x7e\x94\x8e\x42\xfe\xe6\xcf\xdf\x01\x00\x00\xff\xff\x27\xa4\xb1\xb5\xc2\x0a\x00\x00")

func templatesDatasetMiddlepageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetMiddlepageTmpl,
		"templates/dataset/middlepage.tmpl",
	)
}

func templatesDatasetMiddlepageTmpl() (*asset, error) {
	bytes, err := templatesDatasetMiddlepageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset/middlepage.tmpl", size: 2754, mode: os.FileMode(420), modTime: time.Unix(1498748517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetFilterAgeSelectorListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5b\x6f\x1b\xb9\x0e\x7e\x76\x7f\x05\xa1\xf3\x7a\xe4\x49\xd2\x9c\x5e\x0e\x26\x06\x82\x53\x14\x38\x8b\xec\x3e\xb4\xbb\xfb\x1a\x70\x46\xb4\x47\xad\x2e\x03\x49\xe3\xb4\x1b\xe4\xbf\x2f\x34\x17\xcf\x68\x7c\xa9\xd3\xdd\x05\x6a\xc0\xb0\x2e\x24\x45\x7e\xa4\x48\xca\xb9\x90\x5b\x28\x15\x7a\x7f\xc3\x50\x7c\x6a\x7c\xe0\x6b\x6b\x02\xf7\xf2\x0f\xe2\xfc\xf2\x15\x5b\xbd\x58\x4c\x69\x6a\xdc\x10\x97\x26\x38\x1b\x77\x92\xad\x07\x87\x75\x4d\xae\x5d\x4f\x36\x4a\xab\x78\xdc\xec\x76\xe6\x5b\xfd\xea\x7c\x19\x22\x17\xd7\x82\x5f\xbf\xee\x86\x6a\xc3\x5f\xbe\x1d\x88\x17\x79\x75\xb9\xaf\xd2\xfd\x7d\x90\x41\x11\xb4\x16\x3c\x90\xdc\x54\x81\xbf\xbe\xb8\x60\xab\xdb\x0d\xe5\x59\x75\x39\x9c\x94\x09\xb9\xed\x75\xd9\x0d\x77\xa3\x61\xd0\xff\x02\xec\x99\x5f\x5a\x13\xc8\x04\x68\x8c\x20\xa7\xa4\x21\x8e\x4a\x71\x25\xcd\x67\x1f\xf5\x4b\x39\x26\xa8\x40\xfb\x39\x81\xcc\x31\x68\xce\xc1\xe6\x3f\x23\x36\x47\xc9\xaf\xde\xee\xc8\xaf\x26\xe4\x8b\x5c\x50\x40\xa9\x3c\x38\xab\xe8\x86\x6d\x9c\x6d\x6a\x36\x08\xd0\xe8\x36\xd2\xf0\xc2\x86\x60\x35\xe7\xd7\x13\x3e\x80\xdc\x37\x5a\xa3\xfb\xba\xca\x7d\x8d\x66\x60\xe9\x17\xd9\xea\x8e\xd0\x19\xd0\xd6\x11\x60\x61\x9b\x00\x0e\x4d\x74\x45\x24\x5e\xe5\xd9\xc0\x3c\x15\x98\x80\x6d\x48\x25\xc7\x2d\xf2\xea\xe5\x11\xbd\x2e\xe0\xa1\xf3\xf5\x47\xab\x09\xda\x38\xc8\xb3\xea\xe5\x94\x1b\x20\xaf\x67\xdc\xc1\xd6\x9c\x5f\xb0\xd5\x9d\x75\xa4\x41\xd6\xbe\xd1\x20\xac\xb2\x0e\xbc\x0c\x80\x9a\xc2\xbf\xa1\xb4\xc6\x53\x19\x28\x34\x0e\x50\xc8\x5a\xfa\x52\x9a\x0d\x90\x92\x61\x09\x3f\x63\xe3\xa4\x87\xad\x0c\x48\xe0\x2a\x6b\xca\xc6\x83\x90\xa8\x97\xf0\xbb\xdc\xa2\x6e\x3c\x18\x6b\x40\xa3\xf7\x08\x4a\x16\xe4\xec\x12\x7e\x69\x94\xc2\x7e\xfd\x8b\x8c\x34\x9e\xf4\x12\xde\x37\xbe\x24\x90\x02\xb6\xe4\x83\x2c\x1a\xd5\xe8\x81\x25\xcf\xea\x04\xa5\x31\x82\xfb\x28\xee\x1c\x38\x46\x40\x42\x90\xaf\xad\xd3\x83\xe5\xed\xf8\xd0\x55\x87\x52\x11\x3a\xae\x68\x1d\x18\x60\x19\xa4\x35\x37\x2c\xfb\x64\x0b\x9f\x3d\x3e\x2e\x7f\xb2\xc5\xff\xdf\x3d\x3d\x65\x42\x6a\x32\x5e\x5a\xe3\x93\x00\x7a\x5e\xc0\xa5\x0c\x15\x95\x9f\x0b\xfb\x05\x4e\x44\xda\x62\x91\x4b\x53\x37\x01\xc2\xd7\x9a\x46\x16\x36\x97\x71\x7f\xdf\x92\x31\x90\xe2\x86\xdd\x2a\x05\xb8\x21\xcf\xc0\xa0\xa6\xe9\x7c\x8b\xaa\x49\x16\x5a\x7e\x12\xc9\x81\x0a\x0b\x52\xfb\x07\xb4\xcb\x0c\xd6\xd6\x4d\x04\x4c\x19\x17\xc3\xea\x54\x58\xd6\xb2\x4d\x11\x48\x5d\x98\x20\x32\x03\xe2\x4d\x0a\xc4\xf4\xa6\x15\xca\x96\x9f\xe7\xc0\x5d\xb1\xf4\x3a\x4e\xbd\xfc\x9a\xad\x6e\x85\x88\xea\x25\x77\x11\xac\x83\x1c\xa1\x72\xb4\xbe\x61\x8f\x8f\xcb\x77\x18\x70\x79\x2b\xc4\x7b\x67\xf5\x87\x48\xb7\xfc\xed\xc3\xdd\xd3\x13\x5b\xa1\x10\xb0\x76\x36\x06\xa6\x0f\x79\x86\xab\x5e\xc0\x8b\xa9\x86\xd1\x94\x2e\x95\x04\x6b\x55\x81\x8e\x01\x3a\x89\xbc\xc5\x60\xe2\x70\x4f\x8a\xca\x60\xdd\xb1\x5c\x73\x05\x9f\x3c\xe7\x1d\x55\x9b\x63\x8d\x35\x04\xc6\xc6\xd5\x4a\x0a\x4a\x61\xcf\x8b\x26\x04\x6b\xfa\x10\xe9\x26\x5d\x20\x8c\x12\x7a\x45\x84\xf4\x58\x28\x12\x37\x6c\x8d\xca\x13\xeb\xb5\x1d\x78\x52\x6d\x5c\xac\x23\x50\x04\x13\xbf\xbc\xcd\xf3\xe3\x88\xef\x8a\x80\x80\x1a\x85\x90\x66\xd3\x27\x95\xdd\x74\x97\xa1\xd8\xea\x63\xab\x08\xa0\x52\x79\xd6\x1d\xf6\x3c\x0b\xa2\xfd\x7b\x26\x04\xd7\x10\x83\x61\xfe\xf7\x98\x32\x2e\xee\xe4\x7e\xdb\xba\x77\xe4\x4f\xda\x37\x0f\xf9\x83\x59\x80\x77\xd5\x27\xc5\xe5\x00\x5d\x4a\xf1\xbd\xe9\xa1\xc4\x40\x1b\xeb\x24\xf9\xff\xc2\x07\xf2\x52\x90\x29\x09\x7e\xfd\x5a\xd3\x34\x69\x9c\xa2\x9a\xa4\x92\x13\x64\x33\x65\xcf\x4c\x2d\x67\x0b\x5c\x9c\xa6\x4e\x0f\xdf\x4b\x45\x07\x3c\xf3\x0f\x41\x7e\x27\xb7\xe4\x41\x1a\x40\x28\xad\xd6\x8d\x41\x05\xe4\x03\x16\x4a\xfa\x4a\x93\x09\x03\xea\x67\x10\xf6\xc0\x7f\x9b\xf2\xf9\xd8\x3f\x57\xe6\xe2\x9b\x0c\x3f\xa2\x07\x2a\xdb\x78\xaa\xac\x12\x07\x40\x9f\xec\xed\xe3\x3c\x6e\xfe\x25\x68\x8f\x89\x59\x1c\xa2\x79\x3e\x80\x27\xb3\xcd\xb4\xfd\xbb\x9e\xd7\xcf\x37\xb3\xec\xd3\xa1\x3c\x54\xdc\x21\x79\xd6\x4e\xc6\xe6\xb5\x9b\x84\x4a\x96\x7d\x2a\x7d\x90\x82\xba\x51\x21\x37\x30\x4d\xbc\x9c\x57\xa8\xd6\xc9\xeb\x24\xb6\xac\x90\xd4\x67\xf0\x95\x7d\xe0\x6b\x5b\x36\x9e\xf5\x9e\xf5\x4d\xa1\xe5\x18\xf1\x1f\x71\x4b\x7d\xe9\x94\xd6\xcc\x6b\xa0\x4b\xe7\x43\x4d\xff\xd7\x2e\x2c\xa4\x69\x9f\x2c\x49\xe7\xd0\xe3\x30\x3e\x68\xda\xca\x30\xd1\x64\xf5\x3f\x34\x25\xa9\x58\xf0\x4f\x40\x7c\x46\x0f\x03\xc9\x27\x09\xe0\x43\x66\xa2\x11\xe0\x62\xe7\x6d\x20\x58\x58\x4b\x15\xc8\x81\xad\x43\xdb\x7f\x7e\xa7\x4b\xda\x41\x6b\xd6\xcc\x3b\x57\xf3\x87\xe3\xcc\x33\x81\xbe\x84\xe9\x73\x6d\x66\x0b\x9e\x81\x70\xda\x8a\xcd\xfa\xad\x0e\xe3\xa1\xd3\x3a\x0f\xf1\xf9\x1c\x63\xde\x3f\x5a\x63\x27\xad\xf9\xe5\xf5\xd8\x9a\x5f\x0c\x5a\xc6\xde\x3f\x6e\xee\xdf\x89\x57\x09\x89\xda\x70\x7e\x79\x91\x84\x5e\xfa\x74\xdb\xe3\x8e\xed\x1a\xe7\x5e\xcf\x78\x7e\x84\x20\x38\xd3\xe9\xb0\x6e\x94\x8a\x52\x42\x35\x37\x7c\x2f\x77\x3f\x3e\x42\x20\x5d\x2b\x0c\x04\xac\x46\x17\x24\x2a\x9f\x75\x9a\xf3\xf1\xea\xc2\x12\x9e\x9e\x8e\x7b\x37\xcf\x52\x6f\xe6\x59\x7c\xbb\xad\x5e\x8c\x31\x97\x70\xec\xff\xad\x01\xb0\xff\xbf\x46\xff\xf3\x67\x00\x00\x00\xff\xff\x4b\x66\xf9\x81\xf8\x11\x00\x00")

func templatesDatasetFilterAgeSelectorListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetFilterAgeSelectorListTmpl,
		"templates/dataset-filter/age-selector-list.tmpl",
	)
}

func templatesDatasetFilterAgeSelectorListTmpl() (*asset, error) {
	bytes, err := templatesDatasetFilterAgeSelectorListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset-filter/age-selector-list.tmpl", size: 4600, mode: os.FileMode(420), modTime: time.Unix(1499420767, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetFilterAgeSelectorRangeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x4b\x6f\x1b\xb7\x13\x3f\x2b\x9f\x62\xb0\xf0\x31\xd4\x4a\x8e\xff\xce\x3f\xc5\x4a\x80\xd1\x34\x40\x0b\x37\x05\x62\xb4\x40\x4f\x06\x77\x39\x5a\x31\xe6\x63\x4b\x72\x25\xbb\x82\xbe\x7b\xc1\x7d\x48\x4b\xae\xe4\xda\xb7\x14\x88\x2e\x4b\xce\x8b\xc3\x99\xdf\x8c\x48\x66\x8c\x6f\xa0\x10\xd4\xda\x45\x42\xd9\xd7\xda\x3a\xb2\xd2\xca\x11\xcb\xff\x46\x42\xe6\xd7\xc9\xf2\xcd\x64\x28\x53\xd1\x12\x09\x57\xce\x68\xcf\x09\x58\x5b\x43\xab\x0a\x4d\x43\x0f\x18\x85\x16\xc4\x33\x5b\x4e\xcc\xea\xa8\x31\x19\xbc\x16\x91\x8c\x5c\xbd\x6f\x87\xa2\x24\xef\x3e\xf4\xc2\x93\x6c\x3d\x1f\xbb\x74\x7f\xef\xb8\x13\x08\xcd\x0e\xb6\xc8\xcb\xb5\x23\xef\x67\xb3\x64\x79\x53\x62\x96\xae\xe7\xfd\x4a\x29\xe3\x9b\xce\x97\xc3\xf0\x30\xea\x07\xdd\x17\x60\xb4\xfd\x42\x2b\x87\xca\x41\xad\x18\x1a\xc1\x15\x12\x2a\x04\x11\x5c\x3d\x58\xef\x5f\xa8\x31\x88\x0a\x34\xbf\x67\x22\x73\x2e\x34\x2f\x89\xcd\xff\x8e\xb1\x39\x2b\x7e\xf9\xe1\x20\x7e\x39\x10\x9f\x64\x0c\x1d\xe5\xc2\x82\xd1\x02\x17\x49\x69\x74\x5d\x25\xbd\x01\x49\x4d\xc9\x15\xc9\xb5\x73\x5a\x12\x72\x35\xd0\x03\xc8\x6c\x2d\x25\x35\x4f\xcb\xcc\x56\x54\xf5\x2a\x1d\x31\x59\xde\x22\x35\x0a\xa4\x36\x08\x34\xd7\xb5\x03\x43\x95\x4f\x85\x17\x5e\x66\x69\xaf\x3c\x34\x18\x04\x5b\xa1\x08\x96\x9b\x64\xeb\x77\x67\xfc\x9a\xc1\xb6\xcd\xf5\x9d\x96\x08\x0d\x0e\xb2\x74\xfd\x6e\xa8\x0d\x90\x55\x91\xb6\xd3\x15\x21\xb3\x64\x79\xab\x0d\x4a\xe0\x95\xad\x25\x30\x2d\xb4\x01\xcb\x1d\x50\x89\xee\x2d\x14\x5a\x59\x2c\x1c\xba\xda\x00\x65\xbc\xe2\xb6\xe0\xaa\x04\x14\xdc\x4d\xe1\x57\x5a\x1b\x6e\x61\xc3\x1d\x45\x30\x6b\xad\x8a\xda\x02\xe3\x54\x4e\xe1\x0f\xbe\xa1\xb2\xb6\xa0\xb4\x02\x49\xad\xa5\x20\x78\x8e\x46\x4f\xe1\x73\x2d\x04\xed\xe8\x8f\xdc\xcb\x58\x94\x53\xf8\x54\xdb\x02\x81\x33\xd8\xa0\x75\x3c\xaf\x45\x2d\x7b\x95\x2c\xad\x82\x28\x1d\x11\xdc\xa1\xb8\x4d\xe0\x11\x01\x81\x40\xb6\xd2\x46\xf6\x3b\x6f\xc6\xa7\x4a\x1d\x0a\x81\xd4\x10\x81\x2b\x97\x00\x2d\x1c\xd7\x6a\x91\xa4\x5f\x75\x6e\xd3\xdd\x6e\xfa\x8b\xce\x7f\xfe\xb8\xdf\xa7\x8c\x4b\x54\x96\x6b\x65\x03\x00\xbd\x0e\x70\xa1\xc2\x1a\x8b\x87\x5c\x3f\xc2\x33\x48\x9b\x4c\x32\xae\xaa\xda\x81\x7b\xaa\xf0\xa8\x92\xc4\x36\xee\xef\x1b\xb1\x04\x38\x5b\x24\x37\x42\x00\x2d\xd1\x26\xa0\xa8\xc4\xe1\x7c\x43\x45\x1d\x10\x1a\x7d\x64\xc1\x82\x82\xe6\x28\xc6\x0b\x34\xe4\x04\x56\xda\x0c\x0c\x0c\x15\x27\x3d\x75\x68\x2c\x6d\xd4\x86\x11\x08\x53\x18\x44\x24\x0a\xc4\xff\xc3\x40\x0c\x2b\x2d\x17\xba\x78\x88\x03\x77\x99\x84\xe5\x38\xcc\xf2\xfb\x64\x79\xc3\x98\x77\x2f\xa8\x45\xd0\x06\x32\x0a\x6b\x83\xab\x45\xb2\xdb\x4d\x3f\x52\x47\xa7\x37\x8c\x7d\x32\x5a\xde\x72\xeb\xa6\xbf\x7f\xb9\xdd\xef\x93\x25\x65\x0c\x56\x46\x7b\x5c\x5a\x97\xa5\x74\xd9\xe9\xbf\x19\x3a\x38\xd8\x49\xae\x0d\x43\x73\xf0\xac\xa4\x42\xa0\x79\x22\x56\xc2\x19\x8e\x64\xe7\x38\xa2\x6c\x01\xba\xe2\x8f\x61\xb8\x77\xbb\x8b\x0d\x15\xf0\xc3\x02\x5a\xb7\x3f\x71\xe1\xd0\xd8\x1b\xa9\x6b\xe5\xf6\xfb\x48\x54\xa0\xf2\xa2\xb6\xce\x9d\xa1\x85\x83\x46\x77\x1e\x8b\xb5\xc1\x81\x0b\xfe\x16\x2e\x36\x5e\x5e\x68\x5d\xc1\xac\x91\x0e\x65\xcf\x41\x7f\x7e\x79\x80\xfe\xfc\xf2\x44\x86\x86\x36\x26\xbb\x1d\x5f\x01\xfe\x05\x17\x1c\x1a\x07\xc3\x25\x82\x35\xd6\x9c\xa1\xb7\x0a\xed\x40\xb2\x04\xa8\xe1\x94\xac\x39\x63\xa8\x16\xc9\x8a\x0a\x8b\x23\xf3\xa8\x58\x64\x33\xc2\xf7\x49\x20\xcd\x3b\x98\x3f\xe9\x5a\x95\x68\x5d\x64\x76\x32\xf9\xb3\x63\x44\x96\x47\x60\x7f\xc1\x16\xa3\x72\x38\xe3\xf5\x09\x6c\x35\x2d\x7c\x0c\xac\x80\x7c\x44\x55\x40\x16\x25\x54\x94\x31\xae\xca\x96\x1e\xa7\x25\x58\xce\xa2\xc0\xc2\x11\x2a\xc6\x61\xc8\x5a\x5e\x28\x09\x5b\xce\xdc\x9a\x58\x1f\xc7\x59\x37\x91\x6c\x30\x11\xa5\x9f\xb4\xad\xea\x6c\x84\x01\x32\x5d\xf9\x56\xdc\xf7\xac\xd6\x78\xb2\x6c\xbf\x59\xda\x72\x63\xb5\xb3\x10\xbe\xe8\x4a\xbb\xc4\x2f\x9e\x3d\xbd\x73\xd4\xb8\xcf\xb5\x1c\x31\x7e\x52\xcc\x93\x63\xd4\x4c\x26\x91\x3f\xbe\xfa\x7c\x67\x68\xbf\xcf\xf9\x83\x8a\xbd\xc4\xdc\x79\x4f\x80\x2a\x06\x7a\xe3\x0f\x53\x2f\x12\x3b\xe7\x4c\x96\xb6\xc1\x8b\x93\x3d\x86\xe0\x98\xd4\x51\xfe\xb5\x03\xf8\xb2\x9f\x1f\x9b\xc1\xfc\x1b\xec\x00\xaf\x68\x00\x5a\xb0\x13\xe0\xfc\xad\xa1\x46\x01\xfb\x5e\xfa\xaf\x2c\xfd\xd3\xb1\x1d\x15\xc6\xf7\xba\xff\xaf\xd4\xfd\xf5\xa1\xec\xaf\x61\x0c\x7d\xd8\xed\x50\x58\xdc\xef\x07\x37\x10\x8f\x8d\x2b\x18\x10\x3c\x3e\xae\xa0\xab\x82\x08\xa8\xa3\x4e\xf2\x4a\xd8\x3b\x7c\x74\xc4\x34\x77\xe3\x78\xea\x95\x7c\x1b\x88\xc0\x38\x38\x18\x9e\xd8\xcd\xc5\xe1\xb0\x78\x53\xa2\xed\x0f\x8a\x23\xfa\xad\xef\x0b\x83\xed\x1f\x35\xbf\xa0\xd4\x9b\x2e\x99\xb1\xf6\x90\x37\xb0\xe0\xc3\xe2\x4f\x9f\x27\x32\x14\x60\x2f\xee\x22\x23\x99\x13\xa7\x6e\xa7\xab\xf3\xfb\x3f\x6e\xea\x33\x6e\x03\x97\xfd\xa9\x5a\xe1\xb6\x3f\x55\x07\xbe\x8d\xce\xfa\xaf\x3f\xfb\x43\xf0\x0b\x2e\x43\xb6\xce\x25\x77\x87\x4b\xcd\x1d\xdd\x60\x53\x0a\xc6\xdf\x58\x15\x38\x0d\xab\xe6\x44\x0c\x6d\x55\xd8\xc3\xa5\x29\x77\x0a\x72\xa7\x08\xa9\x0c\xf7\xf7\xf0\x76\xe2\xd6\xbc\x78\x68\x87\x5b\xce\xb0\x1d\xe5\xbc\x6c\x07\x2b\xed\x2f\xb8\x9d\x93\x1d\x6c\x2e\xe3\x07\x17\x08\x6e\x1c\x2d\xc4\x06\xcf\x1c\xd1\x5e\x68\xef\x0f\x57\xcd\x63\x4a\xf0\x4f\xd4\xa0\xf7\x2a\x34\x98\x44\xf7\x94\x1f\xa9\x2a\x50\xf4\x89\x68\x67\xaf\xcd\x00\xb5\x9c\xe1\x39\x64\x04\xe7\xfa\xab\xe3\x95\x76\xd6\x7b\xe9\xef\xcc\x61\x15\xf7\xf9\xbb\x0e\x44\xba\xbe\x3f\x5c\x27\x7c\xf2\x18\x69\xb7\xff\xf1\x56\x46\x3a\xdf\x02\x08\x5e\x98\x74\x58\xd5\x42\x90\xe6\x7f\x2f\xde\xf8\x89\x8a\x05\x87\xb2\x12\xd4\x21\x24\x15\x35\x8e\x53\x61\xd3\xd6\x73\xd2\x36\x6f\xae\x55\x02\x53\x78\xae\xac\xb3\x34\xcc\x66\x96\xae\xb4\x91\xcb\x37\x47\xcc\x05\x1a\xe3\xe7\x40\x80\xf1\x7b\x60\xf7\xf9\x27\x00\x00\xff\xff\x6d\xa1\xe9\x79\x30\x15\x00\x00")

func templatesDatasetFilterAgeSelectorRangeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetFilterAgeSelectorRangeTmpl,
		"templates/dataset-filter/age-selector-range.tmpl",
	)
}

func templatesDatasetFilterAgeSelectorRangeTmpl() (*asset, error) {
	bytes, err := templatesDatasetFilterAgeSelectorRangeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset-filter/age-selector-range.tmpl", size: 5424, mode: os.FileMode(420), modTime: time.Unix(1499353379, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetFilterFilterOverviewTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4d\x6f\xdb\x30\x0c\x3d\x77\xbf\x42\xf0\x9d\xf9\x5a\xd0\xae\x80\x1b\xa0\x68\xb1\x53\x0f\xc3\x80\x9d\x0b\x39\x62\x6d\x2e\xb2\x64\xc8\x4c\x83\xce\xf0\x7f\x1f\xfc\x21\x27\x8e\x9d\x36\xdd\xa2\x8b\x29\x3e\x89\x7c\x7a\xa4\xa5\x50\xd1\xab\x58\x6b\x99\xe7\x77\x81\x54\xbf\xb7\x39\xc3\x8b\x35\x0c\x39\xfd\x41\x80\xf9\x75\xb0\xfa\x72\x75\xb8\x26\x93\x31\x02\x19\x76\xb6\x42\x7a\xd0\xce\xc9\x2c\x43\x57\xfb\x7b\xc0\xda\x6a\xa8\xc0\x06\x39\x86\x5a\xef\xb1\x5b\x54\xbb\x20\x55\xb0\xbc\x69\x4c\x1d\xc3\xd7\x5b\xbf\xf8\x2a\x4c\xe6\x43\x4a\xcf\xcf\x4c\xac\x51\xd4\x27\xd8\x21\xc5\x09\xc3\xcd\x6c\x16\xac\xbe\x93\x66\x74\xc2\x66\x4c\xd6\xe4\xe1\x34\x99\xfb\xa4\x53\x45\xaf\x2d\xad\xce\xec\x2c\x6f\xb4\x5f\x21\x06\x4a\xac\xad\x61\x34\x2c\xb6\x46\xa1\xd3\x64\x10\xa4\xd6\xa0\xc9\x6c\xf2\xa0\xda\x50\x8d\x71\x8d\x44\x37\x4e\x48\x25\x7a\x63\x28\x9a\x18\x8c\xb3\x14\x14\xa9\x74\x31\x19\x88\x2c\xb3\x4d\x01\x96\xa3\xa1\xea\x70\x5b\xed\xa3\x69\xca\x19\xc0\xe0\x96\x9d\x1c\xcf\xdd\x6e\xd1\xe4\xb7\x24\xa4\x10\x20\x4f\x7d\x3e\x8d\x2f\x0c\x30\x13\x99\x54\x8a\x4c\xdc\xe5\x5f\x74\x1e\xb6\x59\x35\x8d\xac\x53\xe8\x3a\x3c\x96\x5a\xa3\x7b\xab\x22\x9d\x40\x52\x25\xbc\x6c\x62\x47\x8a\x93\xea\xa0\x4d\xaf\x9c\xe2\xf9\x9e\x5a\x8b\x65\xa7\xd6\xfc\x36\x58\x85\xc9\xc2\xaf\x3a\xfc\x31\x6e\xfc\xb9\x6a\xd6\xb3\x60\xf5\x48\x29\x9a\xbc\x6d\xaf\xc5\xaa\x6b\x99\xcf\x13\x98\xef\xcb\x35\x5f\x9e\x4f\xa0\xe9\xf1\xb3\xb2\x87\x53\x4d\xa7\xd1\xa2\x10\x4e\x9a\x18\xc5\xe4\x51\xb2\x9c\xec\x0f\x56\x96\xe7\x14\xfe\xe2\xf5\xae\xd7\x1d\x14\xfb\x93\x6d\x30\x1a\x26\x4f\x2f\xd4\x1d\x39\x3b\x6b\xe2\x55\x51\x4c\x1a\xfd\xcb\x32\x9c\xb6\xbe\xcb\xb5\x40\x51\x4c\xee\x95\x42\xf5\x20\x19\x63\xeb\x08\xf3\x2a\xcd\x3f\x47\xbf\xee\x82\x5f\x7f\xa0\x42\x1d\x45\x76\xed\xa7\xad\x64\x70\xf5\xb5\x5a\xc9\xdd\x9b\xeb\x38\x10\x89\xc3\x97\xbb\xa0\x28\x26\x4f\x64\x36\x93\x5f\x3f\x9f\xca\xb2\x26\x5f\x4f\x9f\x64\x84\xba\xe2\x2d\x3f\x60\xfd\x9f\xbd\x8b\x46\x89\x93\x9d\x1a\x4e\xb7\x7a\xf4\xea\x1c\x4b\x3a\x70\x0e\x1d\x07\x0a\x1f\xdd\xab\xdf\x86\x57\x78\x27\x64\xc4\x46\x44\x6c\x00\x32\x47\xa9\x74\x6f\xcd\x84\x13\x5a\x6f\x1a\x73\x47\x0a\x1b\x2b\xa2\xd8\xff\xe8\xad\xd0\x8b\xe3\xe7\x4d\xf4\xae\x85\x83\x2a\xd4\xbf\xef\x0f\x87\xaf\x84\xbb\x7b\xa3\x1e\xed\xce\x68\x2b\x95\x2f\x4c\x8b\x08\x69\x94\x50\x2d\x36\x52\x9d\x3d\x6d\x32\xf5\x0b\x17\x69\xbb\xde\xf4\x6e\x9f\xe5\xfb\x14\x1e\xa4\x59\xa3\xf6\x69\x9b\xd9\x51\xa2\x9e\xb2\xfb\xe7\xb6\x31\xda\xcf\xdf\x00\x00\x00\xff\xff\x5e\x98\xa2\x32\xab\x08\x00\x00")

func templatesDatasetFilterFilterOverviewTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetFilterFilterOverviewTmpl,
		"templates/dataset-filter/filter-overview.tmpl",
	)
}

func templatesDatasetFilterFilterOverviewTmpl() (*asset, error) {
	bytes, err := templatesDatasetFilterFilterOverviewTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset-filter/filter-overview.tmpl", size: 2219, mode: os.FileMode(420), modTime: time.Unix(1498832428, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesErrorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xc1\x8e\xd3\x30\x10\xbd\xe7\x2b\x46\xbe\x3b\xd5\x5e\x51\x1a\x21\x01\x12\x48\x70\x5b\xc4\x71\x35\xb1\x27\xb5\x55\xc7\x63\x79\x26\xe9\x56\x4b\xfe\x1d\xa5\xb0\x2c\xad\x7a\xe2\xf4\xc6\xcf\x6f\x34\xe3\xf7\xdc\xf9\xb8\x80\x4b\x28\xb2\x37\x05\x0f\x64\x03\xa1\xa7\x0a\x92\x50\xc9\xf4\xcd\xbf\xf7\xa7\x8a\xa5\x50\xdd\xd8\xf0\x70\xa7\xe9\xe9\x49\xa3\x26\x82\x31\xcd\x12\xac\x0d\x98\x46\x6b\x07\x56\xe5\xc9\xf4\x2f\x2f\xd0\x7e\xaa\x95\x6b\xfb\x78\x11\xad\x6b\xb7\x0b\x0f\x7d\xd3\xed\x7c\x5c\xfa\xe6\x15\xef\xcc\x83\x82\x99\x92\xb5\x13\xd6\x9b\x85\x0e\x35\x7a\xbb\xa9\xee\xf1\x8e\x13\x78\x92\xa3\x72\xb1\x17\x62\x9c\x53\xb2\xa7\xe8\x35\x6c\x72\xac\x1a\x5d\xa2\xeb\xc6\x81\x9f\x61\xe0\x67\x6b\x0b\x7a\x4f\xfe\x77\x5d\xc9\x5b\x8f\xf5\x78\x7d\xb2\x56\xa8\x60\x45\x25\x6f\x13\x8d\x0a\x42\x4e\x23\x67\xf2\x66\x7b\xcd\x7f\x6f\xa9\x27\xb6\x1a\x62\xf5\x62\xfa\xe6\xcd\xb4\x8f\x24\xae\xc6\xb2\x4d\x80\x9f\x20\x38\xd2\xe7\xc7\x6f\x5f\x61\x5d\x9b\xae\xf4\x5f\x46\x38\xf3\x0c\xa2\x31\x25\xa0\xec\x78\xce\xba\xf9\x56\x79\x48\x34\x09\x94\x44\x28\x04\x1d\x42\xa8\x34\xee\xcd\x84\x31\x29\xbf\x3b\xd1\xd0\x3a\x9e\x26\xca\x2a\xef\x39\x4b\x7b\xe0\xa5\x9d\x8f\x06\x2e\x31\xee\xcd\x07\xce\x8a\x4e\xe1\xbb\x98\xde\xfd\xa9\x67\xe9\x76\xd8\xb7\xf0\x83\x00\x0b\x27\x3e\x44\x21\x18\xb9\x02\xe6\x33\xc4\xec\x38\x2f\x94\x23\x65\x47\xa0\x21\x0a\x4c\x78\x86\x80\x0b\x81\xc3\x59\xc8\xb7\xdd\xae\xfc\xcd\xfc\x16\xde\x22\xb9\xfe\x13\xaf\xf8\x2b\x00\x00\xff\xff\x38\x7a\x05\x98\xac\x02\x00\x00")

func templatesErrorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesErrorTmpl,
		"templates/error.tmpl",
	)
}

func templatesErrorTmpl() (*asset, error) {
	bytes, err := templatesErrorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/error.tmpl", size: 684, mode: os.FileMode(420), modTime: time.Unix(1497607783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomepageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\x36\xf6\x7d\xef\xa7\xb8\x83\x97\xdf\x4c\x66\x28\x5a\x8e\x7f\x69\xb3\x23\x33\x93\xc6\x4d\x9b\x26\x6b\x67\xe3\x38\xdd\xf6\xc5\x03\x91\x57\x24\x6a\x10\xc0\x02\xa0\x64\x45\xe3\xef\xbe\x03\x90\x94\x28\x8a\x54\xec\xd0\x4d\xdd\x6d\xfc\x62\x11\x7f\x0e\x2e\x2e\xce\xc1\xbd\x00\xf9\xcd\x24\x61\x73\x88\x39\x35\xe6\x98\x28\x9a\x62\xc0\x84\xd5\x12\xa6\x34\xbe\x4a\xb5\x2c\x44\x12\x04\xd4\x58\x4d\x39\x89\xbe\x01\x00\x68\xb6\x5f\x68\xaa\x14\xea\xaa\xa6\x5d\x1b\x4b\x1e\xb8\x16\x8d\xea\x9e\x66\x1d\x2d\x7c\xab\x6c\xbc\x6b\xd9\xe5\xa5\x65\x96\x23\x89\x7e\x41\x1e\xcb\x1c\xc1\x4a\xb0\x19\xc2\xd9\x6c\xc6\x62\x84\x99\xd4\x70\x4a\x2d\x93\x82\x72\x38\xb7\xd4\x32\x63\x59\x6c\x26\x61\x36\xee\x19\x44\x75\x8d\x11\x4b\x61\x51\x58\x12\xbd\xcf\x10\x2e\x5e\xff\x9f\x01\x4e\x75\x8a\xc6\x02\x13\x09\x2a\x14\x09\x0a\x0b\x4a\xcb\xa4\x88\x51\x83\x9c\x81\x74\xe3\x33\xca\xc1\xac\x07\x05\x2a\x12\x6f\x9b\xc6\x58\xa6\x82\x19\x4c\x40\xd4\xb6\xad\x9b\x51\x0e\x4c\x18\xcb\x6c\x61\xd1\x01\x59\x3f\xe2\x68\x12\xaa\x0e\xbf\x85\x09\x9b\x37\xbc\xbd\x79\xac\x7e\x56\xff\xb6\x56\xb5\xb9\x94\x29\xe5\x1c\xf5\x72\xef\x5a\x6e\xe0\xb3\xc3\xe8\x0d\xb5\x6e\xd6\xaa\x98\x72\x66\x32\x4c\x40\x23\x47\x6a\xd0\x79\xf4\xb0\x61\x49\xc1\x81\x25\xc7\xa4\xae\x0d\x38\x33\x96\xd4\xd8\xee\x21\x08\x04\x16\x8e\x47\x50\xf3\x02\x72\xaa\x53\x26\x02\x8e\x33\x1b\x04\x07\xf5\xe3\x54\x5a\x2b\xf3\x20\x38\x68\xb1\x62\xb5\xd2\x54\xa4\x08\xa3\x13\x6a\xe9\xe8\x5d\x35\xd0\xcd\x4d\xcb\x49\x13\xce\x1a\xcc\xf2\x83\x05\x3c\x0d\x0e\x9f\xd6\x96\xb7\xc7\x39\xac\x0b\x34\x4b\x33\x1b\x04\xe3\xb6\x5d\x4d\xff\x2d\x32\x66\x11\x14\x4d\x12\x26\xd2\xc0\x4a\xe5\xda\xd7\x8f\x6b\x80\xba\xa0\x1e\x62\x53\x52\x62\x8e\x3b\x09\x3f\xc9\x1e\xd7\x96\x57\xa6\xae\xb9\x3e\xa1\x90\x69\x9c\x1d\x93\xd5\x0a\x46\x17\xef\x5e\xdd\xdc\x90\xc8\xfd\x7c\xef\xaa\x6f\x6e\x26\x21\x8d\x26\x61\xf6\xb8\x13\x55\xed\x80\xae\xc9\xed\x20\x2a\x47\x9e\x50\xeb\x81\x76\x48\x37\x09\x39\x6b\x2f\x04\x8a\xa4\xe1\xf7\x49\x58\xf0\x16\x6b\x7e\x42\x9a\x70\x26\x10\x66\x2c\x2d\x74\x1f\x59\xb2\xaa\x55\x50\xb5\xba\x1b\x5f\xf6\xd2\xa3\x36\xe0\x65\x89\x7c\x5b\x96\x8c\x8f\x60\x6d\x54\x42\x2d\x7d\x28\xd4\x58\xad\xd8\x0c\x46\xe7\x8a\xea\x2b\x67\x9b\x9b\xe2\xce\x94\xaa\x89\x35\x24\xbd\x35\x95\xcb\x4b\x53\x77\x6f\x6a\x7c\x5f\xff\x75\x07\xf8\xdd\x04\x81\xc9\xe4\x82\x80\x83\x0a\xd6\x15\x8e\x90\x95\xdb\x5b\xc6\xc1\x6a\x15\xc0\xe8\x57\xf0\xbf\x3c\x5f\x7a\x36\xf9\xfa\x6f\xdd\x1f\x32\xd4\xd8\x6f\x5f\xb5\xc1\xf5\xd5\xaf\x56\xe1\x23\x38\x3d\x83\x9f\xcf\xe1\x51\xd8\xe3\x23\x8f\x23\xa4\x89\x35\x53\x76\xbf\x55\x13\x96\xa7\x3b\xee\x08\x58\x4e\xd3\xd2\x29\x19\x4b\x90\x80\xd1\x71\x43\x9a\xe1\xba\xa1\x6f\xb7\x67\xde\x93\x70\xbf\x15\xfd\x93\x6d\x6b\xb0\xd1\x67\xb3\x8b\xb4\xd6\xff\x3e\xf7\x92\x16\x74\x29\xe0\xde\x99\x96\xf4\x2d\x43\x49\xa9\xc8\xd1\x5b\x8d\x17\x82\xd9\x9b\x1b\x37\x74\x77\xcd\x9e\x49\x96\xa0\xad\x8e\xe5\xbf\x3d\xed\x77\x8c\xe8\xb1\xa0\x2e\xee\x75\x71\x57\x68\x6e\x7a\x67\xc6\x0b\x93\xdd\xd7\xf6\x0a\x77\xdf\xae\xfc\xe6\xf3\x40\xe2\xda\x67\xf1\xf1\x8d\x94\x57\x4c\xa4\x2e\xb7\x4b\xe4\x42\x70\x49\x13\xb0\x2c\x47\x30\xa8\x19\x9a\x67\xfd\x24\xdd\x59\x84\xf7\x7a\x09\xb2\xd0\xcd\xee\x80\xd7\x8a\x4b\x8d\x7a\x67\x3d\xb6\x57\xa3\x23\xb0\x9d\xd9\x0c\x35\x9c\x9d\x9e\xfb\xdc\xae\x23\xe7\xeb\x8e\x74\xd2\x75\xbb\x87\x9c\xe8\x49\xcb\xc1\x2d\x5e\x64\xe8\x57\xca\xb8\xac\xe6\xf1\x36\x4b\x7c\x45\x9e\xf8\x8a\xea\x89\xa7\x41\x70\xf4\x5d\x07\x0d\x9a\x2c\x3a\xe8\xb1\xa8\x4d\xaa\x75\x36\xf5\x89\x6c\xbf\x45\x98\x7e\x8e\x55\x1c\x6e\x53\xae\x0b\xbf\x3d\xc6\x54\x5e\xaf\x93\x1c\x68\x3e\x04\x41\x26\x73\x74\x79\xfe\xd6\x30\xce\x11\xe3\x6f\xb7\xb9\xec\x7c\x38\x3e\xd8\x2e\x73\xee\x1b\xff\x7f\xd3\x99\xe3\xa7\x5b\xce\x3c\xda\x6e\xef\xca\xda\x69\x4a\x8f\x34\x3c\x41\x2a\x49\xec\xd8\x76\xd8\x10\x49\x98\x21\x57\x21\x97\x31\xe5\x1b\xd2\x6d\x04\xe3\x8e\x3f\xbe\xb2\x41\xc9\x67\x13\xa3\xa8\xa8\x47\xf2\x31\x29\xc8\x24\x4f\x50\xc3\x82\x25\x36\xf3\x73\x7d\x5a\xfd\xf6\xb3\x1a\x57\x0f\xde\x31\x6e\x74\x17\x05\x7d\x90\x1b\x8d\xc2\xd1\x28\x64\x79\x1a\xda\x71\xe0\x07\x1a\x29\x91\x12\xa0\xdc\x1e\x93\x35\xb7\x85\x0c\xa6\x52\x27\xee\x34\x31\x71\xd1\x50\x44\x5b\x26\x94\x4b\xc2\x59\x7c\x45\xa7\x7e\x07\xa8\xda\xec\x89\x3c\x6d\x71\x37\x28\xea\x8d\x24\xd1\x73\xc8\xa8\x48\x96\x90\x16\x2c\xf1\x87\x42\x8e\x16\x96\xb2\x80\x2b\x21\x17\xb0\x70\x49\x85\x2b\x9d\x31\x91\xec\x78\xa8\xfb\xb0\x05\xbb\x07\xae\x3d\xc5\xbb\x1b\xf9\xad\xc4\x79\xd4\x16\x67\xaf\x1c\x6b\x01\xee\xd1\xe8\xff\x8a\x28\xef\xa4\xc0\xbb\x0b\xac\x29\xa7\x18\x85\x29\x0c\x89\x5e\xf8\xff\xf7\x44\xd3\xbb\xea\xed\x71\xaf\xc4\x4a\xf3\x02\x2e\x53\xd9\x10\x5a\x69\x2c\xb8\xd2\x3d\x9a\xbb\x85\x8c\x2c\xe3\x68\x1a\x07\xc2\x13\x66\x62\x39\x47\x0d\x99\x5c\xf8\xa8\x59\x8e\xdf\xbc\xd3\x70\xfb\x0f\x28\xca\x84\x05\x0a\x8a\xc5\xb6\xd0\xeb\x6b\x8b\xf2\x72\xc3\x87\x46\x07\xb0\x40\xe0\x6c\x8e\x5f\xd5\xf5\x77\x55\x57\x66\xad\xfa\x47\x18\xce\x99\x29\x28\x1f\x49\x61\x46\xa9\x9c\x8f\x8a\x2b\x02\x96\xea\x14\xed\x31\xb9\x9c\x72\x2a\xae\x48\xf4\xa1\x6c\x72\x76\x7a\xfe\xe0\x24\x58\x5a\x1f\x38\xeb\x37\x0a\xfc\xe1\x9a\xe6\x8a\x7b\xe2\x33\x61\x51\xd3\xd8\xb2\x39\xfa\xd3\x31\x94\x1d\x98\xf1\x62\xd8\xd5\x67\x35\x2a\x2d\xac\xac\x5d\x1d\x1c\x3e\x19\xa2\xda\x8d\xf3\x80\x19\xa0\xb0\xc0\xa9\x71\x2c\x2e\xd3\x5c\x97\x16\x08\x5c\x00\x55\x4a\x4b\x1a\x67\x68\x5c\x1c\xcc\xa9\xcf\x17\x5c\x9f\xe6\x85\x65\x1c\xa3\x31\x6c\xca\xd1\x8b\x58\x23\xc7\x39\x15\xd6\x75\xa0\xce\x6e\x2c\x2f\x02\x63\xa0\x45\xc2\x50\xc4\x5f\x46\xdb\x5e\xcd\x79\x12\x1c\x7d\xdb\xbc\xce\x6b\x28\xfe\xe8\xbb\xdb\xca\xfc\xcf\xd2\x70\xf7\xb5\xce\x9d\x35\x3c\x2c\xd6\x61\x2c\x85\xcc\x97\x21\x13\x33\x5e\x5e\x43\x8b\x44\x69\x16\x23\x13\x09\x8b\xd1\x84\xd3\x82\x73\xb4\x4c\x98\x30\x96\xc2\x14\x39\xea\xaa\xba\x6a\x1f\x72\x7f\x4c\x26\xd1\x89\xe3\xf9\x79\xec\x29\x00\x2f\x68\xae\xee\x2d\x74\x76\x65\x78\x5e\xa0\x9f\xb8\x3e\xfa\xbe\x60\xdc\x79\x1c\x16\x52\xf3\x24\xe0\x48\xfd\x13\x5e\x2b\xd4\x96\x19\x04\x26\x7c\x88\x62\x42\xc8\x39\xf5\x62\xa5\x4a\x71\x16\x97\x21\x4b\xce\x4a\xed\x9a\xf8\xcb\xd3\xba\xf3\xa8\x56\x05\xb2\xcd\x0e\xf1\x95\xd4\xdd\xa4\x56\x28\x15\x47\x25\x55\xb1\xe6\x74\x2c\xf3\xbc\x10\xcc\x2e\xc3\xad\xe2\x9c\xa5\xba\xa4\xf1\xa6\x18\x8d\x65\xb9\x23\x75\x83\xfb\x54\x88\x82\xf2\x9c\x25\x4b\xa4\xba\xab\x69\xad\x82\x1f\x51\xa6\x9a\xaa\x6c\x59\xbd\x08\xb2\x7f\xb8\x08\xa0\x75\xee\x39\xf0\x9b\x3f\xb3\x3e\x57\x93\x0a\x05\xa4\x1b\x9b\xa4\xb6\x94\x83\x3b\x10\x32\x71\x85\x49\x45\x70\x66\xf1\xcb\x9c\x77\xbe\xd2\xfb\xaf\x4e\xef\xb3\x0f\xa3\x8b\xd7\x7f\x02\xa5\xcb\x4b\xb6\xae\x17\xaa\xd5\x0b\xd7\x04\x58\xae\xa8\xb6\x8c\x72\xbe\xf4\x99\xca\x4c\x23\xc2\x4c\xcb\x1c\x94\xe4\xac\x7e\xab\x3a\xe3\xc5\x1f\xb3\x9b\xb7\x6e\x06\x57\xab\xf0\xd1\xf6\x3d\xe1\x4b\xa4\xee\x60\x94\x40\x45\x87\xee\x6b\xc1\x59\xd5\xea\x33\x6e\x06\xf7\x5f\x04\x36\xd2\xa4\x07\xf0\xb6\x73\xa3\xf2\xa3\xee\x0b\xe2\xce\x3b\xe0\x8b\xd7\xf0\x16\xb5\x51\xe8\x53\x6b\x03\x87\x07\xe3\x27\xdd\x44\xbb\xdd\x56\x54\xee\x3f\x7f\x59\x77\x9c\x34\xd2\x13\x88\xcb\x94\xeb\xef\xeb\x8d\x57\x8d\xaf\x30\x34\xce\x19\x2e\x5c\x0a\x77\xf1\x1a\xca\x1c\x97\xc5\x5b\x57\xf2\x9f\x76\x53\xef\x55\xff\x1d\xaf\xf8\x5d\xab\xcf\xf9\xf8\x61\xef\xcb\x6c\x6f\xc9\x1d\x5e\x61\x3f\xf8\x55\xed\x5f\xd7\x5b\xbc\x88\xbc\xed\x07\x09\xf5\xd3\xfa\x35\xf0\xf6\x27\x32\x7d\x5f\xc8\xdc\xe5\x63\xa7\xec\x30\x7a\xee\xce\xc6\xbf\x39\xf2\x35\x3f\xe8\x59\x47\xdb\x5d\xae\x54\x68\x34\xf8\xe8\x69\xd2\x5e\xac\xb6\xbb\x1a\xab\x5c\x77\x09\x98\xc5\xbc\x99\x23\x50\x2b\x3f\x3e\xa3\x1f\x8f\x29\x89\x9e\x97\x5e\xdb\xb3\x03\x7c\x12\x65\x4a\xa2\xef\x87\xa3\xc4\x24\x7a\x31\x1c\x25\x21\xd1\xc9\x70\x14\x24\xd1\x0f\xc3\x51\x66\x24\x7a\x39\x1c\x25\x25\xd1\x8f\xc3\x51\x32\x12\xfd\x34\x1c\x85\x91\xe8\xd5\x70\x94\xdf\x49\xf4\xf3\x70\x94\x2b\x12\xbd\x1e\x8e\xc2\x49\xf4\x66\x38\x4a\x4e\xa2\x7f\x0e\x47\x11\x24\x3a\x1d\x8e\x22\x49\x74\x36\x1c\x45\x91\xe8\xed\x70\x94\xff\x90\xe8\x5f\xc3\x51\x34\x89\xde\x0d\x47\x31\x24\x3a\x1f\x8e\x62\x49\xf4\x7e\x38\x4a\x41\xa2\x8b\xe1\x28\x73\x12\x7d\x18\x8e\xb2\x20\xd1\x2f\xc3\x51\xae\x49\xf4\xef\xe1\x28\x4b\x12\xfd\x3a\x1c\xe5\x23\x89\x7e\xdb\x45\xd9\xc4\xf8\xed\xb0\xfe\xdf\x00\x00\x00\xff\xff\xfb\x0f\xef\xf8\xd0\x2c\x00\x00")

func templatesHomepageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomepageTmpl,
		"templates/homepage.tmpl",
	)
}

func templatesHomepageTmpl() (*asset, error) {
	bytes, err := templatesHomepageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/homepage.tmpl", size: 11472, mode: os.FileMode(420), modTime: time.Unix(1497607783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x97\xe1\x6e\xe3\x36\x12\xc7\x3f\x37\x4f\x31\x55\x81\x93\xbd\x11\x25\xab\xb9\xe4\xbc\x1b\x2b\x40\xb6\x1b\xf4\xf6\xae\xbb\x59\xdc\xa6\xb8\x3b\x04\x01\x4a\x4b\x23\x89\x29\x45\xaa\xe4\x28\xae\xa1\xe8\xdd\x0b\x4a\x76\x6c\x27\x69\x36\x45\xb0\x5f\x24\x4b\x9c\xf9\xfd\x67\x86\x43\x8a\x9e\x7d\xfb\xee\xfc\x87\x8b\xff\x7f\x3a\x83\x92\x2a\x79\xb2\x37\x5b\xdf\x90\x67\x27\x7b\x00\x00\x33\x12\x24\xf1\xa4\x6d\x21\xfc\x80\xc4\x33\x4e\x3c\xbc\x70\xaf\xa0\xeb\x80\xc1\x79\x9e\x8b\x14\x21\xd7\x06\x3e\x72\x12\x5a\x71\x09\x9f\x89\x93\xb0\x24\x52\x3b\x8b\x06\xef\x81\x54\x21\x71\x50\xbc\xc2\xc4\xcb\xd0\xa6\x46\xd4\xce\xc1\x83\x54\x2b\x42\x45\x89\xb7\x23\xf2\x6e\x63\xd2\x75\xde\x43\xc4\xaf\xb8\x5c\x68\x93\xd9\x1d\x7f\xc3\x55\x81\x5b\x90\x7f\xaf\x8c\xba\x0e\xda\x96\x41\xd8\x75\x01\xb4\x2d\xaa\xec\x1e\xb2\x24\xaa\x19\xfe\xd6\x88\x9b\xc4\xfb\x1f\xfb\xf9\x94\xfd\xa0\xab\x9a\x93\x98\x4b\xdc\xe2\xbf\x3f\x4b\x30\x2b\x30\x48\x4b\xa3\x2b\x4c\x62\x0f\xa2\x6d\x48\x5a\x72\x63\x91\x12\xaf\xa1\x9c\x4d\xbd\xdd\xb1\x35\x63\x21\x32\x2a\x93\x0c\x6f\x44\x8a\xac\x7f\x08\x84\x12\x24\xb8\x64\x36\xe5\x12\x93\x38\x9c\x04\x8d\x45\xd3\x3f\xf2\xb9\xec\x75\x86\x94\x6f\x04\x2e\x6a\x6d\xe8\x91\x6a\xe4\xda\x54\x9c\x58\x86\x84\xe9\xbd\xaa\x12\x4a\xac\x4b\xad\x30\x51\xfa\x11\x4f\x2a\xb1\x42\x96\x6a\xa9\xcd\x96\xd3\x77\x87\xd3\xc3\xd7\x87\x6f\x1f\xb1\xe7\x75\x2d\x91\x55\x7a\x2e\x24\xb2\x05\xce\x19\xaf\x6b\x66\x89\x53\x63\xd9\x9c\x1b\x66\x69\xb9\x53\xb4\x0d\x69\xef\x9b\x6f\xda\xf6\x97\xd9\xb7\x8c\x5d\x8a\x1c\x24\x21\xbc\x3f\x83\xe9\xd5\xc9\x2f\x70\x0b\x96\xe7\xf8\xcf\x8b\x0f\x3f\x75\x5d\x2f\x08\x30\x93\x42\xfd\x0a\x06\x65\xe2\xf5\x44\x5b\x22\x92\x07\xa5\xc1\xdc\x4d\x74\xf8\x89\x13\xa1\x51\x3f\x89\xb9\xe1\x66\x79\x6a\x2d\x92\xfd\xc4\xa9\xec\xba\x28\xb5\x36\xd2\x32\x63\x02\xc3\xd4\x5a\xef\x64\xad\x7b\x89\x2a\x13\xf9\x15\x63\x8f\x29\x6e\x45\xf6\xfe\x0c\x5e\x7f\x9d\xa8\x04\xb2\xd7\xab\x98\xee\x34\xff\x34\xaa\x9d\x6a\x15\xb4\x0a\xcb\xbd\xf8\x2a\xb1\x55\x5c\xa8\xfb\xb1\x31\xf6\x44\x7c\xb3\x68\xd8\x25\x66\x73\x9d\x2d\x21\x95\xdc\xda\x61\x09\x5f\x2c\x6b\xb7\x3b\xb8\x19\x1f\x48\x40\x58\xd5\x92\x13\x82\x57\x73\xe3\x7a\xdd\xf6\xbe\x68\x3c\x08\xa1\xeb\xf6\x56\x4d\xc6\x85\x02\x91\x25\x9e\xfb\xe1\x81\xd1\x12\xd7\xbf\x89\xcf\x85\xca\xf0\xf7\xc4\x63\xf1\x2a\xc0\x01\xbd\x14\x28\xb3\x55\x09\x66\x7d\x0e\x4f\xaa\xe6\x5a\xd3\xae\xea\x83\x1a\x4f\x9f\xaa\x71\xdb\x46\xaf\xe0\xe2\xfc\xdd\x39\x30\x68\xea\xcc\xc1\xb5\x02\x29\x6e\x10\xe6\x8d\x90\x19\x90\x86\xc6\x22\xd0\x42\xc3\xbf\x3e\x43\x2e\x24\xda\x00\x94\x26\xe0\x60\x85\x2a\xa4\xb3\x47\x78\x15\x6d\x66\x6d\xd8\xe5\x80\x96\xb5\x5b\x8c\xf8\x3b\x45\xd7\xfc\x86\x0f\x6f\x3d\xb0\x26\xfd\xd2\xe4\x5d\xaf\xe6\xee\xda\x7a\x27\xb3\x68\x70\x3c\xf9\x0b\x74\x07\xe0\x75\xfd\x88\xff\x97\x7b\x60\x6f\x4b\x64\xad\x39\xca\x1b\xd5\xef\x41\x23\x11\xd8\x40\x07\x45\x60\x02\x1e\x54\xe3\x56\x5c\xfa\x3f\x6a\x5d\x48\x3c\x55\x5c\x2e\xdd\xf7\xe1\x7c\x7e\x8d\x29\xf9\x57\x89\x39\x16\x97\xe6\x2a\x71\x97\xdb\xdb\x3b\xff\x71\xbb\x46\xba\x81\xf0\xb7\x64\xb8\xdd\xde\x5e\x5e\x8d\xc3\xba\xb1\xe5\x88\x9b\xa2\xa9\x50\x91\x1d\x77\x41\x3f\x28\x93\xf8\x95\xc2\x05\xbc\xe3\x84\xa3\xf1\x31\x4f\x6c\x98\x1a\xe4\x84\x67\x12\x9d\xe1\x48\x8f\x83\x15\xb4\x4a\x6c\x58\x20\xad\x06\xec\xdb\xe5\x05\x2f\x3e\xf2\x0a\x47\x7a\x7c\x39\xb9\x3a\xe6\x21\xb7\x4b\x95\x26\xf1\x31\x0f\x5d\x9d\x8a\xe3\x2a\xac\xb9\x41\x45\x1f\x75\x86\xa1\x50\x16\x0d\xbd\xc5\x5c\x1b\x1c\xb9\xf4\x56\xd4\x6e\x3c\x5a\x08\x95\xe9\x45\x90\xe9\xb4\x8f\x2d\xf0\x87\xfa\xf8\x81\x1f\x45\x8b\xc5\x22\x2c\xfa\x22\x30\xbe\xae\x42\x98\xea\x2a\xda\x3c\x5d\x5b\x3f\xf0\x0b\xee\x8f\x8f\x57\xc8\x82\x8f\xfc\x21\x09\x3f\x00\xff\xe7\x53\x76\x78\x34\x7d\xfd\xfd\xe4\xe0\x1f\xec\xc0\x0f\xa0\xf5\xb9\x94\x7a\x71\xaa\xd2\x52\x1b\xff\x0d\x90\x69\xb0\xdb\xf1\xb5\xa8\x32\xe7\x59\xf3\x02\xdd\x27\xa4\x77\x72\x0f\xfe\x1b\x90\x3a\xed\x3f\xdb\x61\xcd\xa9\x74\x1b\x3c\xec\x43\x81\xf4\x19\xb9\x49\xcb\xd1\x18\xf6\x37\x16\x25\xb7\xe5\x06\xbc\x9e\xa4\x6d\xeb\xf6\x6e\x61\xee\xae\x94\xff\x96\xa8\xc0\xf6\x46\x20\x2c\x54\xfa\x06\xfb\x95\x62\x50\x65\x68\xd0\xc0\x02\x7d\x29\x41\xe1\xf0\x9a\x67\xd9\xda\x9a\xd0\x54\x20\x14\x69\x70\xf1\xc2\x8f\xa7\x60\xd0\xd6\x5a\x59\xdc\x92\x8a\x22\x10\xf9\xe8\x61\x26\x49\x92\x80\x1f\x0d\x24\x7f\x27\xb8\x28\xea\x6f\x37\xdc\x80\x6a\xaa\x39\x9a\xf3\xfc\x3f\x68\x1b\x49\x16\x12\x68\xdb\xef\x44\xee\x74\x1a\x49\xe1\xbd\xe1\xfe\x1c\xf1\xc4\x10\x4a\x8b\x5d\x07\x13\x97\xbe\xc8\xbb\xee\xf8\xa1\xa8\x41\x6a\x8c\xda\x94\x75\x95\xe9\x3e\xf8\x7f\xbb\x47\x4c\x7c\xd8\xbf\x1f\xdf\x3d\x60\x07\x4e\x11\x1e\xc9\xed\x71\x99\x07\xee\x5b\x3b\xd1\xc6\x6b\xdd\xca\x7b\x7b\x77\x96\x1f\x90\xdb\xc6\x20\x90\xa8\xfa\x2d\xaf\x9f\x0e\x06\xa9\xc1\x4c\x90\x9b\x34\x77\x82\x7a\x13\x45\x25\xca\x3a\xbc\xeb\x65\x77\x5a\xea\xbb\x7b\x68\xf9\xbb\xf7\x51\xd5\xe3\x84\x2a\x98\x03\x32\xad\xd8\x5c\x37\x2a\x45\xe6\xb8\xd1\xfd\x16\x73\x36\x26\x8e\x47\xe3\x76\xbb\x9d\xf1\x06\x15\xb9\x1f\x17\xa2\xc2\x73\xf5\xc9\x35\x74\x00\x7e\xdc\x5f\x62\x76\x30\x01\x8b\xa9\x56\x99\x75\xfd\x0e\xbe\xd2\xea\xbd\x22\x34\xbc\x67\xfa\x6f\x20\x86\x6e\x7c\xdc\x3d\xaa\x75\xf0\x4c\xad\xef\xdd\xe5\x20\x66\x47\x2f\xd0\x3a\x7a\xa6\x96\x5b\xeb\xfe\x51\xcc\xe2\xe9\x0b\xc4\xe2\xe9\x33\xd5\xfe\xde\x57\x71\xea\x52\x7b\x49\x6e\x93\x67\xca\x1d\xf6\xc9\x4d\xfa\xec\x5e\x94\xde\x73\x05\x8f\x86\xfc\x26\xf1\xfe\x5f\x51\x7b\x06\x78\xd2\x5f\x58\xfc\xac\x2c\x56\x58\x8b\xe4\x20\xba\xa1\xd1\xaa\xd5\x83\x38\x9e\x4c\x26\x7f\x6a\x70\x10\x07\x07\x4f\x1a\x1c\xc5\xc1\xd1\x93\x06\xf1\x34\x0e\xe2\xe9\xd3\x8c\x49\x1c\x1c\x4d\xbe\x40\x99\x38\xcc\xb6\xd1\xe6\x04\x31\x8b\xdc\xc1\xd0\xdd\x87\x3f\x95\x7f\x04\x00\x00\xff\xff\x32\x7b\x79\x18\x6c\x0e\x00\x00")

func templatesMainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainTmpl,
		"templates/main.tmpl",
	)
}

func templatesMainTmpl() (*asset, error) {
	bytes, err := templatesMainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.tmpl", size: 3692, mode: os.FileMode(420), modTime: time.Unix(1498748517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsFilterSelectionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6a\xc3\x30\x10\x86\xf7\x3c\xc5\x21\xba\x2a\x6a\x33\x74\x28\x8a\x21\x50\x3a\x65\x0a\x74\x0e\x57\xeb\x92\x88\x5e\xe4\x22\xc9\x5e\x84\xde\xbd\xc8\x8a\x9d\xba\xd0\x2e\xe6\xb0\xbf\xff\xbf\xfb\xac\x8d\x1d\xa0\x65\x0c\x61\x2b\x4e\x96\x23\x79\x19\x88\xa9\x8d\xb6\x73\xa2\x59\x01\xe8\x0b\xa1\x21\x5f\x46\x80\xff\xe8\xe3\xb1\x92\xa2\xa2\x25\xb9\x69\x52\x82\xf5\x2b\x46\x5c\xbf\x8d\x74\xd8\x5d\xbb\xde\x45\xc8\x19\xd0\x18\x32\x5a\x5d\x36\x13\x9e\x12\x3c\x0c\xc8\xf0\xb2\xfd\x23\x72\xe7\xec\x09\x1c\x55\xfa\xf1\xfe\x41\x23\x5c\x3c\x9d\xb6\x62\x5e\x7a\xa0\x6b\x37\xd0\x8e\x79\xfd\x7e\xd8\x43\xce\xa2\xa9\x6f\x00\x99\xb5\xc2\x1f\x9b\xc9\x99\xa9\x48\x2b\x63\x87\xd1\x5c\xdd\xd5\x75\xcf\x93\x37\xdb\x10\xa1\x3c\xa4\x74\xd4\x47\x8f\x7c\x33\x4e\x09\x3c\xba\x33\xfd\x3a\xbf\x78\xce\xdd\x6c\x1b\x1d\xbe\xd0\x4d\x65\x6d\xc7\xd0\x76\x2c\xe5\xd5\xc8\xe7\x3a\xf1\x59\x3e\x6d\xc4\xf8\xe7\xf6\xf8\x41\x0c\x39\x6b\x55\x32\xcb\xa4\x1f\x4d\x24\x5b\xf7\x29\x9a\x85\x7a\x75\x5c\x1a\x17\xdb\xa9\x45\xb1\x9d\x0f\x9e\xbd\xb5\xea\xb9\x59\xdd\xdc\xbf\x03\x00\x00\xff\xff\xab\x41\x8c\x35\x15\x02\x00\x00")

func templatesPartialsFilterSelectionTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsFilterSelectionTmpl,
		"templates/partials/filter-selection.tmpl",
	)
}

func templatesPartialsFilterSelectionTmpl() (*asset, error) {
	bytes, err := templatesPartialsFilterSelectionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/filter-selection.tmpl", size: 533, mode: os.FileMode(420), modTime: time.Unix(1499421053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x51\x6f\xdc\xb8\x11\x7e\xcf\xaf\x18\xa8\x40\x9f\xaa\x55\x12\xa3\x7d\x70\x77\xd5\x06\x76\x92\x1a\x4d\x6d\xa0\x76\xd1\xc7\xc5\x2c\x39\x92\xe6\x4c\x91\x3a\x72\x24\x65\xcf\x30\x70\x3f\xe7\x7e\xd7\xfd\x92\x03\xa5\xdd\xf5\x7a\x77\x1d\x27\x41\x7c\x0e\xee\x4d\x1a\x72\x86\xdf\x90\xdf\x70\x66\x38\x2d\x9c\x13\xf2\xa0\x0c\x86\x30\x4b\x1a\xcf\x56\xd2\xb4\x62\x4d\x49\xfe\x02\xe0\xe6\x86\x0b\x98\xfc\x87\x04\x35\x0a\x4e\xde\x0d\x93\x27\x6f\x2d\x2e\x0c\xe9\xdb\xdb\x17\x00\x30\xd5\xdc\xad\xd5\x6b\x12\x4c\x7b\x8f\xcd\xa0\x0c\x3b\xa3\x71\xa0\x21\xbf\x19\xdb\x1d\x57\xce\xdc\x57\xde\x4c\x6a\xb6\xa6\x40\x9c\x96\xd6\x3a\x7d\xf5\x7a\xfc\x34\x65\xfa\xea\xaf\x10\x97\x9e\xcf\x59\xa8\xde\x53\x1f\x4c\x20\x54\x9e\x8a\x59\x52\x89\x34\xe1\x38\xcb\xfa\xbe\x9f\x04\x41\xe1\x20\xac\x02\xb6\x52\x39\xcf\xb2\x9c\x94\xae\x9b\xb4\xd7\x99\x45\x61\x67\xd1\xa4\x9b\x39\x8c\x36\x93\x65\x43\x21\x75\x45\xea\x8a\x22\x4a\xb6\x86\xc3\xc1\x65\x87\xa5\xb9\x2e\xb7\x37\x68\x3e\xe7\x1a\x4b\x4a\x20\x78\x35\x4b\x32\xae\xcb\x03\xab\x85\x49\x63\xcb\x04\xd0\xc8\x2c\x39\x5f\x8d\xc2\xe5\x66\x14\x8c\x2b\xdd\x61\x47\x33\x3c\x28\x0e\x0d\xda\xfc\xc4\x59\x41\x25\xc7\x30\xcd\x86\xff\x43\x13\x17\xfe\x93\xfb\x57\x23\x1b\x71\xc7\xac\x17\x5e\x63\xf8\xa7\xb3\x61\x52\x06\x5e\x6d\x5b\x02\x91\x26\x69\x89\x29\x75\x64\xe5\xfe\x5f\xaa\x50\xa8\x74\x7e\xb9\x36\xb2\x33\x3b\x35\xb8\x20\x33\x4b\x1e\x30\x9d\xdf\xdc\xec\x11\x71\xe5\xcf\xed\xed\x01\xaf\xa7\x59\xf3\x14\x3c\x1a\xf6\xed\xbf\x64\x08\x03\x45\xfc\xf4\x15\x9b\x79\xc0\x93\x95\xc5\x53\x14\x1a\xc3\xea\x71\x4b\x4f\xe9\xe0\x39\x7d\x14\xf0\x23\xa6\xe3\x6f\xe1\x5f\x34\xb8\xf2\xf1\x7b\xf0\xef\x14\x05\x03\x09\x9c\x9d\x7e\x9b\xe3\x5b\xd9\x3b\x3b\xbd\xbd\x85\x3f\xdb\x45\x68\xfe\xfe\xa9\x18\xfa\x53\xb2\x76\x43\x9c\x33\xc2\x4d\x02\xc2\x62\x68\x96\x5c\x55\x1c\x20\x90\x67\x0a\x70\x76\x0a\x1c\x00\xa1\xb5\xfc\x63\x4b\xe0\xd1\x6a\x57\x03\x6b\xb2\xc2\x05\x93\x87\xc2\x79\x90\xa8\xc0\x56\x73\xc7\xba\x45\x03\xc2\x35\xad\x0c\x4c\xe0\xaa\x22\xd0\x5c\xb2\x04\x90\x8a\xea\x40\xa6\xa3\x00\xda\x81\x75\x02\x15\x76\x04\x68\x97\x10\x1a\x52\x5c\xb0\x82\x9a\xd0\xb2\x2d\x93\x1c\xfa\x0a\x25\x2e\x1e\xad\xff\xe3\xd7\x9f\x7f\x79\x3c\xbc\xa6\x99\xe6\x6e\x73\xe9\x6f\x7e\xee\xbe\x6e\x6e\xc8\xae\x33\x46\xf5\x7a\xed\x7f\xc7\xa1\x45\x63\x96\x15\x6b\x4d\x36\xc9\xc7\xed\x04\xc3\xf6\x3a\x4c\xb3\xea\x75\xbe\x9b\x61\xc6\x74\xf5\xb9\xe9\x65\x6a\xb1\xbb\x0f\x7c\xdf\x56\x6a\xb1\x83\x07\x53\xcf\x6e\x82\xda\x30\xcd\x59\x4a\xa5\x62\xaf\x37\x34\xdc\x48\x0e\xf3\xae\x3a\xda\x5f\x77\x3e\xaf\x08\xf5\xb0\xe7\xff\x22\xd3\x4c\xb3\xea\xe8\xa0\x6e\x6b\x0e\xe9\x1a\x0e\xf2\x50\xd6\x99\x1a\x3e\xa4\xf2\x60\x58\xec\x30\x34\xab\xc8\x34\x19\x2a\x45\x21\xf0\x82\x0d\xcb\x32\xc9\xdf\x6c\xff\x3e\x90\x67\x86\x33\x37\xfc\x94\xa8\x94\x73\xd7\x4c\x01\xad\x6e\x3c\x77\xa8\x96\x49\x7e\x32\x8a\x00\xad\x86\x95\xf0\xf9\xf0\x09\xf9\x3a\xa2\x53\xce\x6a\x8e\x99\x3b\x24\xf9\x55\x94\x0d\xf0\xee\xa4\x5f\x8e\x70\x9a\xb5\x66\x9f\xa0\xdb\x91\x77\x27\xfd\x9d\x68\xfb\x66\xe1\x5a\x81\x8b\xf3\xcb\xef\x88\xbb\x18\x31\xb5\x21\x8b\xb7\x58\x4f\xda\x25\xf9\xff\xe3\x7d\xd6\x13\x68\xf7\x2c\xb4\x58\x03\x52\xe8\x89\x7c\x48\xf2\x93\xf1\xe3\x79\xc1\x8c\xb5\x53\x1b\xe1\x8c\x9f\xd0\x3e\x0f\x22\x4b\x7d\x48\xf2\x73\xea\x9f\x77\x43\xc4\xa3\x0d\x0d\x7a\xb2\x6a\x89\x56\x97\xae\x23\x6f\xd1\x2a\xca\x0a\x4f\xa4\x5d\xed\x0a\xb6\x85\xf3\xf5\x50\x8e\x17\x8e\x93\xfc\xdd\x38\x00\xae\x80\xb3\xbb\xa1\x3f\x44\x60\x9f\x38\x6b\x49\x09\xf4\x2c\xd5\x40\x8c\xef\x25\xbc\xd7\x0d\x9c\xf4\x2c\xb1\xf4\x52\xae\xce\x2e\xce\x2f\x37\x25\x15\x2b\x67\x57\x1d\x2c\x08\xfa\x92\x64\x96\xcc\x17\x06\xed\x75\x92\x5f\x8d\x3a\xcf\x41\xb3\xed\xbe\xb3\x40\x45\x0b\xe7\xae\xbf\x08\xfb\xbb\x95\xd2\x73\x83\x8f\xb5\x19\x69\xb6\x03\x78\xe5\xea\x06\xed\x32\x1b\xfa\x61\x4a\x0b\x17\x0d\xef\xf5\xb2\x9f\xe5\xdf\x87\xc1\xee\xd9\x57\x44\xcf\xb7\xf3\xaf\x69\x17\x86\x55\xec\x38\x35\x19\xee\xc8\x2f\x07\x2f\x51\x29\xd7\x5a\x09\xd9\xff\xfe\x7d\x71\x7e\x99\x85\x76\x11\x94\xe7\x05\xf9\x10\xef\xae\xcf\xf2\xee\x6d\x6c\x79\x01\x0d\x79\x79\xc2\xc4\xbf\x2b\x9a\x66\x5b\x05\xf0\xfd\x12\xfd\x91\xc2\x79\xbf\x4c\x36\xac\xc8\x06\xda\xd9\xce\xed\xc7\x8d\xfb\x13\xe7\x73\xae\xd7\x2f\x18\x17\xef\x3f\x24\xd0\xb3\x96\x6a\x96\xfc\xed\xe5\xf6\xcb\x87\x2b\xcd\xf0\xd2\xb1\x63\xb5\x79\xc8\xa6\xc4\xc6\xb4\x46\x5f\xb2\x4d\x0d\x15\x92\x86\x3a\x4d\x5f\xee\x9f\xf1\x1b\x13\xaf\x46\x2b\x64\x87\x46\x06\x3b\x64\x83\x0b\x43\xd0\x5a\x4d\xb1\x6d\xa2\x78\xfa\x07\x0e\xee\x8e\x10\x2b\xbe\xaf\xf9\x8c\x5e\x55\xdc\x51\x58\xbf\x10\x69\xa7\x32\xd7\x90\x4d\xc7\x44\x51\x0f\x2f\x18\x11\xa6\xa2\xac\x23\x1f\xd8\xd9\xec\x28\xdb\x67\xc2\x45\x43\x16\xde\x6f\x74\xe0\xc3\xa8\x03\xdd\xd1\xe4\x65\x64\xc6\xd8\xa1\x6e\x43\x83\x01\x1f\x7d\x94\x98\x8f\xe2\x6d\xcf\x65\x15\x1d\x47\x63\x92\x7c\xd5\xbd\xfe\x05\xe8\xa3\xa2\x46\xa0\xaf\xc8\x13\x38\xa9\xc8\xf7\x1c\x08\x62\x14\x92\xde\x61\x49\x73\x8f\x23\x8f\x74\x6e\x03\x17\x58\xc7\x66\x8d\xfa\xc6\xf9\xb8\xf4\x86\xf3\x3f\x84\xf4\x4e\xcc\x3f\x51\x04\xf4\xb0\x62\xad\xbf\x52\xd1\x94\x8f\x2b\x4e\xb3\x91\x2c\xf9\x8b\xdf\x02\x00\x00\xff\xff\x24\x31\xb9\xb6\xd5\x14\x00\x00")

func templatesPartialsFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsFooterTmpl,
		"templates/partials/footer.tmpl",
	)
}

func templatesPartialsFooterTmpl() (*asset, error) {
	bytes, err := templatesPartialsFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/footer.tmpl", size: 5333, mode: os.FileMode(420), modTime: time.Unix(1498748517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x4f\x8f\xdb\xb6\x12\xbf\xef\xa7\x18\xf0\xed\x21\x01\x9e\xac\x6c\xf2\xf0\xda\x06\xb2\x8b\x66\x13\xa0\x01\x9a\xb4\xc8\x26\x87\x9e\x8c\x91\x34\x96\x19\x53\xa4\x42\x52\xde\x35\x0c\x7d\xf7\x82\xfa\x6f\x5b\x92\xbd\x69\x0e\xc9\x9e\x2c\x72\x38\xfc\xcd\x6f\x86\x33\x43\x6e\xb0\x26\x8c\x49\x2f\xae\x00\x00\x02\x84\x48\xa0\x31\x73\x66\x36\x3c\x13\x5c\x6e\x18\xac\x35\xad\xe6\xec\x3f\x29\x72\xc9\xc0\x62\xc8\x65\x4c\x0f\x73\xf6\x8c\x2d\xee\x36\x3c\x03\xab\xc0\x4d\x41\xa4\xa4\x25\x69\x03\x1f\x6b\x55\x31\xdf\x02\x8f\xe7\x2c\xc3\x84\xfe\x42\xbb\x66\x8d\xea\x35\x8f\x89\x2d\xf6\xfb\xd9\xa7\x0f\x6f\x8b\x22\xf0\x63\xbe\x5d\x5c\x95\x6b\xf6\x7b\xbe\x82\xd9\x1d\xe9\x2d\x8f\xe8\x1d\x19\x83\x09\x15\x45\x39\xd5\xaa\xac\x95\x84\x64\xd1\x0b\x51\x4a\xd2\x6c\xd1\x4a\x1c\x4b\xdd\x6b\xcc\xb2\x13\x89\x52\x2a\x73\x08\x8e\xb7\x0a\xfc\xec\x48\x59\x85\x6e\xe0\x73\xbf\x27\x19\x17\xc5\xd5\xd5\xf9\x3d\xfb\xb3\x15\xdb\x10\x29\xe1\x39\xc1\x09\xec\x91\x12\xa5\x98\x27\x12\x4f\x49\xf2\xec\x9a\xeb\xb8\x1a\x49\xe3\x6e\x64\xc8\x36\x2c\x89\x17\x2a\x51\x5e\xdf\x87\xfe\x80\x6c\x29\xcf\xd3\xa4\xd9\xd5\x2d\x62\x60\x74\x34\x67\x3e\x1a\x43\xd6\xf8\x3c\x4d\x7c\x25\x8d\xe7\xa6\x66\x66\x9b\x30\x40\x61\xe7\xec\xcf\xd5\x8a\x47\x04\x2b\xa5\xe1\x3d\x5a\xae\x24\x0a\xb8\xb3\x68\xb9\xb1\x3c\x32\x43\xb0\x9a\xd0\x18\x21\x77\x8a\x00\x7b\xaf\x2a\x73\x4d\xcb\x40\x6f\xc8\x45\x94\xe7\x99\x14\x32\xcd\xa5\xf5\xbc\x2a\xc2\x4e\x01\xc4\xa2\x22\x06\x65\x92\x63\x42\x6d\x44\xb6\x03\x23\xfc\xc4\xf6\x58\x72\xb9\xb4\xdc\x0a\x62\x8b\xdb\x35\xca\x84\xa0\x19\x7f\x19\xf8\xb1\x1d\xd3\x12\x9f\x6a\xe1\x96\xd2\x91\x5d\xa1\x39\x10\xf4\x05\x66\x7f\xd4\x2b\x80\x91\x64\x45\xd1\x9d\xd3\x4e\x95\xf3\x34\xf0\x48\xc9\xda\xfe\xc6\xe9\x7e\xb4\x9b\xb9\x50\xe7\x96\x5e\x2b\x77\x54\x8b\xa2\x39\x7b\x6c\x71\xbb\x4b\x35\x52\x02\x4f\x6e\xff\x7e\xea\xfc\xd3\x44\xf5\x23\x00\x45\xbb\xc7\x02\x1a\x45\xf3\x46\x26\x82\x9b\x35\x3c\x79\xf3\xfe\x2c\x9a\xc0\x8f\xe3\xa1\x18\x8b\xc5\xa3\x82\xcc\x50\xa4\x64\x8c\x7a\xe7\x49\xdc\xc2\xe5\x21\x77\x26\xd2\xf2\x2a\xd2\x24\x6e\xbd\x76\x07\x36\xb8\xa7\xe3\xc9\x58\xf8\x6c\xdc\x87\x17\x09\x25\xa9\x1a\x1a\x0b\x46\xc1\x47\xf4\x9c\x89\xa5\x5e\x6e\x3f\xde\x5f\x6e\xe0\x04\x40\x2f\x6d\x68\x12\x84\x86\x22\x14\xe4\x96\xb1\xc5\x87\x6a\x00\x9a\x91\x93\x93\xdd\x91\x2f\xf8\x77\x63\x46\x4a\x76\xad\x62\x25\x54\xb2\x63\x8b\x77\xdd\xc7\x8f\x81\x5e\xd2\xbd\x71\xb0\x63\x8e\x3f\x06\x60\x0c\x55\x6e\x73\xc3\x16\xbf\xb9\x1f\xdf\x0f\xe6\x2e\x23\x0d\xa2\xb7\xa8\x13\xb2\x73\xb6\x0c\x05\xba\x6f\x4d\x62\xce\xa4\x52\x19\x49\xd2\x20\x95\xa6\x15\x69\x4d\xba\xb1\x73\x6d\x6d\x66\x5e\xfa\x7e\x28\x54\x32\x53\xd2\xcc\x12\xb5\x9d\xe5\x1b\x9f\x2d\x5e\x09\x95\x3c\xd2\xec\xc0\xcf\xa7\xd3\x57\xef\xb3\xff\xb3\x97\xd0\x32\xcd\xd3\x26\x9d\x0d\x27\xa9\x40\xe2\x71\x42\xcc\x45\xb3\xdc\xf1\xe1\xb9\x5e\x4e\x2b\x31\x58\xc4\x3b\xa7\x1c\x88\x4e\x3a\x25\xc0\xa6\x8b\x74\x6b\x6a\x84\xac\xcc\x90\x29\xc9\xdc\xb3\x2a\x49\x04\x31\x40\xcd\xb1\xd5\x58\x6d\xd0\x0a\x0f\x6f\xea\x96\x4f\x45\x82\xc9\x50\x8e\x2c\xb5\xf4\x60\xdd\x81\x92\x79\xe0\x3b\xb1\x31\x3f\x0d\x38\x70\xc4\x79\x93\xd4\xc0\x45\xdc\x18\x42\x1d\xad\x2b\x6a\xaa\xdf\x53\xe4\x34\xd2\xc3\xbb\xd6\xb3\xff\x86\x9d\xbb\x52\xc5\x37\xe0\x67\x20\xb0\x4f\x5b\x66\x70\x18\x5c\x4f\x50\x86\x6c\x4c\x92\xb5\x45\xb4\x0d\x83\x92\x05\x7a\xc8\x50\xc6\x14\xcf\xd9\x0a\x85\x19\x2b\xc0\xa7\x07\xe2\xd2\xc2\x7a\xb0\xa4\x74\x5e\xdb\xf7\x7c\xfa\xf0\x16\x98\xcf\x8a\xe2\x44\xc6\xf3\x30\xb2\x7c\x4b\x75\xd3\x52\x27\x97\xae\x37\x55\x22\xf6\x38\x79\x5e\xcc\x4d\x26\x70\xe7\x85\x42\x45\x9b\x51\xef\x74\x39\xec\x08\xbf\xdc\x74\x5d\x4a\x1a\x7b\x3f\xb5\xfd\xca\x2f\xbd\x36\xff\x77\x95\xd2\x57\x64\xdc\xfd\x5e\x97\xdd\xec\xec\x23\x3e\x28\xa9\xd2\xdd\x44\x27\x38\x49\x57\x6d\xfb\x67\x53\xbb\x0a\x43\x31\xd6\x5c\xf7\x0c\xae\xe0\xb7\xed\xe0\x65\x04\xfc\xdc\x12\x70\xf3\xac\x0e\x8f\x35\x9a\x4c\x65\x79\x36\x67\x56\xe7\xd5\x55\xf3\xa3\xeb\xd6\xdd\xfd\x6e\x84\x93\x8e\x01\x77\x03\xbd\x5d\x73\x11\x6b\x92\x13\xe6\xb7\xb0\x47\x02\x2d\x72\x2a\xbc\xb2\xb5\xeb\xa3\xbd\xf9\x7f\x0b\xf7\xf9\xb3\x43\x7e\x96\xcb\xfa\x0a\xdd\x94\xa5\xe6\x0c\x0c\x86\x7c\x35\x2a\x30\x74\xe5\xc9\xe4\xe1\x99\x44\x78\x68\x63\xed\xe5\x47\x98\xd9\x9a\x3b\xe2\xf5\xca\xdc\xd2\xf7\x27\x56\xb9\xa9\x0b\xa1\xb5\xdb\x5c\x16\x0c\x0d\xc9\x55\xdd\x6e\x5e\x26\xbc\x9b\x47\xb9\xfc\x60\xdf\xd1\xa3\x71\xfc\x77\xee\xa2\xd4\x69\x3c\x4e\x7c\x8f\xd5\x34\x75\x5c\x27\xae\x47\xe7\x8f\xe7\x45\x1d\xd4\xe9\xe1\x9b\x38\x7d\x75\xfe\x31\xb9\xde\xd2\x6e\xa8\x7b\xe8\xff\x7d\xc4\x0d\x97\x09\x64\xa8\x2d\x70\x09\x08\xd5\xb2\x5f\x27\x88\xf8\xd6\xbd\x54\xdb\x08\x1d\xbc\xeb\xf0\x15\x48\x65\x61\x56\x15\xbf\xd7\xdc\xb8\x38\x6e\x78\x3e\xbc\x3b\x3a\x01\xe8\x2a\x71\x53\xb7\x0e\x1a\xaf\x5e\x2d\x7f\x85\x63\xcf\x42\xcd\xa3\x11\x68\x25\xa8\x11\x3f\x7e\x1c\x5a\x29\x9d\xf6\x1e\x47\xca\x07\x24\xa8\x44\x97\x4b\x37\xc9\xc0\x95\x20\x25\x9d\x0f\xc6\x8a\x7f\x50\xe6\x8c\x43\x13\x96\xcb\x7a\xb0\xe7\xd9\xe7\x2f\xba\x4c\xf5\x3f\x06\x2b\xa5\x0f\x7a\x8e\xba\x35\x28\x9f\x7f\x10\x36\xb4\xbb\x57\x3a\x7e\x62\x9e\x82\xd2\x60\x79\x4a\x60\x48\x73\x32\xf0\xf6\x75\xe0\x97\xca\x07\x90\x70\x99\xe5\x16\xec\x2e\xeb\x2c\x06\xcc\xad\x8a\x54\x9a\x09\xb2\x34\x67\x6a\xb5\x62\xc7\x50\xab\x55\x07\x50\x6f\x5a\xa8\x2f\x9e\xb3\xde\xc5\xbb\x54\x39\x16\x4f\x12\x53\x9a\xb3\x2f\x0c\xb6\x28\x72\x9a\xb3\x21\xae\xc2\xdc\x5a\x25\x1b\x88\x79\x98\x72\x7b\x82\xa7\x96\x69\xc0\x74\xb4\xbd\x38\x86\xe2\xd5\x1a\x46\xa2\xb8\xdf\x8d\x6d\xb9\xc9\x51\x88\x5d\x5d\x03\x2e\x69\xc4\xfa\xcb\xdd\x1d\xa7\xba\xe8\x34\x81\x29\x78\xb2\xb6\x6c\x31\xa6\x21\xf0\x2b\x33\x8e\x0f\x8c\x8b\xaa\x73\xb7\x8f\x83\x97\xd0\xfd\x1e\xae\xc3\x08\x5e\xce\x01\x66\xaf\x34\x61\x1c\xe9\x3c\x0d\x8b\xc2\x4d\xf0\x55\x39\x37\x70\x92\x06\xde\x4c\x5d\xff\xd0\xaf\x71\x61\xab\xac\x39\x24\x12\xb7\x3c\x29\x5f\x1e\x27\x5e\x51\xbb\x65\xd3\x4f\x36\x81\x12\xa7\x4b\x26\xfa\xc5\xfd\x1e\xaa\x2a\x7a\xcd\xff\x0b\xd7\xa1\x33\xb8\x67\xdb\x90\x3c\x5f\x81\x40\x63\xe1\x9a\x3b\xc9\x51\xc1\x5e\xe2\xee\x03\x39\x73\xe5\xad\x78\xaf\x6a\xde\x38\x88\xa9\xf2\xb6\xdf\x93\x30\xf4\xad\x61\x75\x85\xe4\x90\xd5\xee\x9d\xa0\x02\xee\xda\xea\xa2\x98\xac\x18\x17\x59\x38\x55\x26\xce\xda\x3f\x52\x4c\x47\x66\x02\x5f\x7d\x5d\x7d\x01\x92\xb1\xb3\x20\xf0\x9b\x7f\xbd\xfc\x13\x00\x00\xff\xff\x3b\x5b\x1b\xc4\x84\x19\x00\x00")

func templatesPartialsHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsHeaderTmpl,
		"templates/partials/header.tmpl",
	)
}

func templatesPartialsHeaderTmpl() (*asset, error) {
	bytes, err := templatesPartialsHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/header.tmpl", size: 6532, mode: os.FileMode(420), modTime: time.Unix(1498748517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesProductpageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4b\x8f\xa4\x36\x10\xbe\xef\xaf\x28\x71\xaf\x61\x98\x5e\xe5\x21\x31\x1d\x25\xd9\x43\x22\x25\x52\x14\x25\xe7\x96\x1b\x17\xb6\xd3\xc6\x46\xc6\xf4\x6c\x6b\xd4\xff\x3d\x82\x81\x06\xdb\xf4\x3e\xb4\x27\xfc\x28\x97\xeb\xfb\xea\xab\x32\x25\x57\x67\xa8\x34\xeb\xba\xe7\xac\x65\x82\x50\x19\xef\x2c\x1c\x59\x75\x12\xce\xf6\x86\x23\x0a\xa6\x35\xb9\x4b\xb6\x7f\x07\xb0\x36\x7f\x71\xac\x6d\xc9\x8d\xeb\xe1\x4e\x65\x35\x0e\xbb\xd3\x56\xb2\x79\x5b\x07\x28\x0d\x3b\x2f\xb3\xd0\xf2\xe8\x88\xf1\xca\xf5\xcd\x31\x5b\x9b\x00\x94\x56\x83\xe2\x81\x41\x7a\xe6\x70\xd0\xaa\xf3\xd1\x49\x80\xd7\x57\xc7\x8c\x20\x78\xf8\xe5\x66\x79\xbd\x46\x36\x00\xa5\x56\x5b\x1e\x95\xa7\x26\xf1\x38\xda\x33\x90\x8e\xea\xe7\xec\xf5\x15\x1e\xfe\xfd\xfb\xf7\xeb\xf5\x4e\x44\xe6\x94\xed\x07\x9b\x7f\x94\xd7\x74\xbd\x96\x39\x4b\xdd\x95\xb9\x56\x69\xd8\x64\x78\x14\x68\x99\x5b\x1d\x70\x97\x73\xb5\x22\xb3\xcc\x03\x6e\x47\x66\x07\xd6\x96\x34\x67\xab\x9c\xc0\x90\x34\x6c\x38\xbe\xff\xfe\x6d\xa8\x05\xee\x7e\x08\xc0\x96\xb2\x48\xa5\x72\x38\xf8\x01\xca\x1b\xaa\x3f\xc9\x33\xce\x3c\x5b\xe0\xc9\x22\xf0\xd0\x6e\x39\xa8\xac\xf1\x64\xe2\x54\x05\xfe\x3e\x50\x57\x39\xd5\x7a\x65\x4d\x40\x42\x99\xb7\x6b\xc0\x21\xfe\x95\x94\x0c\x3b\x63\x47\x95\x35\x9c\xb9\x0b\xe2\xd1\x3a\x4e\x0e\x35\xd5\x1e\xb5\x80\x3b\xf0\x8b\x1f\x6f\x43\x5b\xd7\x1d\x79\x7c\x82\x96\x71\xae\x8c\x18\x8f\x42\xc3\x9c\x50\x06\xbd\x6d\x07\x1b\xdc\x45\x6c\x3d\xcd\xb7\x47\x76\x45\xb6\xff\x4d\x09\xa9\x95\x90\x9e\x38\x4c\xf0\xcb\x5c\x3e\x05\xe7\xfb\x37\x91\xcb\xd9\xb4\xc3\x51\xd0\xb3\xd3\x61\x82\x68\xa8\xf7\x8e\xe9\x75\x28\x68\x48\x30\xaf\xce\x84\xd6\x10\xd6\xea\x63\x42\xec\x54\x01\x1f\x06\x66\x57\x91\xfc\xc5\x04\x75\x49\x31\x94\xa9\x18\x37\xf5\xfe\x19\x59\xa7\xa2\x4e\x25\x5d\xe6\xbd\xbe\x93\xce\xd5\xe4\x36\x9c\x06\xf3\x27\xee\x64\x13\xaf\x30\x25\x7b\xa4\x46\x39\x6b\xb0\x6b\xd2\xb5\x86\x7f\x53\x7f\x0b\x2b\x6d\xca\x5c\x25\x95\xe6\x8e\xcc\x27\xf2\x16\xa4\x26\x4c\xcc\xaf\xd3\xe9\xb8\xe8\x97\xce\xb4\x96\xad\x64\xba\x5e\xd4\x6a\x08\xbd\x54\x8e\x07\x7d\xbc\x21\x57\xf5\xee\x02\x92\x86\x74\x23\xee\x0a\x54\x86\x93\xf1\xc4\x91\xb4\x56\x6d\xa7\xba\x40\x47\x8f\xf3\x6c\xac\x93\x86\x23\x16\xf3\xca\xd1\x7a\x6f\x1b\x5c\x15\xc4\x74\x62\x9e\xba\xb7\x3b\x96\x85\xf9\xc4\x63\x50\x42\xc3\xfc\xbf\x0e\xa5\x3d\x93\xc3\x4a\xab\xea\x94\xb4\xd7\x35\xf1\x8d\x32\x38\x87\x5f\x3c\x6e\xbd\x52\x61\x3c\x4f\xd1\x65\x45\x1c\x5f\xb1\xd1\xcd\x4b\xb9\x9b\xef\xab\x75\xdf\xc9\x6c\xff\x05\x6a\x2f\x73\xb9\x4b\x25\x1f\xf4\xa3\x14\x4e\x10\x6b\x1a\x5b\xc2\x5d\x91\xc0\xf9\x1a\x6d\x47\x71\xb4\x11\xc8\x8d\x57\x6d\xc0\x78\xaf\xf3\xce\x10\xdb\x2f\x40\x1d\xd7\x7e\x5c\xf9\xeb\xba\x0f\x5e\xad\xa8\xe8\x3e\xa3\xf6\x6c\xe3\xb1\xd3\xb6\x62\x1a\x3b\xcf\xbc\xea\xbc\xaa\x86\x1e\x6a\x4e\xb7\x5a\x0c\xa5\xb7\xaa\x8c\xad\xc2\xc9\xee\xfe\xa7\xd8\x8f\x87\x83\x6a\x98\xa0\x50\x7d\xc5\x77\xf7\x53\x3a\x25\x30\xfe\xb1\x49\xa4\x17\x93\x3b\x2b\x31\x97\xa4\xdb\x7c\x44\xb7\x80\xcb\xf6\x7f\x58\x7b\x52\x46\x40\x6d\x1d\x8c\x9b\xb0\xec\xfe\xb4\xd5\x95\xbb\x96\x99\xf9\xca\x11\x02\x4a\xab\x39\xb9\x1b\x17\xc5\xfb\x6c\x5f\xaa\x46\x40\xe7\xaa\xe7\x2c\x57\x8d\xc8\x7d\x81\xa3\xef\x87\xd6\x88\x0c\x98\xf6\xcf\x59\x06\xf9\xbe\xcc\x07\x67\x71\xe6\xe3\xb2\x58\x74\x37\xd2\x36\x37\xe9\x6d\xb8\x3f\x83\x64\x86\x5f\x40\xf4\x8a\x13\x78\x0b\x9a\x3c\x5c\x6c\x0f\x27\x63\x5f\xe0\x45\x92\x1b\x57\x6b\x65\x78\x02\xf7\xe1\xdd\x27\x84\x9a\xfc\x2a\x7d\xd5\x53\xf3\x7f\x00\x00\x00\xff\xff\xad\x53\x4d\x1a\x35\x0b\x00\x00")

func templatesProductpageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesProductpageTmpl,
		"templates/productPage.tmpl",
	)
}

func templatesProductpageTmpl() (*asset, error) {
	bytes, err := templatesProductpageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/productPage.tmpl", size: 2869, mode: os.FileMode(420), modTime: time.Unix(1497607783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.DS_Store": templatesDs_store,
	"templates/dataset/finishpage.tmpl": templatesDatasetFinishpageTmpl,
	"templates/dataset/index.tmpl": templatesDatasetIndexTmpl,
	"templates/dataset/middlepage.tmpl": templatesDatasetMiddlepageTmpl,
	"templates/dataset-filter/age-selector-list.tmpl": templatesDatasetFilterAgeSelectorListTmpl,
	"templates/dataset-filter/age-selector-range.tmpl": templatesDatasetFilterAgeSelectorRangeTmpl,
	"templates/dataset-filter/filter-overview.tmpl": templatesDatasetFilterFilterOverviewTmpl,
	"templates/error.tmpl": templatesErrorTmpl,
	"templates/homepage.tmpl": templatesHomepageTmpl,
	"templates/main.tmpl": templatesMainTmpl,
	"templates/partials/filter-selection.tmpl": templatesPartialsFilterSelectionTmpl,
	"templates/partials/footer.tmpl": templatesPartialsFooterTmpl,
	"templates/partials/header.tmpl": templatesPartialsHeaderTmpl,
	"templates/productPage.tmpl": templatesProductpageTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{templatesDs_store, map[string]*bintree{}},
		"dataset": &bintree{nil, map[string]*bintree{
			"finishpage.tmpl": &bintree{templatesDatasetFinishpageTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{templatesDatasetIndexTmpl, map[string]*bintree{}},
			"middlepage.tmpl": &bintree{templatesDatasetMiddlepageTmpl, map[string]*bintree{}},
		}},
		"dataset-filter": &bintree{nil, map[string]*bintree{
			"age-selector-list.tmpl": &bintree{templatesDatasetFilterAgeSelectorListTmpl, map[string]*bintree{}},
			"age-selector-range.tmpl": &bintree{templatesDatasetFilterAgeSelectorRangeTmpl, map[string]*bintree{}},
			"filter-overview.tmpl": &bintree{templatesDatasetFilterFilterOverviewTmpl, map[string]*bintree{}},
		}},
		"error.tmpl": &bintree{templatesErrorTmpl, map[string]*bintree{}},
		"homepage.tmpl": &bintree{templatesHomepageTmpl, map[string]*bintree{}},
		"main.tmpl": &bintree{templatesMainTmpl, map[string]*bintree{}},
		"partials": &bintree{nil, map[string]*bintree{
			"filter-selection.tmpl": &bintree{templatesPartialsFilterSelectionTmpl, map[string]*bintree{}},
			"footer.tmpl": &bintree{templatesPartialsFooterTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{templatesPartialsHeaderTmpl, map[string]*bintree{}},
		}},
		"productPage.tmpl": &bintree{templatesProductpageTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

