// +build production
// Code generated by go-bindata.
// sources:
// templates/error.tmpl
// templates/homepage.tmpl
// templates/main.tmpl
// templates/partials/footer.tmpl
// templates/partials/header.tmpl
// templates/productPage.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesErrorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xc1\x8e\xd3\x30\x10\xbd\xe7\x2b\x46\xbe\x3b\xd5\x5e\x51\x1a\x21\x01\x12\x48\x70\x5b\xc4\x71\x35\xb1\x27\xb5\x55\xc7\x63\x79\x26\xe9\x56\x4b\xfe\x1d\xa5\xb0\x2c\xad\x7a\xe2\xf4\xc6\xcf\x6f\x34\xe3\xf7\xdc\xf9\xb8\x80\x4b\x28\xb2\x37\x05\x0f\x64\x03\xa1\xa7\x0a\x92\x50\xc9\xf4\xcd\xbf\xf7\xa7\x8a\xa5\x50\xdd\xd8\xf0\x70\xa7\xe9\xe9\x49\xa3\x26\x82\x31\xcd\x12\xac\x0d\x98\x46\x6b\x07\x56\xe5\xc9\xf4\x2f\x2f\xd0\x7e\xaa\x95\x6b\xfb\x78\x11\xad\x6b\xb7\x0b\x0f\x7d\xd3\xed\x7c\x5c\xfa\xe6\x15\xef\xcc\x83\x82\x99\x92\xb5\x13\xd6\x9b\x85\x0e\x35\x7a\xbb\xa9\xee\xf1\x8e\x13\x78\x92\xa3\x72\xb1\x17\x62\x9c\x53\xb2\xa7\xe8\x35\x6c\x72\xac\x1a\x5d\xa2\xeb\xc6\x81\x9f\x61\xe0\x67\x6b\x0b\x7a\x4f\xfe\x77\x5d\xc9\x5b\x8f\xf5\x78\x7d\xb2\x56\xa8\x60\x45\x25\x6f\x13\x8d\x0a\x42\x4e\x23\x67\xf2\x66\x7b\xcd\x7f\x6f\xa9\x27\xb6\x1a\x62\xf5\x62\xfa\xe6\xcd\xb4\x8f\x24\xae\xc6\xb2\x4d\x80\x9f\x20\x38\xd2\xe7\xc7\x6f\x5f\x61\x5d\x9b\xae\xf4\x5f\x46\x38\xf3\x0c\xa2\x31\x25\xa0\xec\x78\xce\xba\xf9\x56\x79\x48\x34\x09\x94\x44\x28\x04\x1d\x42\xa8\x34\xee\xcd\x84\x31\x29\xbf\x3b\xd1\xd0\x3a\x9e\x26\xca\x2a\xef\x39\x4b\x7b\xe0\xa5\x9d\x8f\x06\x2e\x31\xee\xcd\x07\xce\x8a\x4e\xe1\xbb\x98\xde\xfd\xa9\x67\xe9\x76\xd8\xb7\xf0\x83\x00\x0b\x27\x3e\x44\x21\x18\xb9\x02\xe6\x33\xc4\xec\x38\x2f\x94\x23\x65\x47\xa0\x21\x0a\x4c\x78\x86\x80\x0b\x81\xc3\x59\xc8\xb7\xdd\xae\xfc\xcd\xfc\x16\xde\x22\xb9\xfe\x13\xaf\xf8\x2b\x00\x00\xff\xff\x38\x7a\x05\x98\xac\x02\x00\x00")

func templatesErrorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesErrorTmpl,
		"templates/error.tmpl",
	)
}

func templatesErrorTmpl() (*asset, error) {
	bytes, err := templatesErrorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/error.tmpl", size: 684, mode: os.FileMode(420), modTime: time.Unix(1552651668, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomepageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\x36\xf6\x7d\xef\xa7\xb8\x83\x97\xdf\x4c\x66\x28\x5a\x8e\x7f\x69\xb3\x23\x33\x93\xc6\x4d\x9b\x26\x6b\x67\xe3\x38\xdd\xf6\xc5\x03\x91\x57\x24\x6a\x10\xc0\x02\xa0\x64\x45\xe3\xef\xbe\x03\x90\x94\x28\x8a\x54\xec\xd0\x4d\xdd\x6d\xfc\x62\x11\x7f\x0e\x2e\x2e\xce\xc1\xbd\x00\xf9\xcd\x24\x61\x73\x88\x39\x35\xe6\x98\x28\x9a\x62\xc0\x84\xd5\x12\xa6\x34\xbe\x4a\xb5\x2c\x44\x12\x04\xd4\x58\x4d\x39\x89\xbe\x01\x00\x68\xb6\x5f\x68\xaa\x14\xea\xaa\xa6\x5d\x1b\x4b\x1e\xb8\x16\x8d\xea\x9e\x66\x1d\x2d\x7c\xab\x6c\xbc\x6b\xd9\xe5\xa5\x65\x96\x23\x89\x7e\x41\x1e\xcb\x1c\xc1\x4a\xb0\x19\xc2\xd9\x6c\xc6\x62\x84\x99\xd4\x70\x4a\x2d\x93\x82\x72\x38\xb7\xd4\x32\x63\x59\x6c\x26\x61\x36\xee\x19\x44\x75\x8d\x11\x4b\x61\x51\x58\x12\xbd\xcf\x10\x2e\x5e\xff\x9f\x01\x4e\x75\x8a\xc6\x02\x13\x09\x2a\x14\x09\x0a\x0b\x4a\xcb\xa4\x88\x51\x83\x9c\x81\x74\xe3\x33\xca\xc1\xac\x07\x05\x2a\x12\x6f\x9b\xc6\x58\xa6\x82\x19\x4c\x40\xd4\xb6\xad\x9b\x51\x0e\x4c\x18\xcb\x6c\x61\xd1\x01\x59\x3f\xe2\x68\x12\xaa\x0e\xbf\x85\x09\x9b\x37\xbc\xbd\x79\xac\x7e\x56\xff\xb6\x56\xb5\xb9\x94\x29\xe5\x1c\xf5\x72\xef\x5a\x6e\xe0\xb3\xc3\xe8\x0d\xb5\x6e\xd6\xaa\x98\x72\x66\x32\x4c\x40\x23\x47\x6a\xd0\x79\xf4\xb0\x61\x49\xc1\x81\x25\xc7\xa4\xae\x0d\x38\x33\x96\xd4\xd8\xee\x21\x08\x04\x16\x8e\x47\x50\xf3\x02\x72\xaa\x53\x26\x02\x8e\x33\x1b\x04\x07\xf5\xe3\x54\x5a\x2b\xf3\x20\x38\x68\xb1\x62\xb5\xd2\x54\xa4\x08\xa3\x13\x6a\xe9\xe8\x5d\x35\xd0\xcd\x4d\xcb\x49\x13\xce\x1a\xcc\xf2\x83\x05\x3c\x0d\x0e\x9f\xd6\x96\xb7\xc7\x39\xac\x0b\x34\x4b\x33\x1b\x04\xe3\xb6\x5d\x4d\xff\x2d\x32\x66\x11\x14\x4d\x12\x26\xd2\xc0\x4a\xe5\xda\xd7\x8f\x6b\x80\xba\xa0\x1e\x62\x53\x52\x62\x8e\x3b\x09\x3f\xc9\x1e\xd7\x96\x57\xa6\xae\xb9\x3e\xa1\x90\x69\x9c\x1d\x93\xd5\x0a\x46\x17\xef\x5e\xdd\xdc\x90\xc8\xfd\x7c\xef\xaa\x6f\x6e\x26\x21\x8d\x26\x61\xf6\xb8\x13\x55\xed\x80\xae\xc9\xed\x20\x2a\x47\x9e\x50\xeb\x81\x76\x48\x37\x09\x39\x6b\x2f\x04\x8a\xa4\xe1\xf7\x49\x58\xf0\x16\x6b\x7e\x42\x9a\x70\x26\x10\x66\x2c\x2d\x74\x1f\x59\xb2\xaa\x55\x50\xb5\xba\x1b\x5f\xf6\xd2\xa3\x36\xe0\x65\x89\x7c\x5b\x96\x8c\x8f\x60\x6d\x54\x42\x2d\x7d\x28\xd4\x58\xad\xd8\x0c\x46\xe7\x8a\xea\x2b\x67\x9b\x9b\xe2\xce\x94\xaa\x89\x35\x24\xbd\x35\x95\xcb\x4b\x53\x77\x6f\x6a\x7c\x5f\xff\x75\x07\xf8\xdd\x04\x81\xc9\xe4\x82\x80\x83\x0a\xd6\x15\x8e\x90\x95\xdb\x5b\xc6\xc1\x6a\x15\xc0\xe8\x57\xf0\xbf\x3c\x5f\x7a\x36\xf9\xfa\x6f\xdd\x1f\x32\xd4\xd8\x6f\x5f\xb5\xc1\xf5\xd5\xaf\x56\xe1\x23\x38\x3d\x83\x9f\xcf\xe1\x51\xd8\xe3\x23\x8f\x23\xa4\x89\x35\x53\x76\xbf\x55\x13\x96\xa7\x3b\xee\x08\x58\x4e\xd3\xd2\x29\x19\x4b\x90\x80\xd1\x71\x43\x9a\xe1\xba\xa1\x6f\xb7\x67\xde\x93\x70\xbf\x15\xfd\x93\x6d\x6b\xb0\xd1\x67\xb3\x8b\xb4\xd6\xff\x3e\xf7\x92\x16\x74\x29\xe0\xde\x99\x96\xf4\x2d\x43\x49\xa9\xc8\xd1\x5b\x8d\x17\x82\xd9\x9b\x1b\x37\x74\x77\xcd\x9e\x49\x96\xa0\xad\x8e\xe5\xbf\x3d\xed\x77\x8c\xe8\xb1\xa0\x2e\xee\x75\x71\x57\x68\x6e\x7a\x67\xc6\x0b\x93\xdd\xd7\xf6\x0a\x77\xdf\xae\xfc\xe6\xf3\x40\xe2\xda\x67\xf1\xf1\x8d\x94\x57\x4c\xa4\x2e\xb7\x4b\xe4\x42\x70\x49\x13\xb0\x2c\x47\x30\xa8\x19\x9a\x67\xfd\x24\xdd\x59\x84\xf7\x7a\x09\xb2\xd0\xcd\xee\x80\xd7\x8a\x4b\x8d\x7a\x67\x3d\xb6\x57\xa3\x23\xb0\x9d\xd9\x0c\x35\x9c\x9d\x9e\xfb\xdc\xae\x23\xe7\xeb\x8e\x74\xd2\x75\xbb\x87\x9c\xe8\x49\xcb\xc1\x2d\x5e\x64\xe8\x57\xca\xb8\xac\xe6\xf1\x36\x4b\x7c\x45\x9e\xf8\x8a\xea\x89\xa7\x41\x70\xf4\x5d\x07\x0d\x9a\x2c\x3a\xe8\xb1\xa8\x4d\xaa\x75\x36\xf5\x89\x6c\xbf\x45\x98\x7e\x8e\x55\x1c\x6e\x53\xae\x0b\xbf\x3d\xc6\x54\x5e\xaf\x93\x1c\x68\x3e\x04\x41\x26\x73\x74\x79\xfe\xd6\x30\xce\x11\xe3\x6f\xb7\xb9\xec\x7c\x38\x3e\xd8\x2e\x73\xee\x1b\xff\x7f\xd3\x99\xe3\xa7\x5b\xce\x3c\xda\x6e\xef\xca\xda\x69\x4a\x8f\x34\x3c\x41\x2a\x49\xec\xd8\x76\xd8\x10\x49\x98\x21\x57\x21\x97\x31\xe5\x1b\xd2\x6d\x04\xe3\x8e\x3f\xbe\xb2\x41\xc9\x67\x13\xa3\xa8\xa8\x47\xf2\x31\x29\xc8\x24\x4f\x50\xc3\x82\x25\x36\xf3\x73\x7d\x5a\xfd\xf6\xb3\x1a\x57\x0f\xde\x31\x6e\x74\x17\x05\x7d\x90\x1b\x8d\xc2\xd1\x28\x64\x79\x1a\xda\x71\xe0\x07\x1a\x29\x91\x12\xa0\xdc\x1e\x93\x35\xb7\x85\x0c\xa6\x52\x27\xee\x34\x31\x71\xd1\x50\x44\x5b\x26\x94\x4b\xc2\x59\x7c\x45\xa7\x7e\x07\xa8\xda\xec\x89\x3c\x6d\x71\x37\x28\xea\x8d\x24\xd1\x73\xc8\xa8\x48\x96\x90\x16\x2c\xf1\x87\x42\x8e\x16\x96\xb2\x80\x2b\x21\x17\xb0\x70\x49\x85\x2b\x9d\x31\x91\xec\x78\xa8\xfb\xb0\x05\xbb\x07\xae\x3d\xc5\xbb\x1b\xf9\xad\xc4\x79\xd4\x16\x67\xaf\x1c\x6b\x01\xee\xd1\xe8\xff\x8a\x28\xef\xa4\xc0\xbb\x0b\xac\x29\xa7\x18\x85\x29\x0c\x89\x5e\xf8\xff\xf7\x44\xd3\xbb\xea\xed\x71\xaf\xc4\x4a\xf3\x02\x2e\x53\xd9\x10\x5a\x69\x2c\xb8\xd2\x3d\x9a\xbb\x85\x8c\x2c\xe3\x68\x1a\x07\xc2\x13\x66\x62\x39\x47\x0d\x99\x5c\xf8\xa8\x59\x8e\xdf\xbc\xd3\x70\xfb\x0f\x28\xca\x84\x05\x0a\x8a\xc5\xb6\xd0\xeb\x6b\x8b\xf2\x72\xc3\x87\x46\x07\xb0\x40\xe0\x6c\x8e\x5f\xd5\xf5\x77\x55\x57\x66\xad\xfa\x47\x18\xce\x99\x29\x28\x1f\x49\x61\x46\xa9\x9c\x8f\x8a\x2b\x02\x96\xea\x14\xed\x31\xb9\x9c\x72\x2a\xae\x48\xf4\xa1\x6c\x72\x76\x7a\xfe\xe0\x24\x58\x5a\x1f\x38\xeb\x37\x0a\xfc\xe1\x9a\xe6\x8a\x7b\xe2\x33\x61\x51\xd3\xd8\xb2\x39\xfa\xd3\x31\x94\x1d\x98\xf1\x62\xd8\xd5\x67\x35\x2a\x2d\xac\xac\x5d\x1d\x1c\x3e\x19\xa2\xda\x8d\xf3\x80\x19\xa0\xb0\xc0\xa9\x71\x2c\x2e\xd3\x5c\x97\x16\x08\x5c\x00\x55\x4a\x4b\x1a\x67\x68\x5c\x1c\xcc\xa9\xcf\x17\x5c\x9f\xe6\x85\x65\x1c\xa3\x31\x6c\xca\xd1\x8b\x58\x23\xc7\x39\x15\xd6\x75\xa0\xce\x6e\x2c\x2f\x02\x63\xa0\x45\xc2\x50\xc4\x5f\x46\xdb\x5e\xcd\x79\x12\x1c\x7d\xdb\xbc\xce\x6b\x28\xfe\xe8\xbb\xdb\xca\xfc\xcf\xd2\x70\xf7\xb5\xce\x9d\x35\x3c\x2c\xd6\x61\x2c\x85\xcc\x97\x21\x13\x33\x5e\x5e\x43\x8b\x44\x69\x16\x23\x13\x09\x8b\xd1\x84\xd3\x82\x73\xb4\x4c\x98\x30\x96\xc2\x14\x39\xea\xaa\xba\x6a\x1f\x72\x7f\x4c\x26\xd1\x89\xe3\xf9\x79\xec\x29\x00\x2f\x68\xae\xee\x2d\x74\x76\x65\x78\x5e\xa0\x9f\xb8\x3e\xfa\xbe\x60\xdc\x79\x1c\x16\x52\xf3\x24\xe0\x48\xfd\x13\x5e\x2b\xd4\x96\x19\x04\x26\x7c\x88\x62\x42\xc8\x39\xf5\x62\xa5\x4a\x71\x16\x97\x21\x4b\xce\x4a\xed\x9a\xf8\xcb\xd3\xba\xf3\xa8\x56\x05\xb2\xcd\x0e\xf1\x95\xd4\xdd\xa4\x56\x28\x15\x47\x25\x55\xb1\xe6\x74\x2c\xf3\xbc\x10\xcc\x2e\xc3\xad\xe2\x9c\xa5\xba\xa4\xf1\xa6\x18\x8d\x65\xb9\x23\x75\x83\xfb\x54\x88\x82\xf2\x9c\x25\x4b\xa4\xba\xab\x69\xad\x82\x1f\x51\xa6\x9a\xaa\x6c\x59\xbd\x08\xb2\x7f\xb8\x08\xa0\x75\xee\x39\xf0\x9b\x3f\xb3\x3e\x57\x93\x0a\x05\xa4\x1b\x9b\xa4\xb6\x94\x83\x3b\x10\x32\x71\x85\x49\x45\x70\x66\xf1\xcb\x9c\x77\xbe\xd2\xfb\xaf\x4e\xef\xb3\x0f\xa3\x8b\xd7\x7f\x02\xa5\xcb\x4b\xb6\xae\x17\xaa\xd5\x0b\xd7\x04\x58\xae\xa8\xb6\x8c\x72\xbe\xf4\x99\xca\x4c\x23\xc2\x4c\xcb\x1c\x94\xe4\xac\x7e\xab\x3a\xe3\xc5\x1f\xb3\x9b\xb7\x6e\x06\x57\xab\xf0\xd1\xf6\x3d\xe1\x4b\xa4\xee\x60\x94\x40\x45\x87\xee\x6b\xc1\x59\xd5\xea\x33\x6e\x06\xf7\x5f\x04\x36\xd2\xa4\x07\xf0\xb6\x73\xa3\xf2\xa3\xee\x0b\xe2\xce\x3b\xe0\x8b\xd7\xf0\x16\xb5\x51\xe8\x53\x6b\x03\x87\x07\xe3\x27\xdd\x44\xbb\xdd\x56\x54\xee\x3f\x7f\x59\x77\x9c\x34\xd2\x13\x88\xcb\x94\xeb\xef\xeb\x8d\x57\x8d\xaf\x30\x34\xce\x19\x2e\x5c\x0a\x77\xf1\x1a\xca\x1c\x97\xc5\x5b\x57\xf2\x9f\x76\x53\xef\x55\xff\x1d\xaf\xf8\x5d\xab\xcf\xf9\xf8\x61\xef\xcb\x6c\x6f\xc9\x1d\x5e\x61\x3f\xf8\x55\xed\x5f\xd7\x5b\xbc\x88\xbc\xed\x07\x09\xf5\xd3\xfa\x35\xf0\xf6\x27\x32\x7d\x5f\xc8\xdc\xe5\x63\xa7\xec\x30\x7a\xee\xce\xc6\xbf\x39\xf2\x35\x3f\xe8\x59\x47\xdb\x5d\xae\x54\x68\x34\xf8\xe8\x69\xd2\x5e\xac\xb6\xbb\x1a\xab\x5c\x77\x09\x98\xc5\xbc\x99\x23\x50\x2b\x3f\x3e\xa3\x1f\x8f\x29\x89\x9e\x97\x5e\xdb\xb3\x03\x7c\x12\x65\x4a\xa2\xef\x87\xa3\xc4\x24\x7a\x31\x1c\x25\x21\xd1\xc9\x70\x14\x24\xd1\x0f\xc3\x51\x66\x24\x7a\x39\x1c\x25\x25\xd1\x8f\xc3\x51\x32\x12\xfd\x34\x1c\x85\x91\xe8\xd5\x70\x94\xdf\x49\xf4\xf3\x70\x94\x2b\x12\xbd\x1e\x8e\xc2\x49\xf4\x66\x38\x4a\x4e\xa2\x7f\x0e\x47\x11\x24\x3a\x1d\x8e\x22\x49\x74\x36\x1c\x45\x91\xe8\xed\x70\x94\xff\x90\xe8\x5f\xc3\x51\x34\x89\xde\x0d\x47\x31\x24\x3a\x1f\x8e\x62\x49\xf4\x7e\x38\x4a\x41\xa2\x8b\xe1\x28\x73\x12\x7d\x18\x8e\xb2\x20\xd1\x2f\xc3\x51\xae\x49\xf4\xef\xe1\x28\x4b\x12\xfd\x3a\x1c\xe5\x23\x89\x7e\xdb\x45\xd9\xc4\xf8\xed\xb0\xfe\xdf\x00\x00\x00\xff\xff\xfb\x0f\xef\xf8\xd0\x2c\x00\x00")

func templatesHomepageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomepageTmpl,
		"templates/homepage.tmpl",
	)
}

func templatesHomepageTmpl() (*asset, error) {
	bytes, err := templatesHomepageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/homepage.tmpl", size: 11472, mode: os.FileMode(420), modTime: time.Unix(1552397121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x7f\x6f\xe3\x36\x12\xfd\xbb\xf9\x14\x53\x15\x38\xd9\x1b\x51\xb2\x9a\x4b\xce\x9b\x58\x01\xb2\xdd\xa0\xb7\x77\xdd\xcd\xe2\x36\xc5\xdd\x21\x08\x50\x5a\x1a\x49\x4c\x29\x52\x25\x47\x71\x0d\x45\xdf\xbd\xa0\x64\x27\x76\xe2\xcd\xa6\x58\xf4\x1f\x49\x24\x67\xde\x9b\x1f\x8f\x34\x3d\xfb\xf6\xed\xc5\x0f\x97\xff\xff\x78\x0e\x25\x55\xf2\x74\x6f\xb6\x7e\x21\xcf\x4e\xf7\x00\x00\x66\x24\x48\xe2\x69\xdb\x42\xf8\x1e\x89\x67\x9c\x78\x78\xe9\xa6\xa0\xeb\x80\xc1\x45\x9e\x8b\x14\x21\xd7\x06\x3e\x70\x12\x5a\x71\x09\x9f\x88\x93\xb0\x24\x52\x3b\x8b\x06\xef\x01\xa9\x42\xe2\xa0\x78\x85\x89\x97\xa1\x4d\x8d\xa8\x9d\x83\x07\xa9\x56\x84\x8a\x12\x6f\x8b\xe4\xed\x83\x49\xd7\x79\x4f\x21\x7e\xc5\xe5\x42\x9b\xcc\x6e\xf9\x1b\xae\x0a\xdc\x00\xf9\xf7\xca\xa8\xeb\xa0\x6d\x19\x84\x5d\x17\x40\xdb\xa2\xca\x1e\x41\x96\x44\x35\xc3\xdf\x1a\x71\x9b\x78\xff\x63\x3f\x9f\xb1\x1f\x74\x55\x73\x12\x73\x89\x1b\xf8\xef\xce\x13\xcc\x0a\x0c\xd2\xd2\xe8\x0a\x93\xd8\x83\x68\x13\x24\x2d\xb9\xb1\x48\x89\xd7\x50\xce\xa6\xde\xf6\xda\x1a\x63\x21\x32\x2a\x93\x0c\x6f\x45\x8a\xac\x1f\x04\x42\x09\x12\x5c\x32\x9b\x72\x89\x49\x1c\x4e\x82\xc6\xa2\xe9\x87\x7c\x2e\x7b\x9e\x21\xe5\x5b\x81\x8b\x5a\x1b\xda\x51\x8d\x5c\x9b\x8a\x13\xcb\x90\x30\x7d\x54\x55\x42\x89\x75\xa9\x15\x26\x4a\xef\xf0\xa4\x12\x2b\x64\xa9\x96\xda\x6c\x38\x7d\x77\x38\x3d\x7c\x7d\xf8\x66\x87\x3d\xaf\x6b\x89\xac\xd2\x73\x21\x91\x2d\x70\xce\x78\x5d\x33\x4b\x9c\x1a\xcb\xe6\xdc\x30\x4b\xcb\xad\xa2\x6d\x23\xb5\x2d\x88\x7c\xa3\x41\x9f\xd0\xb8\x4a\x7c\xe0\x55\x2f\xa8\x4d\x22\xad\xec\xb1\x1d\x96\x3f\xa7\x91\x0d\x6f\xd7\x50\x87\x8e\x2a\x83\xae\xdb\xfb\xe6\x9b\xb6\xfd\x65\xf6\x2d\x63\x57\x22\x07\x49\x08\xef\xce\x61\x7a\x7d\xfa\x0b\xdc\x81\xe5\x39\xfe\xf3\xf2\xfd\x4f\x5d\xd7\x47\x04\x30\x93\x42\xfd\x0a\x06\x65\xe2\xf5\xc1\xdb\x12\x91\x3c\x28\x0d\xe6\x8e\x2f\xfc\xc8\x89\xd0\xa8\x9f\xc4\xdc\x70\xb3\x3c\xb3\x16\xc9\x7e\xe4\x54\x76\x5d\x94\x5a\x1b\x69\x99\x31\x81\x61\x6a\xad\x77\xba\xe6\xbd\x42\x95\x89\xfc\x9a\xb1\x5d\x8c\x1b\x91\xbd\x3b\x87\xd7\x7f\x4d\x54\x02\xd9\xeb\x55\x4c\xf7\x9c\x9f\x8d\x6a\xab\x5a\x05\xad\xc2\x72\x13\x7f\x49\x6c\x15\x17\xea\x71\x6c\x8c\x3d\x13\xdf\x2c\x1a\x0e\xa4\xd9\x5c\x67\x4b\x48\x25\xb7\x76\x50\xc2\xe5\xb2\x76\xba\xf1\x4e\xf7\xd6\xea\x22\xac\x6a\xc9\x09\xc1\xab\xb9\x71\xdb\xca\xf6\xbe\x68\x3c\x08\x9d\x30\x56\x7a\xe6\x42\x81\xc8\x12\xcf\x7d\x78\x60\xb4\xc4\xf5\x37\xf1\xb9\x50\x19\xfe\x9e\x78\x2c\x5e\x05\x38\x40\x2f\x05\xca\x6c\x55\x82\x59\x9f\xc3\xb3\xac\xb9\xd6\xe4\x58\xd7\x9c\x4f\x2a\x3c\x7d\xae\xc2\x6d\x1b\xbd\x82\xcb\x8b\xb7\x17\xc0\xa0\xa9\x33\x07\xad\x15\x48\x71\x8b\x30\x6f\x84\xcc\x80\x34\x34\x16\x81\x16\x1a\xfe\xf5\x09\x72\x21\xd1\x06\xa0\x34\x01\x07\x2b\x54\x21\x9d\x3d\xc2\xab\xe8\xa1\x67\xc3\x71\x0a\xb4\xac\xdd\xae\xc7\xdf\x29\xba\xe1\xb7\x7c\x98\xf5\xc0\x9a\xf4\x4b\xad\xbb\x59\x75\xee\xc6\x7a\xa7\xb3\x68\x70\x3c\xfd\x13\xe8\x0e\x80\xd7\xf5\x0e\xff\x2f\x2b\x60\x6f\x83\x64\xcd\x39\xca\x1b\xd5\x1f\x76\x23\x11\xd8\x40\x07\x45\x60\x02\x1e\x54\xe3\x56\x5c\xf9\x3f\x6a\x5d\x48\x3c\x53\x5c\x2e\xdd\x0f\xd1\xc5\xfc\x06\x53\xf2\xaf\x13\x73\x22\xae\xcc\x75\xe2\x1e\x77\x77\xf7\xfe\xe3\x76\x0d\xe9\x16\xc2\xdf\x92\xe1\x75\x77\x77\x75\x3d\x0e\xeb\xc6\x96\x23\x6e\x8a\xa6\x42\x45\x76\xdc\x05\xfd\xa2\x4c\xe2\x57\x0a\x17\xf0\x96\x13\x8e\xc6\x27\x3c\xb1\x61\x6a\x90\x13\x9e\x4b\x74\x86\x23\x3d\x0e\x56\xa0\x55\x62\xc3\x02\x69\xb5\x60\xdf\x2c\x2f\x79\xe1\x8e\xac\x91\x1e\x5f\x4d\xae\x4f\x78\xc8\xed\x52\xa5\x49\x7c\xc2\x43\x57\xa7\xe2\xa4\x0a\x6b\x6e\x50\xd1\x07\x9d\x61\x28\x94\x45\x43\x6f\x30\xd7\x06\x47\x2e\xbd\x15\x6a\x37\x1e\x2d\x84\xca\xf4\x22\xc8\x74\xda\xc7\x16\xf8\x43\x7d\xfc\xc0\x8f\xa2\xc5\x62\x11\x16\x7d\x11\x18\x5f\x57\x21\x4c\x75\x15\x3d\x8c\x6e\xac\x1f\xf8\x05\xf7\xc7\x27\x2b\xc8\x82\x8f\xfc\x21\x09\x3f\x00\xff\xe7\x33\x76\x78\x34\x7d\xfd\xfd\xe4\xe0\x1f\xec\xc0\x0f\xa0\xf5\xb9\x94\x7a\x71\xa6\xd2\x52\x1b\xff\x18\xc8\x34\xd8\x6d\xf9\x5a\x54\x99\xf3\xac\x79\x81\xee\xb7\xaa\x77\x72\x03\xff\x18\xa4\x4e\xfb\xfb\x41\x58\x73\x2a\xdd\x01\x0f\xfb\x50\x20\x7d\x42\x6e\xd2\x72\x34\x86\xfd\x07\x8b\x92\xdb\xf2\x01\x78\xdd\xa4\x4d\xeb\xf6\x7e\x5b\x6e\xef\x94\xff\x96\xa8\xc0\xf6\x46\x20\x2c\x54\xfa\x16\xfb\x9d\x62\x50\x65\x68\xd0\xc0\x02\x7d\x29\x41\xe1\x30\xcd\xb3\x6c\x6d\x4d\x68\x2a\x10\x8a\x34\xb8\x78\xe1\xc7\x33\x30\x68\x6b\xad\x2c\x6e\x50\x45\x11\x88\x7c\xf4\x34\x93\x24\x49\xc0\x8f\x06\x24\x7f\x2b\xb8\x28\xea\x5f\xb7\xdc\x80\x6a\xaa\x39\x9a\x8b\xfc\x3f\x68\x1b\x49\x16\x12\x68\xdb\xef\x44\xee\x78\x1a\x49\xe1\xa3\xe5\xfe\xc2\xf2\xcc\x12\x4a\x8b\x5d\x07\x13\x97\xbe\xc8\xbb\xee\xe4\x29\xa9\x41\x6a\x8c\x7a\x28\xeb\x2a\xd3\x7d\xf0\xff\xf6\x08\x31\xf1\x61\xff\x71\x7c\x8f\x00\x3b\x70\x8c\xb0\x23\xb7\xdd\x34\x4f\xdc\x37\x4e\xa2\x07\xaf\xb5\x94\xf7\xf6\xee\x2d\xdf\x23\xb7\x8d\x41\x20\x51\xf5\x47\x5e\xdf\x0e\x06\xa9\xc1\x4c\x90\x6b\x9a\xbb\xaa\x1d\x47\x51\x89\xb2\x0e\xef\xb5\xec\xae\x65\xbd\xba\x07\xc9\xdf\xcf\x47\x55\x0f\x27\x54\xc1\x1c\x20\xd3\x8a\xcd\x75\xa3\x52\x64\x0e\x37\x7a\x2c\x31\x67\x63\xe2\x78\x34\x6e\x37\xe5\x8c\xb7\xa8\xc8\x7d\x5c\x8a\x0a\x2f\xd4\x47\x27\xe8\x00\xfc\xb8\x7f\xc4\xec\x60\x02\x16\x53\xad\x32\xeb\xf4\x0e\xbe\xd2\xea\x9d\x22\x34\xbc\xc7\xf4\x8f\x21\x86\x6e\x7c\xd2\xed\xe4\x3a\x78\x21\xd7\xf7\xee\x71\x10\xb3\xa3\xaf\xe0\x3a\x7a\x21\x97\xdb\xeb\xfe\x51\xcc\xe2\xe9\x57\x90\xc5\xd3\x17\xb2\xfd\xbd\xaf\xe2\xd4\xa5\xf6\x35\xb9\x4d\x5e\x48\x77\xd8\x27\x37\xe9\xb3\xfb\xaa\xf4\x5e\x4a\x78\x34\xe4\x37\x89\xf7\xff\x0c\xdb\x0b\x80\x27\xfd\x83\xc5\x2f\xca\x62\x05\x6b\x91\x1c\x88\x6e\x68\xb4\x92\x7a\x10\xc7\x93\xc9\xe4\xb3\x06\x07\x71\x70\xf0\xac\xc1\x51\x1c\x1c\x3d\x6b\x10\x4f\xe3\x20\x9e\x3e\x8f\x31\x89\x83\xa3\xc9\x17\x50\x26\x0e\x66\xd3\xe8\xe1\x06\x31\x8b\xdc\xb5\xd0\xbd\x87\x7f\xaf\x7f\x04\x00\x00\xff\xff\x57\x48\xd0\x75\xd5\x0e\x00\x00")

func templatesMainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainTmpl,
		"templates/main.tmpl",
	)
}

func templatesMainTmpl() (*asset, error) {
	bytes, err := templatesMainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.tmpl", size: 3797, mode: os.FileMode(420), modTime: time.Unix(1552669567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x08\x9e\x2b\x73\xb1\x01\x7a\x28\x14\x01\x41\xd0\x6c\x17\x0d\xe2\x43\xb6\xe8\xd1\x18\x93\x23\x69\x6a\x6a\x28\x90\x23\x29\xee\xd7\x17\xb4\xe2\x38\xad\xbd\xe8\xc6\xd9\xf6\x62\xcb\x33\x7c\x6f\x9e\x39\x8f\x43\x95\x75\x08\x82\x51\x59\x0f\x29\x5d\xeb\x3e\x12\x4b\x51\xb4\xe4\x50\x57\x8b\xb2\xfd\x78\x48\x8c\x94\x06\xf0\x7e\xd7\x92\x73\xc8\xba\xba\x9b\x61\x9e\x78\x9b\x4a\xd3\x7e\xac\x16\xa5\xa3\xf1\xb0\x7a\x26\xd5\x7f\x0f\x4e\x11\xfa\x7e\x8e\x32\x8c\xe7\x00\x05\xc3\xa8\x6c\xf0\x45\x5e\xfa\x0f\xb4\x0d\x7e\x9f\x2a\x7c\x53\x04\xc6\x42\x5a\x8a\x6e\x8e\x74\xee\x18\xd9\xab\xbe\x3a\xa5\x5d\xaf\x5b\x04\x47\xdc\xe8\xea\x17\xf4\x7d\x69\xda\xab\x6a\x51\x0e\xfe\xdc\x4a\x4f\x49\x32\x8f\xa7\x73\x59\x12\xec\x72\x16\x54\x1b\xb1\xbe\xd6\xa6\x45\xdf\x1b\xb0\x16\x53\xa2\x0d\x79\x92\x9d\xae\x6e\x5e\xff\x2c\x0d\x54\x8b\xd2\x78\x7a\x23\xa7\x0d\x61\x4b\x98\x80\x5d\x1f\x69\x04\xbb\xd3\xd5\xed\x1c\x52\xc0\x4e\x3d\x07\x2f\x65\x17\x8c\x5d\xe6\xb6\x81\x1d\x09\x05\x4e\xba\xfa\x92\x63\x7b\xf2\x63\xf4\x35\xbf\x19\x7c\xfe\x74\x34\xfe\x57\xcd\xb9\xd9\x84\x41\xd4\xea\xe1\xf1\x7b\x76\x08\x32\xe9\x90\xcc\xd4\x82\x4c\xe8\x82\xae\x7e\x6f\x41\xd4\x84\xca\x85\x0b\xb6\xef\x40\x67\x21\x22\xc6\xa4\xab\xdb\xf9\xe1\x3d\x54\x81\x05\xac\x0c\x99\x6c\x7e\x54\xc3\x25\x7c\x8c\x53\xd2\xd5\x03\x4e\xef\x11\x23\x11\x38\xf5\x10\x91\xed\x0e\xd8\x35\x61\xc4\xc8\xc0\x16\x4d\x1d\x11\x5d\xe8\x42\x4d\x5c\x87\xd8\x41\x36\x48\x1d\x48\x57\x77\x73\x42\x85\x5a\x7d\x3e\xa6\xfe\x5f\xeb\xdc\x06\x66\xb4\xa2\x26\x92\x76\xbf\x7b\xdf\xcd\x40\xad\x48\x9f\x7e\x32\x46\x26\x12\xc1\xb8\xb4\xa1\x33\xab\x87\x47\x7d\xc0\x92\x0d\xfc\x3c\x34\x95\x40\x6c\x50\xae\xf5\x7a\xe3\x81\xb7\xba\xfa\x32\x63\xde\xde\x8e\x43\xd1\x69\x9a\x96\x35\x58\xdc\x84\xb0\x7d\x53\xe5\xbb\x67\xd0\xfb\x4a\xe7\x09\x8f\x8e\x78\x5f\xda\x86\xae\x07\xde\x99\x50\xd7\x64\xb1\xa8\x43\x26\xc8\x9d\x06\x5f\x24\x01\xa1\x24\x64\xd3\x37\xa9\xbb\xdf\xf3\x7e\xe6\xcb\xd5\xf5\xc3\xc6\x93\x5d\x36\x61\x74\xe8\x69\xc4\xb8\xdb\x6b\x04\x6b\xc3\xc0\x92\xcc\x6f\xbf\xae\x1e\x1e\x4d\x1a\x36\xc9\x46\xda\x60\x4c\xf9\x74\x7c\x93\xb6\x9f\x3b\x20\xaf\xc0\x63\x94\xaf\x8f\xbf\xc3\xd7\x7c\x97\x9d\x1a\xfb\xd5\x75\x77\x7a\xd1\x79\xb2\xc8\x69\x7f\xc7\x52\xd7\x9c\x4f\xae\xd7\xd4\x35\x5a\x81\x97\x6b\xbd\xfa\x74\xaf\xd5\x44\x4e\xda\x6b\xfd\xe3\x07\xad\x52\xb4\xc7\x8d\xb0\x8e\x97\x81\x53\xde\x89\xe5\xb0\x35\x90\x12\x4a\x32\xd4\x41\x83\xc9\x84\xc6\x2f\xfb\x7c\x3c\x16\x65\xff\xb5\x3a\x82\x4f\xa2\x3a\x88\x0d\x71\xe1\xb1\x96\x22\x75\x45\xf1\x41\x57\x8b\x1b\x9f\x0f\x27\x0b\xb2\x28\x4a\x0a\x46\x20\x0f\x1b\x8f\x6a\x60\x87\x51\x49\x8b\xaa\x84\x73\x3b\x7a\xec\xd4\xb3\x8d\x0e\x36\x81\x68\x5b\x1a\xf1\x45\xac\x0b\xd6\x84\x1e\xb9\x98\xa7\x4c\x87\x2c\xb3\x2e\x8b\x66\xc4\x98\x28\xb0\xb9\x32\xa7\x2d\x5a\xf5\xc8\xea\xd3\x0b\x46\xdd\xcf\x18\x35\x5e\x2d\x3f\xe4\x96\xa9\x32\xf5\xc0\xaf\xa5\xa9\xbd\x3e\x7c\x92\x3c\xcc\xf2\xbc\xa1\xa6\xcd\xff\x14\xbc\xd7\x55\x69\xf2\xf2\xea\x07\x85\x4f\x16\x7b\x51\x53\x8b\x11\x55\x90\x16\xe3\x44\x09\x55\x36\x37\xba\x45\x69\xfa\x53\x03\x1c\x3b\x4f\x2e\xbf\x28\xe1\xd4\x87\x98\x99\x5f\xbc\xf6\x47\x2a\x8e\x61\xfa\x13\x73\xbd\x8c\x3a\x05\x75\xee\x02\x90\x6f\xfe\x1d\x64\xe6\x9e\x57\x8b\xbf\x02\x00\x00\xff\xff\x00\x2c\x01\x11\xf1\x09\x00\x00")

func templatesPartialsFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsFooterTmpl,
		"templates/partials/footer.tmpl",
	)
}

func templatesPartialsFooterTmpl() (*asset, error) {
	bytes, err := templatesPartialsFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/footer.tmpl", size: 2545, mode: os.FileMode(420), modTime: time.Unix(1552397121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5f\x8f\x13\x39\x12\x7f\x9f\x4f\x51\xe7\x7b\x81\x07\xa7\x99\xe1\x74\x07\xa8\x93\xd3\x31\x20\x31\x12\x70\x2b\x66\x78\x58\x21\x14\x9c\x76\x75\xc7\xc4\x6d\x37\xb6\x3b\x33\x51\x36\xdf\x7d\xe5\xfe\x9f\xa4\xbb\x27\xb3\x8b\x76\x21\x4f\x69\xbb\x5c\xf5\xab\xff\x65\x87\x4b\x64\x1c\xcd\xec\x0c\x00\x20\x64\x10\x49\x66\xed\x94\xd8\x95\xc8\xa4\x50\x2b\x02\x4b\x83\xf1\x94\xfc\x33\x65\x42\x11\x70\x6c\x21\x14\xc7\xbb\x29\x79\x42\x66\xd7\x2b\x91\x81\xd3\xe0\xb7\x20\xd2\xca\xa1\x72\x61\xc0\x2a\x56\x5c\xac\x41\xf0\x29\xc9\x58\x82\xbf\x30\xb7\x24\x35\xeb\xa5\xe0\x48\x66\xdb\xed\xe4\xe3\x87\xab\xdd\x2e\x0c\xb8\x58\xcf\xce\x8a\x33\xdb\xad\x88\x61\x72\x8d\x66\x2d\x22\x7c\x87\xd6\xb2\x04\x77\xbb\x62\xab\x61\x59\x31\x59\xa0\x63\x74\xc1\x94\x42\x43\x66\x0d\xc5\x21\xd5\xad\x61\x59\x76\x44\x51\x50\x65\x1e\xc1\xa1\xa8\x30\xc8\x0e\x98\x95\xe8\x7a\x3e\xb7\x5b\x54\x7c\xb7\x3b\x3b\xbb\x5f\x66\x77\xb7\xb4\x36\x44\x5a\x52\x4f\x38\x82\x3d\xd2\xb2\x20\xa3\x32\xa1\x5a\x21\x75\x4b\x61\x78\xb9\x92\xf2\x76\xa5\x4f\x37\x56\x18\x5e\xea\x44\xd3\xae\x0f\x83\x1e\xda\x52\x95\x2f\xe1\x3f\x28\xfd\x24\x62\x90\x0e\xe1\xea\x35\x3c\xfb\x3c\xfb\x02\xbf\x81\x65\x31\xbe\xb9\x79\xf7\xb6\xe3\x83\x23\x59\x22\x4d\x6a\xc4\x5e\x20\x01\x6b\xa2\x29\x59\x3a\x97\xd9\x17\x41\x10\x71\x35\xd1\xca\x4e\x12\xbd\x9e\xe4\xab\x80\x59\x8b\xce\x06\x22\x65\x09\xda\x40\x2b\x4b\xfd\x99\x60\x7d\xd1\xfc\x9f\x64\x2a\x21\xc0\xa4\x9b\x92\xff\xc7\xb1\x88\x10\x62\x6d\xe0\x3d\x73\x42\x2b\x26\xe1\xda\x31\x27\xac\x13\x91\x1d\xd3\xe5\x13\x2a\x2e\xe2\xcf\x94\x9e\xa2\x45\x47\xfb\xa4\xd4\xfe\xf9\xe7\x99\x5f\xf9\xdb\x4c\x60\xd7\x7f\xa1\x09\x9a\x84\x6d\x17\xf6\x42\x1e\x46\xc2\xd2\xdd\xea\x32\x08\x6d\x13\x97\x9d\x25\x9f\xe7\x94\xda\x14\x32\x23\x94\xa3\xb4\xcc\xfb\x63\x00\x5c\x96\xe1\xca\x54\x92\xb3\x04\x9b\x3a\xd1\x2c\xf4\xab\x19\x72\x77\x48\x39\x9f\x3b\xe1\x24\x92\xd9\xe5\x92\xa9\x04\xa1\x5e\x7f\x11\x06\xdc\x0d\x71\xe1\xc7\x5c\x84\xc3\x74\x40\x2a\xd4\x65\x0a\xbf\xc1\xe4\x6d\x75\x02\x08\x2a\xb2\xdb\xb5\xd5\xb3\x65\xe5\xf3\x0f\x44\xa4\x55\xa5\x7f\x9d\x8a\x41\xb4\x99\xf8\x02\x24\x1c\xbe\xd2\xbe\x80\xee\x76\x75\x45\x24\xb3\xcb\x4d\x6a\x18\x26\xf0\xe8\xf2\xd7\xc7\xde\x3f\x75\xad\x79\x00\xa0\x68\xf3\x50\x40\x83\x68\x5e\xab\x44\x0a\xbb\x84\x47\xaf\xdf\xdf\x8b\x26\x0c\x38\xef\x71\x71\xc0\xe5\x83\x82\xcc\x62\xa4\x15\x67\x66\x43\x15\x5b\xc3\xe9\x21\x77\x4f\xa4\xe5\x65\xa4\x29\xb6\xa6\x8d\x04\xd2\x2b\xd3\xdb\xc9\x3a\xf8\x6a\xfd\x07\x8d\xa4\x56\x58\x2e\x0d\x05\xa3\x14\x03\x7c\xee\x89\xa5\x4e\xc7\x3d\x94\xaf\x56\x70\x04\xa0\x53\xcc\x0d\x4a\x64\x16\x23\x26\xd1\x1f\x23\xb3\x0f\xe5\x02\xd4\x2b\x47\x99\xdd\x1a\x5f\x8a\x1f\x46\x8d\x14\xdd\x52\x73\x2d\x75\xb2\x21\xb3\x77\xed\xc7\xcf\x81\x5e\xe1\xad\xf5\xb0\xb9\x60\x3f\x07\x60\xb6\xd0\xb9\xcb\x2d\x99\xfd\xcf\xff\xf9\x71\x30\xb7\x15\xa9\x17\xbd\x63\x26\x41\x37\x25\xf3\x85\x64\xfe\xdb\xa0\x9c\x12\xa5\x75\x86\x0a\x0d\x28\x6d\x30\x46\x63\xd0\xd4\x7a\xd6\xcd\x77\x21\x75\xd2\xed\xbe\x64\xf6\x52\xea\xe4\x81\x6a\x87\x41\x3e\x5e\xbe\x3a\x9f\xdd\xbf\x9d\x82\x96\x19\x91\xd6\xe5\xac\xbf\x48\x85\x8a\x1d\x16\xc4\x5c\xd6\xc7\xbd\x3d\xa8\x9f\xb0\x8d\x96\x7d\x6d\xbf\xe3\x94\x3d\xd2\x51\xa7\x84\xac\x9e\xed\xfd\x99\x0a\x21\x29\x2a\x64\x8a\x2a\xa7\x4e\x27\x89\x44\x02\xcc\x08\xd6\x70\x2c\x05\x34\xc4\xfd\x42\xfd\xf1\xb1\x48\xb0\x19\x53\x03\x47\x1d\xde\x39\x9f\x50\x2a\x0f\x03\x4f\x36\xe4\xa7\x1e\x07\x0e\x38\x6f\xd4\x34\x70\x92\x6d\x2c\x32\x13\x2d\x4b\xd3\x94\xff\xc7\x8c\x53\x53\xf7\x4b\xad\x76\xff\x8c\x75\xae\x0b\x16\xdf\xc1\x3e\x3d\x81\x7d\x7c\x91\x01\x8f\xc1\xcf\x04\x45\xc8\x72\x54\xa4\x69\xa2\x4d\x18\x14\x56\xc0\xbb\x8c\x29\x8e\x7c\x4a\x62\x26\xed\x50\x03\x3e\x4e\x88\x53\x1b\xeb\xde\x91\xc2\x79\xcd\xdc\xf3\xf1\xc3\x15\x90\x80\xec\x76\x47\x34\x94\xb2\xc8\x89\x35\x56\x43\x4b\x55\x5c\xda\xd9\x54\x4b\x4e\x05\x52\xca\x85\xcd\x24\xdb\xd0\x85\xd4\xd1\x6a\xd0\x3b\x6d\x0d\x3b\xc0\xaf\x56\xed\x94\x92\x72\xfa\x9f\x66\x5e\x79\xde\xb9\x7c\xbd\xd1\x29\xfe\x81\x8a\xbb\xdd\x9a\x62\x9a\x9d\xdc\xb0\x3b\xad\x74\xba\x19\xbb\x8b\x8c\x99\xab\xd2\xfd\xab\xad\x5c\xc5\x16\x72\x68\xb8\xee\x28\x5c\xc2\x6f\xc6\xc1\xd3\x0c\xf0\xac\x31\xc0\xf9\x93\x2a\x3c\x96\xcc\x66\x3a\xcb\xb3\x29\x71\x26\x2f\x1f\x00\x6e\xfc\xb4\xee\x6f\xdd\x03\x36\x69\x2d\x20\x62\x98\x5c\x2e\x85\xe4\x06\xd5\x88\xfa\x0d\xec\x81\x40\x8b\x3c\x0b\x5a\x8c\x76\x5d\xb4\xe7\xff\x6e\xe0\x5e\x3c\xd9\xb7\xcf\x7c\x5e\x3d\x6c\xd4\x6d\xa9\xce\x81\xde\x90\x2f\x57\x25\x5b\xf8\xf6\x64\xf3\xc5\x3d\x85\x70\x5f\xc7\xca\xcb\x0f\x50\xb3\x51\x77\xc0\xeb\xa5\xba\x85\xef\x8f\xb4\xf2\x5b\x27\x42\x6b\xc4\x9c\x16\x0c\xb5\x91\xcb\xbe\x5d\xbf\x17\xd1\xf3\x07\xb9\x7c\x4f\xee\x60\x6a\x1c\xfe\xee\xbb\x28\xb5\x1c\x0f\x0b\xdf\x43\x39\x8d\xa5\xeb\xc8\xf5\xe8\xfe\xf4\x3c\x69\x82\x3a\x4e\xbe\x91\xec\xab\xea\x8f\xcd\xcd\x1a\x37\x43\x8f\x06\xf5\xef\x86\xad\x84\x4a\x20\x63\xc6\x81\x50\xc0\xa0\x3c\xf6\xdf\x11\x43\x7c\xef\x59\xaa\x19\x84\x06\x66\xa9\xb2\x83\x42\xdb\x6a\xeb\xc6\xb4\x37\x59\x75\x9a\xf5\x4b\x36\xf4\x1a\x57\xbf\xd5\x81\xd1\x12\x6b\xf2\xc3\x37\xb9\x58\x9b\xb4\xf3\xfa\x51\xbc\xdb\x41\x49\x3a\x9f\xfb\x4d\x02\xbe\xc7\x68\xe5\x8d\x3c\xd4\xdd\xc3\xa2\x28\xec\xab\x30\x9f\x57\x8b\x1d\xd7\x5d\x3c\x6d\x4b\xd1\xbf\x08\xc4\xda\xec\x0d\x15\x55\xef\x2f\x5e\x84\x18\xac\x70\x73\xab\x0d\x7f\x64\x1f\x83\x36\xe0\x44\x8a\x60\xd1\x08\xb4\x70\xf5\x2a\x0c\x0a\xe6\x3d\x48\x84\xca\x72\x07\x6e\x93\xb5\x1a\x03\xcb\x9d\x8e\x74\x9a\x49\x74\x38\x25\x3a\x8e\xc9\x21\xd4\xf2\xd4\x1e\xd4\xf3\x06\xea\xd3\x0b\xd2\xb9\x59\x17\x2c\x87\x02\x46\xb1\x14\xa7\xe4\x1b\x81\x35\x93\x39\x4e\x49\x9f\xad\x16\xb9\x73\x5a\xd5\x10\xf3\x45\x2a\xdc\x11\x9e\x8a\xa6\x06\xd3\x9a\xed\xe9\x21\x14\x5a\x71\x18\x08\xd3\xee\xb8\xb5\x16\x36\x67\x52\x6e\xaa\x22\x7f\xca\xa4\xd5\x3d\xee\x2f\x31\xe5\x4d\xa6\x0e\x4c\x29\x92\xa5\x23\xb3\x21\x0e\x61\x50\xaa\x71\x98\x11\x3e\xaa\xc6\xae\x17\x61\x50\xbf\xda\xff\x1e\x00\x00\xff\xff\xe5\xc5\xe7\x08\xbf\x17\x00\x00")

func templatesPartialsHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsHeaderTmpl,
		"templates/partials/header.tmpl",
	)
}

func templatesPartialsHeaderTmpl() (*asset, error) {
	bytes, err := templatesPartialsHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/header.tmpl", size: 6079, mode: os.FileMode(420), modTime: time.Unix(1552397121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesProductpageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4b\x8f\xa4\x36\x10\xbe\xef\xaf\x28\x71\xaf\x61\x98\x5e\xe5\x21\x31\x1d\x25\xd9\x43\x22\x25\x52\x14\x25\xe7\x96\x1b\x17\xb6\xd3\xc6\x46\xc6\xf4\x6c\x6b\xd4\xff\x3d\x82\x81\x06\xdb\xf4\x3e\xb4\x27\xfc\x28\x97\xeb\xfb\xea\xab\x32\x25\x57\x67\xa8\x34\xeb\xba\xe7\xac\x65\x82\x50\x19\xef\x2c\x1c\x59\x75\x12\xce\xf6\x86\x23\x0a\xa6\x35\xb9\x4b\xb6\x7f\x07\xb0\x36\x7f\x71\xac\x6d\xc9\x8d\xeb\xe1\x4e\x65\x35\x0e\xbb\xd3\x56\xb2\x79\x5b\x07\x28\x0d\x3b\x2f\xb3\xd0\xf2\xe8\x88\xf1\xca\xf5\xcd\x31\x5b\x9b\x00\x94\x56\x83\xe2\x81\x41\x7a\xe6\x70\xd0\xaa\xf3\xd1\x49\x80\xd7\x57\xc7\x8c\x20\x78\xf8\xe5\x66\x79\xbd\x46\x36\x00\xa5\x56\x5b\x1e\x95\xa7\x26\xf1\x38\xda\x33\x90\x8e\xea\xe7\xec\xf5\x15\x1e\xfe\xfd\xfb\xf7\xeb\xf5\x4e\x44\xe6\x94\xed\x07\x9b\x7f\x94\xd7\x74\xbd\x96\x39\x4b\xdd\x95\xb9\x56\x69\xd8\x64\x78\x14\x68\x99\x5b\x1d\x70\x97\x73\xb5\x22\xb3\xcc\x03\x6e\x47\x66\x07\xd6\x96\x34\x67\xab\x9c\xc0\x90\x34\x6c\x38\xbe\xff\xfe\x6d\xa8\x05\xee\x7e\x08\xc0\x96\xb2\x48\xa5\x72\x38\xf8\x01\xca\x1b\xaa\x3f\xc9\x33\xce\x3c\x5b\xe0\xc9\x22\xf0\xd0\x6e\x39\xa8\xac\xf1\x64\xe2\x54\x05\xfe\x3e\x50\x57\x39\xd5\x7a\x65\x4d\x40\x42\x99\xb7\x6b\xc0\x21\xfe\x95\x94\x0c\x3b\x63\x47\x95\x35\x9c\xb9\x0b\xe2\xd1\x3a\x4e\x0e\x35\xd5\x1e\xb5\x80\x3b\xf0\x8b\x1f\x6f\x43\x5b\xd7\x1d\x79\x7c\x82\x96\x71\xae\x8c\x18\x8f\x42\xc3\x9c\x50\x06\xbd\x6d\x07\x1b\xdc\x45\x6c\x3d\xcd\xb7\x47\x76\x45\xb6\xff\x4d\x09\xa9\x95\x90\x9e\x38\x4c\xf0\xcb\x5c\x3e\x05\xe7\xfb\x37\x91\xcb\xd9\xb4\xc3\x51\xd0\xb3\xd3\x61\x82\x68\xa8\xf7\x8e\xe9\x75\x28\x68\x48\x30\xaf\xce\x84\xd6\x10\xd6\xea\x63\x42\xec\x54\x01\x1f\x06\x66\x57\x91\xfc\xc5\x04\x75\x49\x31\x94\xa9\x18\x37\xf5\xfe\x19\x59\xa7\xa2\x4e\x25\x5d\xe6\xbd\xbe\x93\xce\xd5\xe4\x36\x9c\x06\xf3\x27\xee\x64\x13\xaf\x30\x25\x7b\xa4\x46\x39\x6b\xb0\x6b\xd2\xb5\x86\x7f\x53\x7f\x0b\x2b\x6d\xca\x5c\x25\x95\xe6\x8e\xcc\x27\xf2\x16\xa4\x26\x4c\xcc\xaf\xd3\xe9\xb8\xe8\x97\xce\xb4\x96\xad\x64\xba\x5e\xd4\x6a\x08\xbd\x54\x8e\x07\x7d\xbc\x21\x57\xf5\xee\x02\x92\x86\x74\x23\xee\x0a\x54\x86\x93\xf1\xc4\x91\xb4\x56\x6d\xa7\xba\x40\x47\x8f\xf3\x6c\xac\x93\x86\x23\x16\xf3\xca\xd1\x7a\x6f\x1b\x5c\x15\xc4\x74\x62\x9e\xba\xb7\x3b\x96\x85\xf9\xc4\x63\x50\x42\xc3\xfc\xbf\x0e\xa5\x3d\x93\xc3\x4a\xab\xea\x94\xb4\xd7\x35\xf1\x8d\x32\x38\x87\x5f\x3c\x6e\xbd\x52\x61\x3c\x4f\xd1\x65\x45\x1c\x5f\xb1\xd1\xcd\x4b\xb9\x9b\xef\xab\x75\xdf\xc9\x6c\xff\x05\x6a\x2f\x73\xb9\x4b\x25\x1f\xf4\xa3\x14\x4e\x10\x6b\x1a\x5b\xc2\x5d\x91\xc0\xf9\x1a\x6d\x47\x71\xb4\x11\xc8\x8d\x57\x6d\xc0\x78\xaf\xf3\xce\x10\xdb\x2f\x40\x1d\xd7\x7e\x5c\xf9\xeb\xba\x0f\x5e\xad\xa8\xe8\x3e\xa3\xf6\x6c\xe3\xb1\xd3\xb6\x62\x1a\x3b\xcf\xbc\xea\xbc\xaa\x86\x1e\x6a\x4e\xb7\x5a\x0c\xa5\xb7\xaa\x8c\xad\xc2\xc9\xee\xfe\xa7\xd8\x8f\x87\x83\x6a\x98\xa0\x50\x7d\xc5\x77\xf7\x53\x3a\x25\x30\xfe\xb1\x49\xa4\x17\x93\x3b\x2b\x31\x97\xa4\xdb\x7c\x44\xb7\x80\xcb\xf6\x7f\x58\x7b\x52\x46\x40\x6d\x1d\x8c\x9b\xb0\xec\xfe\xb4\xd5\x95\xbb\x96\x99\xf9\xca\x11\x02\x4a\xab\x39\xb9\x1b\x17\xc5\xfb\x6c\x5f\xaa\x46\x40\xe7\xaa\xe7\x2c\x57\x8d\xc8\x7d\x81\xa3\xef\x87\xd6\x88\x0c\x98\xf6\xcf\x59\x06\xf9\xbe\xcc\x07\x67\x71\xe6\xe3\xb2\x58\x74\x37\xd2\x36\x37\xe9\x6d\xb8\x3f\x83\x64\x86\x5f\x40\xf4\x8a\x13\x78\x0b\x9a\x3c\x5c\x6c\x0f\x27\x63\x5f\xe0\x45\x92\x1b\x57\x6b\x65\x78\x02\xf7\xe1\xdd\x27\x84\x9a\xfc\x2a\x7d\xd5\x53\xf3\x7f\x00\x00\x00\xff\xff\xad\x53\x4d\x1a\x35\x0b\x00\x00")

func templatesProductpageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesProductpageTmpl,
		"templates/productPage.tmpl",
	)
}

func templatesProductpageTmpl() (*asset, error) {
	bytes, err := templatesProductpageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/productPage.tmpl", size: 2869, mode: os.FileMode(420), modTime: time.Unix(1552397121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/error.tmpl": templatesErrorTmpl,
	"templates/homepage.tmpl": templatesHomepageTmpl,
	"templates/main.tmpl": templatesMainTmpl,
	"templates/partials/footer.tmpl": templatesPartialsFooterTmpl,
	"templates/partials/header.tmpl": templatesPartialsHeaderTmpl,
	"templates/productPage.tmpl": templatesProductpageTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"error.tmpl": &bintree{templatesErrorTmpl, map[string]*bintree{}},
		"homepage.tmpl": &bintree{templatesHomepageTmpl, map[string]*bintree{}},
		"main.tmpl": &bintree{templatesMainTmpl, map[string]*bintree{}},
		"partials": &bintree{nil, map[string]*bintree{
			"footer.tmpl": &bintree{templatesPartialsFooterTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{templatesPartialsHeaderTmpl, map[string]*bintree{}},
		}},
		"productPage.tmpl": &bintree{templatesProductpageTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

