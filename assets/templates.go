// Code generated by go-bindata.
// sources:
// templates/.DS_Store
// templates/homepage.tmpl
// templates/main.tmpl
// templates/partials/footer.tmpl
// templates/partials/header.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDs_store = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x98\x3d\x6a\xc4\x30\x10\x85\xdf\x28\x2e\x04\x69\x54\xa6\xd4\x15\x72\x03\x61\x9c\x13\xf8\x02\x31\x04\x42\xc0\x38\xc1\xf9\xa9\x5d\xe5\x5c\x39\x5a\xf0\xea\x2d\x6b\xb0\xbd\xd5\x2e\xeb\x5d\xde\x07\xe2\x2b\x34\x23\x1b\x15\xd2\x8c\x00\x58\xf9\xfd\xf2\x08\x04\x00\x1e\xd9\xf8\xc5\x22\x9e\x63\x86\xa3\x2d\x8f\x00\xbc\xa1\x41\x8b\xcf\x9f\xba\xef\x96\xd7\x9a\x61\xbb\xc5\x3f\xd0\xa0\xc7\xd7\x34\xbf\x7d\xef\x5e\x39\x2f\x84\x10\x42\x88\xd3\xc1\xbb\xd5\xdf\x5f\xfa\x47\x84\x10\x9b\x63\x3c\x1f\x22\x9d\xe8\x21\xdb\x38\xef\xe8\x62\x92\x13\xe8\x48\x27\x7a\xc8\x36\xc6\x39\xba\xa0\x3d\x1d\xe8\x48\x27\x7a\xc8\xe6\xa1\x65\x6c\x3e\x8c\x5f\x36\x76\x28\x16\xe8\x48\xa7\xf3\xec\x8d\x10\xd7\xce\x5d\x56\x18\xef\xff\xa7\xf5\xfe\x5f\x08\x71\xc3\x58\x51\xd5\x55\x79\xe4\xb1\xcd\xb1\x10\x78\x66\xcc\xdf\x3e\x71\xa5\x10\x70\xf9\xc1\xf0\x01\x87\x38\x15\x03\x42\x6c\x88\xff\x00\x00\x00\xff\xff\xa0\xac\x51\x2e\x04\x18\x00\x00")

func templatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_templatesDs_store,
		"templates/.DS_Store",
	)
}

func templatesDs_store() (*asset, error) {
	bytes, err := templatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1476797985, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomepageTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x73\xdb\x36\xf6\x7d\xef\xa7\xb8\x83\x97\xdf\x4c\x66\x28\x5a\x8e\x7f\x69\xb3\x23\x33\x93\xc6\x4d\x9b\x26\x6b\x67\xe3\x38\xdd\xf6\xc5\x03\x91\x57\x24\x6a\x10\xc0\x02\xa0\x64\x45\xe3\xef\xbe\x03\x90\x94\x28\x8a\x54\xec\xd0\x4d\xdd\x6d\xfc\x62\x11\x7f\x0e\x2e\x2e\xce\xc1\xbd\x00\xf9\xcd\x24\x61\x73\x88\x39\x35\xe6\x98\x28\x9a\x62\xc0\x84\xd5\x12\xa6\x34\xbe\x4a\xb5\x2c\x44\x12\x04\xd4\x58\x4d\x39\x89\xbe\x01\x00\x68\xb6\x5f\x68\xaa\x14\xea\xaa\xa6\x5d\x1b\x4b\x1e\xb8\x16\x8d\xea\x9e\x66\x1d\x2d\x7c\xab\x6c\xbc\x6b\xd9\xe5\xa5\x65\x96\x23\x89\x7e\x41\x1e\xcb\x1c\xc1\x4a\xb0\x19\xc2\xd9\x6c\xc6\x62\x84\x99\xd4\x70\x4a\x2d\x93\x82\x72\x38\xb7\xd4\x32\x63\x59\x6c\x26\x61\x36\xee\x19\x44\x75\x8d\x11\x4b\x61\x51\x58\x12\xbd\xcf\x10\x2e\x5e\xff\x9f\x01\x4e\x75\x8a\xc6\x02\x13\x09\x2a\x14\x09\x0a\x0b\x4a\xcb\xa4\x88\x51\x83\x9c\x81\x74\xe3\x33\xca\xc1\xac\x07\x05\x2a\x12\x6f\x9b\xc6\x58\xa6\x82\x19\x4c\x40\xd4\xb6\xad\x9b\x51\x0e\x4c\x18\xcb\x6c\x61\xd1\x01\x59\x3f\xe2\x68\x12\xaa\x0e\xbf\x85\x09\x9b\x37\xbc\xbd\x79\xac\x7e\x56\xff\xb6\x56\xb5\xb9\x94\x29\xe5\x1c\xf5\x72\xef\x5a\x6e\xe0\xb3\xc3\xe8\x0d\xb5\x6e\xd6\xaa\x98\x72\x66\x32\x4c\x40\x23\x47\x6a\xd0\x79\xf4\xb0\x61\x49\xc1\x81\x25\xc7\xa4\xae\x0d\x38\x33\x96\xd4\xd8\xee\x21\x08\x04\x16\x8e\x47\x50\xf3\x02\x72\xaa\x53\x26\x02\x8e\x33\x1b\x04\x07\xf5\xe3\x54\x5a\x2b\xf3\x20\x38\x68\xb1\x62\xb5\xd2\x54\xa4\x08\xa3\x13\x6a\xe9\xe8\x5d\x35\xd0\xcd\x4d\xcb\x49\x13\xce\x1a\xcc\xf2\x83\x05\x3c\x0d\x0e\x9f\xd6\x96\xb7\xc7\x39\xac\x0b\x34\x4b\x33\x1b\x04\xe3\xb6\x5d\x4d\xff\x2d\x32\x66\x11\x14\x4d\x12\x26\xd2\xc0\x4a\xe5\xda\xd7\x8f\x6b\x80\xba\xa0\x1e\x62\x53\x52\x62\x8e\x3b\x09\x3f\xc9\x1e\xd7\x96\x57\xa6\xae\xb9\x3e\xa1\x90\x69\x9c\x1d\x93\xd5\x0a\x46\x17\xef\x5e\xdd\xdc\x90\xc8\xfd\x7c\xef\xaa\x6f\x6e\x26\x21\x8d\x26\x61\xf6\xb8\x13\x55\xed\x80\xae\xc9\xed\x20\x2a\x47\x9e\x50\xeb\x81\x76\x48\x37\x09\x39\x6b\x2f\x04\x8a\xa4\xe1\xf7\x49\x58\xf0\x16\x6b\x7e\x42\x9a\x70\x26\x10\x66\x2c\x2d\x74\x1f\x59\xb2\xaa\x55\x50\xb5\xba\x1b\x5f\xf6\xd2\xa3\x36\xe0\x65\x89\x7c\x5b\x96\x8c\x8f\x60\x6d\x54\x42\x2d\x7d\x28\xd4\x58\xad\xd8\x0c\x46\xe7\x8a\xea\x2b\x67\x9b\x9b\xe2\xce\x94\xaa\x89\x35\x24\xbd\x35\x95\xcb\x4b\x53\x77\x6f\x6a\x7c\x5f\xff\x75\x07\xf8\xdd\x04\x81\xc9\xe4\x82\x80\x83\x0a\xd6\x15\x8e\x90\x95\xdb\x5b\xc6\xc1\x6a\x15\xc0\xe8\x57\xf0\xbf\x3c\x5f\x7a\x36\xf9\xfa\x6f\xdd\x1f\x32\xd4\xd8\x6f\x5f\xb5\xc1\xf5\xd5\xaf\x56\xe1\x23\x38\x3d\x83\x9f\xcf\xe1\x51\xd8\xe3\x23\x8f\x23\xa4\x89\x35\x53\x76\xbf\x55\x13\x96\xa7\x3b\xee\x08\x58\x4e\xd3\xd2\x29\x19\x4b\x90\x80\xd1\x71\x43\x9a\xe1\xba\xa1\x6f\xb7\x67\xde\x93\x70\xbf\x15\xfd\x93\x6d\x6b\xb0\xd1\x67\xb3\x8b\xb4\xd6\xff\x3e\xf7\x92\x16\x74\x29\xe0\xde\x99\x96\xf4\x2d\x43\x49\xa9\xc8\xd1\x5b\x8d\x17\x82\xd9\x9b\x1b\x37\x74\x77\xcd\x9e\x49\x96\xa0\xad\x8e\xe5\xbf\x3d\xed\x77\x8c\xe8\xb1\xa0\x2e\xee\x75\x71\x57\x68\x6e\x7a\x67\xc6\x0b\x93\xdd\xd7\xf6\x0a\x77\xdf\xae\xfc\xe6\xf3\x40\xe2\xda\x67\xf1\xf1\x8d\x94\x57\x4c\xa4\x2e\xb7\x4b\xe4\x42\x70\x49\x13\xb0\x2c\x47\x30\xa8\x19\x9a\x67\xfd\x24\xdd\x59\x84\xf7\x7a\x09\xb2\xd0\xcd\xee\x80\xd7\x8a\x4b\x8d\x7a\x67\x3d\xb6\x57\xa3\x23\xb0\x9d\xd9\x0c\x35\x9c\x9d\x9e\xfb\xdc\xae\x23\xe7\xeb\x8e\x74\xd2\x75\xbb\x87\x9c\xe8\x49\xcb\xc1\x2d\x5e\x64\xe8\x57\xca\xb8\xac\xe6\xf1\x36\x4b\x7c\x45\x9e\xf8\x8a\xea\x89\xa7\x41\x70\xf4\x5d\x07\x0d\x9a\x2c\x3a\xe8\xb1\xa8\x4d\xaa\x75\x36\xf5\x89\x6c\xbf\x45\x98\x7e\x8e\x55\x1c\x6e\x53\xae\x0b\xbf\x3d\xc6\x54\x5e\xaf\x93\x1c\x68\x3e\x04\x41\x26\x73\x74\x79\xfe\xd6\x30\xce\x11\xe3\x6f\xb7\xb9\xec\x7c\x38\x3e\xd8\x2e\x73\xee\x1b\xff\x7f\xd3\x99\xe3\xa7\x5b\xce\x3c\xda\x6e\xef\xca\xda\x69\x4a\x8f\x34\x3c\x41\x2a\x49\xec\xd8\x76\xd8\x10\x49\x98\x21\x57\x21\x97\x31\xe5\x1b\xd2\x6d\x04\xe3\x8e\x3f\xbe\xb2\x41\xc9\x67\x13\xa3\xa8\xa8\x47\xf2\x31\x29\xc8\x24\x4f\x50\xc3\x82\x25\x36\xf3\x73\x7d\x5a\xfd\xf6\xb3\x1a\x57\x0f\xde\x31\x6e\x74\x17\x05\x7d\x90\x1b\x8d\xc2\xd1\x28\x64\x79\x1a\xda\x71\xe0\x07\x1a\x29\x91\x12\xa0\xdc\x1e\x93\x35\xb7\x85\x0c\xa6\x52\x27\xee\x34\x31\x71\xd1\x50\x44\x5b\x26\x94\x4b\xc2\x59\x7c\x45\xa7\x7e\x07\xa8\xda\xec\x89\x3c\x6d\x71\x37\x28\xea\x8d\x24\xd1\x73\xc8\xa8\x48\x96\x90\x16\x2c\xf1\x87\x42\x8e\x16\x96\xb2\x80\x2b\x21\x17\xb0\x70\x49\x85\x2b\x9d\x31\x91\xec\x78\xa8\xfb\xb0\x05\xbb\x07\xae\x3d\xc5\xbb\x1b\xf9\xad\xc4\x79\xd4\x16\x67\xaf\x1c\x6b\x01\xee\xd1\xe8\xff\x8a\x28\xef\xa4\xc0\xbb\x0b\xac\x29\xa7\x18\x85\x29\x0c\x89\x5e\xf8\xff\xf7\x44\xd3\xbb\xea\xed\x71\xaf\xc4\x4a\xf3\x02\x2e\x53\xd9\x10\x5a\x69\x2c\xb8\xd2\x3d\x9a\xbb\x85\x8c\x2c\xe3\x68\x1a\x07\xc2\x13\x66\x62\x39\x47\x0d\x99\x5c\xf8\xa8\x59\x8e\xdf\xbc\xd3\x70\xfb\x0f\x28\xca\x84\x05\x0a\x8a\xc5\xb6\xd0\xeb\x6b\x8b\xf2\x72\xc3\x87\x46\x07\xb0\x40\xe0\x6c\x8e\x5f\xd5\xf5\x77\x55\x57\x66\xad\xfa\x47\x18\xce\x99\x29\x28\x1f\x49\x61\x46\xa9\x9c\x8f\x8a\x2b\x02\x96\xea\x14\xed\x31\xb9\x9c\x72\x2a\xae\x48\xf4\xa1\x6c\x72\x76\x7a\xfe\xe0\x24\x58\x5a\x1f\x38\xeb\x37\x0a\xfc\xe1\x9a\xe6\x8a\x7b\xe2\x33\x61\x51\xd3\xd8\xb2\x39\xfa\xd3\x31\x94\x1d\x98\xf1\x62\xd8\xd5\x67\x35\x2a\x2d\xac\xac\x5d\x1d\x1c\x3e\x19\xa2\xda\x8d\xf3\x80\x19\xa0\xb0\xc0\xa9\x71\x2c\x2e\xd3\x5c\x97\x16\x08\x5c\x00\x55\x4a\x4b\x1a\x67\x68\x5c\x1c\xcc\xa9\xcf\x17\x5c\x9f\xe6\x85\x65\x1c\xa3\x31\x6c\xca\xd1\x8b\x58\x23\xc7\x39\x15\xd6\x75\xa0\xce\x6e\x2c\x2f\x02\x63\xa0\x45\xc2\x50\xc4\x5f\x46\xdb\x5e\xcd\x79\x12\x1c\x7d\xdb\xbc\xce\x6b\x28\xfe\xe8\xbb\xdb\xca\xfc\xcf\xd2\x70\xf7\xb5\xce\x9d\x35\x3c\x2c\xd6\x61\x2c\x85\xcc\x97\x21\x13\x33\x5e\x5e\x43\x8b\x44\x69\x16\x23\x13\x09\x8b\xd1\x84\xd3\x82\x73\xb4\x4c\x98\x30\x96\xc2\x14\x39\xea\xaa\xba\x6a\x1f\x72\x7f\x4c\x26\xd1\x89\xe3\xf9\x79\xec\x29\x00\x2f\x68\xae\xee\x2d\x74\x76\x65\x78\x5e\xa0\x9f\xb8\x3e\xfa\xbe\x60\xdc\x79\x1c\x16\x52\xf3\x24\xe0\x48\xfd\x13\x5e\x2b\xd4\x96\x19\x04\x26\x7c\x88\x62\x42\xc8\x39\xf5\x62\xa5\x4a\x71\x16\x97\x21\x4b\xce\x4a\xed\x9a\xf8\xcb\xd3\xba\xf3\xa8\x56\x05\xb2\xcd\x0e\xf1\x95\xd4\xdd\xa4\x56\x28\x15\x47\x25\x55\xb1\xe6\x74\x2c\xf3\xbc\x10\xcc\x2e\xc3\xad\xe2\x9c\xa5\xba\xa4\xf1\xa6\x18\x8d\x65\xb9\x23\x75\x83\xfb\x54\x88\x82\xf2\x9c\x25\x4b\xa4\xba\xab\x69\xad\x82\x1f\x51\xa6\x9a\xaa\x6c\x59\xbd\x08\xb2\x7f\xb8\x08\xa0\x75\xee\x39\xf0\x9b\x3f\xb3\x3e\x57\x93\x0a\x05\xa4\x1b\x9b\xa4\xb6\x94\x83\x3b\x10\x32\x71\x85\x49\x45\x70\x66\xf1\xcb\x9c\x77\xbe\xd2\xfb\xaf\x4e\xef\xb3\x0f\xa3\x8b\xd7\x7f\x02\xa5\xcb\x4b\xb6\xae\x17\xaa\xd5\x0b\xd7\x04\x58\xae\xa8\xb6\x8c\x72\xbe\xf4\x99\xca\x4c\x23\xc2\x4c\xcb\x1c\x94\xe4\xac\x7e\xab\x3a\xe3\xc5\x1f\xb3\x9b\xb7\x6e\x06\x57\xab\xf0\xd1\xf6\x3d\xe1\x4b\xa4\xee\x60\x94\x40\x45\x87\xee\x6b\xc1\x59\xd5\xea\x33\x6e\x06\xf7\x5f\x04\x36\xd2\xa4\x07\xf0\xb6\x73\xa3\xf2\xa3\xee\x0b\xe2\xce\x3b\xe0\x8b\xd7\xf0\x16\xb5\x51\xe8\x53\x6b\x03\x87\x07\xe3\x27\xdd\x44\xbb\xdd\x56\x54\xee\x3f\x7f\x59\x77\x9c\x34\xd2\x13\x88\xcb\x94\xeb\xef\xeb\x8d\x57\x8d\xaf\x30\x34\xce\x19\x2e\x5c\x0a\x77\xf1\x1a\xca\x1c\x97\xc5\x5b\x57\xf2\x9f\x76\x53\xef\x55\xff\x1d\xaf\xf8\x5d\xab\xcf\xf9\xf8\x61\xef\xcb\x6c\x6f\xc9\x1d\x5e\x61\x3f\xf8\x55\xed\x5f\xd7\x5b\xbc\x88\xbc\xed\x07\x09\xf5\xd3\xfa\x35\xf0\xf6\x27\x32\x7d\x5f\xc8\xdc\xe5\x63\xa7\xec\x30\x7a\xee\xce\xc6\xbf\x39\xf2\x35\x3f\xe8\x59\x47\xdb\x5d\xae\x54\x68\x34\xf8\xe8\x69\xd2\x5e\xac\xb6\xbb\x1a\xab\x5c\x77\x09\x98\xc5\xbc\x99\x23\x50\x2b\x3f\x3e\xa3\x1f\x8f\x29\x89\x9e\x97\x5e\xdb\xb3\x03\x7c\x12\x65\x4a\xa2\xef\x87\xa3\xc4\x24\x7a\x31\x1c\x25\x21\xd1\xc9\x70\x14\x24\xd1\x0f\xc3\x51\x66\x24\x7a\x39\x1c\x25\x25\xd1\x8f\xc3\x51\x32\x12\xfd\x34\x1c\x85\x91\xe8\xd5\x70\x94\xdf\x49\xf4\xf3\x70\x94\x2b\x12\xbd\x1e\x8e\xc2\x49\xf4\x66\x38\x4a\x4e\xa2\x7f\x0e\x47\x11\x24\x3a\x1d\x8e\x22\x49\x74\x36\x1c\x45\x91\xe8\xed\x70\x94\xff\x90\xe8\x5f\xc3\x51\x34\x89\xde\x0d\x47\x31\x24\x3a\x1f\x8e\x62\x49\xf4\x7e\x38\x4a\x41\xa2\x8b\xe1\x28\x73\x12\x7d\x18\x8e\xb2\x20\xd1\x2f\xc3\x51\xae\x49\xf4\xef\xe1\x28\x4b\x12\xfd\x3a\x1c\xe5\x23\x89\x7e\xdb\x45\xd9\xc4\xf8\xed\xb0\xfe\xdf\x00\x00\x00\xff\xff\xfb\x0f\xef\xf8\xd0\x2c\x00\x00")

func templatesHomepageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomepageTmpl,
		"templates/homepage.tmpl",
	)
}

func templatesHomepageTmpl() (*asset, error) {
	bytes, err := templatesHomepageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/homepage.tmpl", size: 11472, mode: os.FileMode(420), modTime: time.Unix(1477039780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x7f\x73\xdb\x36\x12\xfd\xbb\xf9\x14\x5b\x66\x7a\x94\x22\x82\x3f\xac\x48\x96\x6d\xd1\x33\x6e\xe2\xe4\x7c\xd7\xc4\x99\x8b\x3b\xed\x8d\xc7\x33\x85\xc8\x25\x89\x04\x04\x58\x00\xb2\xea\x28\xfc\xee\x37\x00\x25\x5b\x56\x5c\xd5\x9d\x5c\xf2\x07\x45\x00\xbb\xef\xbd\x05\xb1\x8b\x8d\xa7\xdf\xbf\x3c\x7f\x71\xf1\xdf\x77\xa7\x50\x99\x9a\x1f\x3f\x99\xae\x7f\x90\xe6\xc7\x4f\x00\x00\xa6\x86\x19\x8e\xc7\xcb\x25\x84\x6f\xd0\xd0\x9c\x1a\x1a\x5e\xd8\x29\x68\x5b\x20\x70\x5e\x14\x2c\x43\x28\xa4\x82\xb7\xd4\x30\x29\x28\x87\xf7\x86\x1a\xa6\x0d\xcb\xf4\x34\xea\xbc\x3b\xa4\x1a\x0d\x05\x41\x6b\x4c\xbd\x1c\x75\xa6\x58\x63\x1d\x3c\xc8\xa4\x30\x28\x4c\xea\xdd\x23\x79\x79\x67\xd2\xb6\xde\x97\x10\x1f\xf1\x66\x21\x55\xae\xef\xf9\x2b\x2a\x4a\xdc\x00\xf9\xf7\xca\xa8\x6d\x61\xb9\x24\x10\xb6\x6d\x00\xcb\x25\x8a\x7c\x0b\xb2\x32\xa6\x21\xf8\xfb\x9c\x5d\xa7\xde\xaf\xe4\xe7\x13\xf2\x42\xd6\x0d\x35\x6c\xc6\x71\x03\xff\xec\x34\xc5\xbc\xc4\x20\xab\x94\xac\x31\x4d\x3c\x88\x36\x41\xb2\x8a\x2a\x8d\x26\xf5\xe6\xa6\x20\x13\xef\xfe\xda\x1a\x63\xc1\x72\x53\xa5\x39\x5e\xb3\x0c\x89\x1b\x04\x4c\x30\xc3\x28\x27\x3a\xa3\x1c\xd3\x24\x8c\x83\xb9\x46\xe5\x86\x74\xc6\x1d\x4f\x17\xf2\x35\xc3\x45\x23\x95\x79\x60\x37\x0a\xa9\x6a\x6a\x48\x8e\x06\xb3\xad\x5d\x35\xc8\xb1\xa9\xa4\xc0\x54\xc8\x07\x3c\x4d\x85\x35\x92\x4c\x72\xa9\x36\x9c\x9e\x8e\x26\xa3\x83\xd1\x8f\x0f\xd8\xd3\xa6\xe1\x48\x6a\x39\x63\x1c\xc9\x02\x67\x84\x36\x0d\xd1\x86\x9a\xb9\x26\x33\xaa\x88\x36\x37\xf7\x36\xed\x0e\xe9\xc9\x77\xdf\x2d\x97\xbf\x4d\xbf\x27\xe4\x92\x15\xc0\x0d\xc2\xd9\x29\x4c\xae\x8e\x7f\x83\xcf\xa0\x69\x81\xff\xbc\x78\xf3\x53\xdb\x3a\x42\x80\x29\x67\xe2\x23\x28\xe4\xa9\xe7\x10\x75\x85\x68\x3c\xa8\x14\x16\xf6\x43\x87\xef\xa8\x31\xa8\xc4\x4f\x6c\xa6\xa8\xba\x39\xd1\x1a\x8d\x7e\x47\x4d\xd5\xb6\x51\xa6\x75\x24\x79\x4e\x18\x86\x99\xd6\xde\xf1\x9a\xf7\x12\x45\xce\x8a\x2b\x42\x1e\x62\xdc\x50\x76\x76\x0a\x07\xdf\x46\x15\x43\x72\xb0\xd2\x74\xcb\xf9\xa7\xaa\xee\xed\x56\x69\x56\xb2\xec\xc4\x37\xd1\x56\x53\x26\xb6\xb5\x11\xb2\x43\x5f\x77\x32\x1c\xd5\xf1\x4a\x02\xc0\x4c\xe6\x37\xb0\xbc\x1d\xda\x7f\xd1\x33\x78\x87\xaa\xa6\x4e\x1e\x81\xb9\x46\x30\x12\x30\x67\x06\xa8\xc8\x41\x57\x54\x21\x98\x8a\x69\x28\x15\xcd\x19\x0a\x73\xe8\xf2\xf1\x30\x8a\xdc\xa9\xfc\xc4\x38\xa7\x61\x26\xeb\x68\xbd\x4e\xac\xb3\x54\xd1\x53\xc4\xa2\x18\x8e\x06\x71\x50\x24\xe3\x62\x94\x0d\x46\x71\x50\x8c\xf7\x0e\xe2\x6c\x30\x4a\x82\x64\x98\x25\xcf\x9f\x0f\xf6\xf7\x02\xdc\x1f\x4e\xf6\xf6\x07\x49\x1c\xc3\xb3\xe8\x9e\xb6\x19\xcd\x3e\x96\x4a\xce\x45\x7e\x08\x2b\xb4\x23\x2b\xf8\x9c\xe7\x30\x53\x72\xa1\x51\xe9\x5d\x3e\xa4\x96\x9f\x08\x67\x02\xa9\x22\x6b\x75\x3d\xf2\x7c\x94\x63\x19\xac\x01\x21\xfe\x21\x80\xa7\x9d\x42\x18\x75\x03\x27\x12\x46\x89\x1d\x74\x3a\x61\x7f\xcf\x0e\x3a\xa9\x90\xc4\xf1\x0f\x7d\xa7\xe4\xd5\xab\x61\x38\x26\xc9\x68\xa7\x8a\x05\xce\x3e\x32\xf3\x6d\x85\xbc\x70\x45\x2f\x89\xc9\xde\x28\x78\x4f\x0b\xaa\xd8\x28\x4c\xc8\x78\x97\xae\x6d\x3d\xc9\xf0\xff\xa8\xe7\x97\xe1\x8b\x00\xce\x4e\x93\x78\x10\xc0\xab\x57\xc9\x78\x10\xac\x24\xee\xd9\xd7\xf3\x06\x15\x4d\xf6\x06\x01\x74\x5a\xf7\x07\xdb\x42\x0b\xc6\x0d\xaa\x43\x68\x94\x2c\x59\x7e\xf8\xf2\xd7\xb3\x9a\x96\x78\xa1\xa8\xd0\xb6\x98\x86\x6f\x58\xa6\xa4\x96\x85\x09\x6f\xf5\x6b\x43\x95\x79\x61\xcf\xa4\x36\x2a\xf5\x57\x61\xf8\x01\xa0\xc8\x37\xa7\x9d\x54\x3f\x80\xd7\x2b\xc7\x8b\x9b\x06\xd3\xa4\x93\x7d\x76\x3a\x26\x07\x50\x50\xce\xed\x4e\x81\x14\x50\x49\xc5\x3e\x49\x61\x28\xbf\x4d\x80\x4d\xad\x5d\x7a\x4f\xa3\x55\xa2\x4d\xa3\xee\x6e\x9e\xba\x4c\xcb\x38\xd5\xba\xbb\x38\x2d\x09\xb8\x6b\x6d\x95\xbf\x60\xb0\x6e\x38\x35\x08\x5e\x43\x95\xbd\x61\xb4\xf3\x45\xe5\x41\x08\xb7\x09\x6c\xf3\x1e\x58\x9e\x7a\xf6\xc5\x03\x25\x39\xae\xdf\x0d\x9d\x31\x91\xe3\x1f\xa9\x47\x12\xef\x2e\xc7\x97\xcb\x1b\x86\x3c\x6f\xd7\xca\xac\xf1\x4e\xd6\x42\x4a\x63\x59\xd7\x9c\x5f\xd4\xb5\xc9\xae\xba\xb6\x5c\x46\xcf\xe0\xe2\xfc\xe5\xb9\x2d\x1e\x4d\x6e\xa1\xa5\x00\xce\xae\x11\x66\x73\xc6\x73\x5b\x4d\x5c\x51\x59\x48\xf8\xd7\x7b\xfb\x5d\x51\x07\x20\xa4\x01\x0a\x9a\x89\x92\x5b\x7b\x84\x67\xd1\x5d\xa5\xec\x3a\x0b\x30\xf6\xbb\x78\x06\xff\x30\xd1\x07\x7a\x4d\xbb\x59\x0f\xb4\xca\xfe\xaa\x60\x7e\x58\xd5\xcb\x0f\xda\x3b\x9e\x46\x9d\xe3\xf1\xdf\x40\xb7\x00\xb4\x69\x1e\xf0\x7f\x74\xdd\xbd\xc7\xd9\x2b\xe6\xc2\xdd\xfb\x3d\x16\xe8\x40\x06\x65\xa0\x02\x1a\xd4\xfd\x25\xbb\xf4\x5f\x4b\x59\x72\x3c\x11\x94\xdf\xd8\x9e\xec\x7c\xf6\x01\x33\xe3\x5f\xa5\xea\x88\x5d\xaa\xab\xd4\x3e\x3e\x7f\xbe\xf5\xef\xaf\x8b\x77\xcf\x2e\x84\xbf\xa7\xdd\xcf\xe7\xcf\x97\x57\xfd\xb0\x99\xeb\xaa\x47\x55\x39\xaf\x51\x18\xdd\x6f\x03\xb7\xc8\xd3\xe4\x99\xc0\x05\xbc\xa4\x06\x7b\xfd\x23\x9a\xea\x30\x53\x48\x0d\x9e\x72\xb4\x86\x3d\xd9\x0f\x56\xa0\x75\xaa\xc3\x12\xcd\x6a\x41\xff\x78\x73\x41\xcb\xb7\xb4\xc6\x9e\xec\x5f\xc6\x57\x47\x34\xa4\xfa\x46\x64\x69\x72\x44\x43\xbb\x4f\xe5\x51\x1d\x36\x54\xa1\x30\x6f\x65\x8e\x21\x13\x1a\x95\xf9\x11\x0b\xa9\xb0\x67\xc3\x5b\xa1\xb6\xfd\xde\x82\x89\x5c\x2e\x82\x5c\x66\x4e\x5b\xe0\x77\xfb\xe3\x07\x7e\x14\x2d\x16\x8b\xb0\x74\x9b\x40\xe8\x7a\x17\xdc\x7d\x72\x37\xfa\xa0\xfd\xc0\x2f\xa9\xdf\x3f\x5a\x41\x96\xb4\xe7\x77\x41\xf8\x01\xf8\x3f\x9f\x90\xd1\x78\x72\xb0\x17\x0f\xf7\xc9\xd0\x0f\x60\xe9\x53\xce\xe5\xe2\x44\x64\x95\x54\xfe\x21\x18\x35\xc7\xf6\x9e\xaf\x46\x91\x5b\xcf\x86\x96\x68\xdb\x36\xe7\x64\x07\xfe\x21\x70\x99\xb9\x56\x39\x6c\xa8\xa9\x6c\x53\x05\x03\x28\xd1\xbc\x47\xaa\xb2\xaa\xd7\x87\xc1\x9d\x45\x45\x75\x75\x07\xbc\xfe\x48\x9b\xd6\x9b\x77\xed\x66\xa6\xfc\x52\xa1\x00\xed\x8c\x80\x69\xa8\xe5\x35\xba\x4c\x51\x28\x72\x54\xa8\x60\x81\x3e\xe7\x20\xb0\x9b\xa6\x79\xbe\xb6\x36\xa8\x6a\x60\xc2\x48\xb0\x7a\xe1\xf5\x09\x28\xd4\x8d\x14\x1a\x37\xa8\xa2\x08\x58\xd1\xfb\x32\x92\x34\x4d\xc1\x8f\x3a\x24\xff\x9e\xb8\x28\x72\x3f\xd7\x54\x81\x98\xd7\x33\x54\xe7\xc5\x7f\x50\xcf\xb9\xd1\x90\xc2\x72\xf9\x94\x15\x96\x67\xce\x4d\xb8\xb5\xec\x7a\xf7\x1d\x4b\xc8\x35\xb6\x2d\xc4\x36\x7c\x56\xb4\xed\xd1\x97\xa4\x0a\xcd\x5c\x89\xbb\x6d\x5d\x45\x3a\x00\xff\x1f\x5b\x88\xa9\x0f\x83\x6d\x7d\x5b\x80\x2d\x58\x46\x78\x20\xb6\x87\x69\xbe\x70\xdf\xa8\x44\x77\x5e\xeb\xa3\xfc\xe4\xc9\xad\xe5\x1b\xa4\x7a\x6e\x7b\x23\x56\xbb\x92\xe7\x3e\x07\x81\x4c\xb9\xde\xc9\xc8\x75\x97\x54\x21\x6f\xc2\xdb\xb3\x6c\xff\x87\xd2\x75\x4b\xee\xc8\xdf\xce\x47\xb5\x83\x63\xa2\x24\x16\x90\x48\x41\x66\x72\x2e\x32\x24\x16\x37\xda\x3e\x62\xd6\x46\x25\x49\xaf\xbf\xdc\x3c\xce\x78\x8d\xc2\xd8\x97\x0b\x56\xe3\xb9\x78\x67\x0f\x74\x00\x7e\xe2\x1e\x09\x19\xc6\xa0\x31\x93\x22\xd7\xf6\xbc\x83\x2f\xa4\x38\x13\x06\x15\x75\x98\xfe\x21\x24\xd0\xf6\x8f\xda\x07\xb9\x86\x8f\xe4\xda\xb3\x8f\x61\x42\xc6\x5f\xc1\x35\x7e\x24\x97\xcd\x75\x7f\x9c\x90\x64\xf2\x15\x64\xc9\xe4\x91\x6c\xcf\xdd\x2e\x4e\x6c\x68\x5f\x13\x5b\xfc\x48\xba\x91\x0b\x2e\x76\xd1\x7d\x55\x78\x8f\x25\x1c\x77\xf1\xc5\xc9\xe0\xef\xb0\x3d\x02\x38\x76\x0f\x92\x3c\x2a\x8a\x15\xac\x46\x63\x41\xe4\xdc\xf4\x56\x47\x3d\x48\x92\x38\x8e\xff\xd4\x60\x98\x04\xc3\x9d\x06\xe3\x24\x18\xef\x34\x48\x26\x49\x90\x4c\x76\x63\xc4\x49\x30\x8e\xff\x02\x25\xb6\x30\x9b\x46\x77\x1d\xc4\x34\xb2\x6d\xa1\xeb\x12\xdd\x1f\x72\xfe\x17\x00\x00\xff\xff\xe3\x35\xb4\xf0\xe0\x11\x00\x00")

func templatesMainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainTmpl,
		"templates/main.tmpl",
	)
}

func templatesMainTmpl() (*asset, error) {
	bytes, err := templatesMainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.tmpl", size: 4576, mode: os.FileMode(420), modTime: time.Unix(1477482427, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x08\x9e\x2b\x33\xd8\x00\x3d\x14\xb2\x80\x20\x68\xb6\x8b\x06\xc9\x21\x5b\xf4\x68\x8c\xc9\x91\x34\x35\x35\x14\xc8\x91\x14\xf7\xeb\x0b\x5a\xf1\x3a\xad\xbd\xe8\xc6\xd9\xf6\x62\xcb\x33\x7c\x6f\xc6\x7c\x8f\x43\x95\x75\x08\x82\x51\x59\x0f\x29\xad\x74\x1f\x89\xa5\x28\x5a\x72\xa8\xab\x45\xd9\x7e\x38\x24\x46\x4a\x03\x78\xbf\x6b\xc9\x39\x64\x5d\xdd\xcd\x30\x4f\xbc\x4d\xa5\x69\x3f\x54\x8b\xd2\xd1\x78\x58\x3d\x93\xea\xbf\x07\xa7\x08\x7d\x3f\x47\x19\xc6\x73\x80\x82\x61\x54\x36\xf8\x22\x2f\xfd\x07\xda\x06\xbf\x4f\x15\xbe\x29\x02\x63\x21\x2d\x45\x37\x47\x3a\x77\x8c\xec\xbb\xbe\x3e\xa5\x5d\xaf\x5b\x04\x47\xdc\xe8\xea\x17\xf4\x7d\x69\xda\xeb\x6a\x51\x0e\xfe\xdc\x4a\x4f\x49\x32\x8f\xa7\x73\x59\x12\xec\x72\x16\x54\x1b\xb1\x5e\x69\xd3\xa2\xef\x0d\x58\x8b\x29\xd1\x86\x3c\xc9\x4e\x57\x37\xaf\x7f\x96\x06\xaa\x45\x69\x3c\xbd\x91\xd3\x86\xb0\x25\x4c\xc0\xae\x8f\x34\x82\xdd\xe9\xea\x76\x0e\x29\x60\xa7\x5e\x82\x97\xb2\x0b\xc6\x2e\x73\xdb\xc0\x8e\x84\x02\x27\x5d\x7d\xce\xb1\x3d\xf9\x31\xfa\x9a\xdf\x0c\x3e\x7f\x3a\x1a\xff\x2b\x71\x6e\x36\x61\x10\xf5\xf8\xf0\xf4\x3d\x15\x82\x4c\x3a\x24\x33\xb5\x20\x13\xba\xa0\xab\xdf\x5b\x10\x35\xa1\x72\xe1\x82\xed\x3b\xd0\x59\x88\x88\x31\xe9\xea\x76\x7e\x78\x0f\x55\x60\x01\x2b\x43\x26\x9b\x1f\xd5\x70\x09\x1f\xe3\x94\x74\xf5\x80\xd3\x7b\x9a\x91\x08\x9c\x7a\x88\xc8\x76\x07\xec\x9a\x30\x62\x64\x60\x8b\xa6\x8e\x88\x2e\x74\xa1\x26\xae\x43\xec\x20\x1b\xa4\x0e\xa4\xab\xbb\x39\xa1\x42\xad\x3e\x1d\x53\xff\xaf\x75\x6e\x03\x33\x5a\x51\x13\x49\xbb\xdf\xbd\xef\x66\xa0\x56\xa4\x4f\x3f\x19\x23\x13\x89\x60\x5c\xda\xd0\x99\xc7\x87\x27\x7d\xc0\x92\x0d\xfc\x32\x34\x95\x40\x6c\x50\x56\x7a\xbd\xf1\xc0\x5b\x5d\x7d\x9e\x31\x6f\x97\xe3\x50\x74\x9a\xa6\x65\x0d\x16\x37\x21\x6c\xdf\x54\xf9\xee\x05\xf4\xbe\xd2\x79\xc2\xa3\x23\xde\x97\xb6\xa1\xeb\x81\x77\x26\xd4\x35\x59\x2c\xea\x90\x09\xb2\xd2\xe0\x8b\x24\x20\x94\x84\x6c\xfa\xa6\xee\xee\xf7\xbc\x9f\xf8\xf2\xee\xfa\x61\xe3\xc9\x2e\x9b\x30\x3a\xf4\x34\x62\xdc\xed\x7b\x04\x6b\xc3\xc0\x92\xcc\x6f\xbf\x3e\x3e\x3c\x99\x34\x6c\x92\x8d\xb4\xc1\x98\xf2\xe9\xf8\xa6\xde\x7e\xee\x80\xbc\x02\x8f\x51\xbe\x3e\xfe\x0e\x5f\xf3\x5d\x76\x6a\xec\x57\xd7\xdd\xe9\x45\xe7\xc9\x22\xa7\xfd\x1d\x4b\x5d\x73\x3e\xb9\x5e\x53\xd7\x68\x05\x5e\x56\xfa\xf1\xe3\xbd\x56\x13\x39\x69\x57\xfa\xc7\x2b\xad\x52\xb4\x2b\x6d\xa8\x6b\x4c\x68\xfc\xb2\xcf\xf6\x5f\x94\xfd\xd7\x78\x04\x9f\x45\x75\x10\x1b\xe2\xc2\x63\x2d\x45\xea\x8a\xe2\x4a\x57\x8b\x1b\x9f\x0f\x1f\x0b\xb2\x28\x4a\x0a\x46\x20\x0f\x1b\x8f\x6a\x60\x87\x51\x49\x8b\xaa\x84\x73\x3b\x76\x54\xe2\xc5\x26\x07\x1b\x40\xb4\x2d\x8d\x98\xb2\x2c\xcb\x61\x6b\x5c\xb0\x26\xf4\xc8\xc5\x3c\x45\x3a\x64\x99\xfb\xb2\x68\x46\x8c\x89\x02\x9b\x6b\x73\x2a\xc1\x63\x8f\xac\x3e\x7e\xc1\xa8\xfb\x19\xa3\xc6\xeb\xe5\x55\x96\x44\x95\xa9\x07\x7e\xdd\x9a\xda\xf7\x87\xcf\x92\x87\x55\x9e\x27\xd4\xb4\xf9\x9f\x82\xf7\xba\x2a\x4d\x5e\x5e\xfd\xa0\xf0\xd9\x62\x2f\x6a\x6a\x31\xa2\x0a\xd2\x62\x9c\x28\xa1\xca\xe6\x45\xb7\x28\x4d\x7f\x2a\xf0\x51\x59\x72\xf9\x45\x08\xa7\x3e\xc4\xcc\xfc\xc5\x4b\x7f\xa4\xe2\x18\xa6\x3f\x31\xd7\xcb\xa8\x53\x50\xe7\x2e\x00\xf9\xe6\xdf\x41\x66\xd6\xbc\x5a\xfc\x15\x00\x00\xff\xff\xc2\xab\x14\xfd\xd1\x09\x00\x00")

func templatesPartialsFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsFooterTmpl,
		"templates/partials/footer.tmpl",
	)
}

func templatesPartialsFooterTmpl() (*asset, error) {
	bytes, err := templatesPartialsFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/footer.tmpl", size: 2513, mode: os.FileMode(420), modTime: time.Unix(1476864431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x4d\x8f\xdb\x36\x13\xbe\xef\xaf\x18\xf0\xbd\x24\x07\xad\xb2\xc9\x8b\x7e\x41\x76\xd1\x6e\x02\x34\x40\x93\x16\xd9\xe4\xd0\x93\x31\x16\xc7\x32\x63\x8a\x54\x48\xca\xbb\x86\xe1\xff\x5e\x50\xdf\x96\x25\xd9\x6e\x73\x68\x7c\xb2\xc8\xe1\xf0\x99\x67\x66\x38\x43\x46\x6b\x42\x4e\x66\x7e\x03\x00\x10\x21\xc4\x12\xad\x9d\x31\xbb\x11\x99\x14\x6a\xc3\x60\x6d\x68\x35\x63\xff\x4b\x51\x28\x06\x0e\x97\x42\x71\x7a\x9a\xb1\x17\x6c\xfe\xb0\x11\x19\x38\x0d\x7e\x0a\x62\xad\x1c\x29\x17\x85\x58\xa9\xe2\x62\x0b\x82\xcf\x58\x86\x09\xfd\x89\x6e\xcd\x6a\xd5\x6b\xc1\x89\xcd\xf7\xfb\xdb\x4f\x1f\xde\x1e\x0e\x51\xc8\xc5\x76\x7e\x53\xac\xd9\xef\xc5\x0a\x6e\x1f\xc8\x6c\x45\x4c\xef\xc8\x5a\x4c\xe8\x70\x28\xa6\x1a\x95\x95\x92\x25\x39\x0c\x96\xa8\x14\x19\x36\x6f\x24\xfa\x52\x8f\x06\xb3\xec\x44\xa2\x90\xca\x3c\x82\xfe\x56\x51\x98\xf5\x94\x95\xe8\x06\x3e\xf7\x7b\x52\xfc\x70\xb8\xb9\x39\xbf\x67\x77\xb6\x64\x1b\x62\x2d\x03\x2f\x38\x81\x3d\xd6\xb2\x10\x0b\x64\x12\x68\x45\x81\x5b\x0b\xc3\xcb\x91\x94\xb7\x23\x43\xb6\x61\x41\xbc\xd4\x89\x0e\xba\x3e\x0c\x07\x64\x0b\x79\x91\x26\xf5\xae\xde\x97\x81\x5f\xc9\xc0\x9a\x78\xc6\x42\xb4\x96\x9c\x0d\x45\x9a\x84\x5a\xd9\x62\xea\xd6\x6e\x13\x06\x28\xdd\x8c\xfd\xb1\x5a\x89\x98\x60\xa5\x0d\xbc\x47\x27\xb4\x42\x09\x0f\x0e\x9d\xb0\x4e\xc4\x76\x08\x5b\x1d\x1f\x23\x0c\x4f\xb1\xe0\x1e\x75\x69\xb3\x6d\x68\xe8\x0c\xf9\xb0\x0a\x02\x9b\x42\x66\x84\x72\x41\x50\x86\xd9\x29\x00\x2e\x4b\x76\x50\x25\x39\x26\xd4\x84\x65\x33\x30\x42\x12\x77\x7d\xc9\xc5\xc2\x09\x27\x89\xcd\xef\xd7\xa8\x12\x82\x7a\xfc\xa7\x28\xe4\x6e\x4c\x0b\x3f\xd5\x22\x1c\xa5\x23\xbb\x42\x9d\x15\xf4\x05\x6e\x7f\xaf\x56\x00\x23\xc5\x0e\x87\x36\x59\x5b\x55\xde\xdd\x20\x62\xad\x2a\xfb\x6b\xcf\x87\xf1\xee\xd6\xc7\xbb\x70\xf4\x5a\x7b\x1f\x1f\x0e\x75\x02\xb2\xf9\xfd\x2e\x35\x48\x09\x3c\xbb\xff\xeb\xb9\xf7\x4f\x1d\xda\x57\x00\x8a\x77\xd7\x02\x1a\x45\xf3\x46\x25\x52\xd8\x35\x3c\x7b\xf3\xfe\x2c\x9a\x28\xe4\x7c\x28\xc6\xb8\xbc\x2a\xc8\x2c\xc5\x5a\x71\x34\xbb\x40\xe1\x16\x2e\x0f\xb9\x33\x91\x96\x97\x91\xa6\x70\x1b\x34\x3b\xb0\xc1\x3d\x3d\x4f\xd6\xc1\x67\xeb\x3f\x82\x58\x6a\x45\xe5\xd0\x58\x30\x4a\x31\xa2\xe7\x4c\x2c\x75\x0e\xf8\xfe\xfe\x6a\x03\x27\x00\x3a\x67\x87\x21\x49\x68\x29\x46\x49\x7e\x19\x9b\x7f\x28\x07\xa0\x1e\x39\xc9\xec\x96\x7c\x29\xfe\x33\x66\xa4\xe4\xd6\x9a\x6b\xa9\x93\x1d\x9b\xbf\x6b\x3f\xbe\x0d\xf4\x8a\x1e\xad\x87\xcd\x05\x7e\x1b\x80\x71\xa9\x73\x97\x5b\x36\xff\xc5\xff\xb9\x12\x73\x14\xe6\xd3\x79\xdc\xf9\xec\xfe\xed\x64\x76\x66\x44\x5a\xe7\xf5\x70\xb6\x46\x0a\xfb\x27\x43\x2e\xeb\xe5\xde\xac\xc0\x77\x36\x46\xcb\xc1\x6a\xd6\x32\x7a\x24\x3a\xc9\x68\x84\x75\x4f\xe5\xd7\x54\x08\x59\x71\x54\xa4\xa4\xf2\xc0\xe9\x24\x91\xc4\x00\x8d\xc0\x46\x63\xb9\x41\x23\x3c\xbc\xa9\x5f\x3e\xe5\x46\x9b\xa1\x1a\x59\xea\xe8\xc9\xf9\xc8\x52\x79\x14\x7a\xb1\x31\x3f\x0d\x38\x70\xc4\x79\x93\xd4\xc0\x45\xdc\x58\x42\x13\xaf\x4b\x6a\xca\xff\x53\xe4\xd4\xd2\xc3\xbb\x56\xb3\xff\x86\x9d\x87\x42\xc5\x57\xe0\x67\x20\xb0\x4f\x1b\x48\xf0\x18\x8a\x76\xcc\x87\x2c\x27\xc5\x9a\x6a\xd2\x84\x41\xc1\x02\x3d\x65\xa8\x38\xf1\x19\x5b\xa1\xb4\x63\x95\xe8\x34\x21\x2e\xad\x30\x47\x4b\x0a\xe7\x35\x0d\xc0\xa7\x0f\x6f\x81\x85\xec\x70\x38\x91\x09\x02\x8c\x9d\xd8\x52\x55\xbd\xab\x33\xa2\x6d\xd2\xb4\xe4\x81\xa0\x20\xe0\xc2\x66\x12\x77\xc1\x52\xea\x78\x33\xea\x9d\xf6\x00\xea\xe1\x57\x9b\xb6\x5c\xa7\x3c\xf8\xbe\x29\xdc\x3f\x76\x9a\xde\xdf\x74\x4a\xff\xe0\xb8\xdc\xef\x4d\xd1\xd6\xdd\x7e\xc4\x27\xad\x74\xba\x9b\x68\x89\x26\xe9\xaa\x6c\xff\x6c\x2b\x57\xe1\x52\x8e\x75\x99\x1d\x83\x4b\xf8\x4d\x5f\x74\x19\x01\x3f\x34\x04\xdc\xbd\xa8\xc2\x63\x8d\x36\xd3\x59\x9e\xcd\x98\x33\x79\x79\xf1\xfa\xe8\xdb\x56\x7f\xdb\x19\xe1\xa4\x65\xc0\xdf\xc7\xee\xd7\x42\x72\x43\x6a\xc2\xfc\x06\xf6\x48\xa0\xc5\x5e\x45\x50\xf4\x38\x5d\xb4\x77\xdf\x35\x70\x5f\xbe\x38\xe6\x67\xb1\xa8\x2e\x94\x75\x75\xa9\x73\x60\x30\xe4\xcb\x51\x89\x4b\x92\x33\x66\xf3\xe5\x99\x83\xf0\xd8\xc6\xca\xcb\x57\x98\xd9\x98\x3b\xe2\xf5\xd2\xdc\xc2\xf7\x27\x56\xf9\xa9\x0b\xa1\x35\xdb\x5c\x16\x0c\x35\xc9\xbe\xfc\xb6\xf7\xf4\xe0\xee\x2a\x97\x1f\xed\x3b\x9a\x1a\xfd\xdf\xb9\x1b\x43\xab\xb1\x7f\xf0\x5d\xab\x69\x2a\x5d\x27\xee\x09\xe7\xd3\xf3\xa2\xf6\xe7\x34\xf9\x26\xb2\xaf\x3a\x7f\x6c\x6e\xb6\xb4\x1b\xea\x1e\xba\xbf\x8f\xb8\x11\x2a\x81\x0c\x8d\x03\xa1\x00\xa1\x5c\xf6\xf3\x04\x11\x5f\xbb\x97\x6a\x1a\xa1\x91\x5e\xaa\xac\xa0\xd0\x96\xda\xba\x30\x1d\x75\x56\x9d\x62\xfd\x2b\x8e\xbd\x82\xd4\x6f\x24\x60\xb4\xa4\x5a\xbc\xff\x16\xb2\xd2\x26\xed\x3c\x03\x14\xef\x25\x50\x8a\x2e\x16\x7e\x92\x81\xaf\x31\x5a\x79\x92\xc7\xaa\x7b\x54\x1c\x0a\xc7\x26\x2c\x16\xd5\x60\xc7\x75\x2f\x5f\xb5\x47\xd1\xff\x19\xac\xb4\x39\x6a\x2a\xaa\xda\x5f\x3c\x74\x20\x6c\x68\xf7\xa8\x0d\x7f\x66\x9f\x83\x36\xe0\x44\x4a\x83\x9e\xb0\x64\x04\x59\x78\xfb\x3a\x0a\x8b\x0d\x07\xd0\x09\x95\xe5\x0e\xdc\x2e\x6b\x59\x00\xcc\x9d\x8e\x75\x9a\x49\x72\x34\x63\x7a\xb5\x62\x7d\xf8\xe5\xaa\x23\xf8\x77\x0d\xfc\x57\x2f\x59\xe7\xda\x59\xa8\x1c\x0b\x22\x85\x29\xcd\xd8\x17\x06\x5b\x94\x39\xcd\xd8\x10\x7f\xcb\xdc\x39\xad\x6a\x88\xf9\x32\x15\xee\x04\x4f\x25\x53\x83\x69\xa9\x7c\xd5\x87\x12\x54\x1a\x46\x42\xb7\xdb\x82\x6d\x85\xcd\x51\xca\x5d\x75\xf0\x5f\xd2\x7d\x75\x97\x8b\x58\xab\xf2\xe1\xa1\x0e\x56\x29\x92\xb5\x63\xf3\x31\x0d\x51\x58\x9a\xd1\xcf\x12\x1f\x69\x53\x57\x8e\x28\xac\x5f\x50\xff\x0e\x00\x00\xff\xff\x70\x04\x10\xb5\x4b\x15\x00\x00")

func templatesPartialsHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsHeaderTmpl,
		"templates/partials/header.tmpl",
	)
}

func templatesPartialsHeaderTmpl() (*asset, error) {
	bytes, err := templatesPartialsHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/header.tmpl", size: 5451, mode: os.FileMode(420), modTime: time.Unix(1477482427, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.DS_Store": templatesDs_store,
	"templates/homepage.tmpl": templatesHomepageTmpl,
	"templates/main.tmpl": templatesMainTmpl,
	"templates/partials/footer.tmpl": templatesPartialsFooterTmpl,
	"templates/partials/header.tmpl": templatesPartialsHeaderTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{templatesDs_store, map[string]*bintree{}},
		"homepage.tmpl": &bintree{templatesHomepageTmpl, map[string]*bintree{}},
		"main.tmpl": &bintree{templatesMainTmpl, map[string]*bintree{}},
		"partials": &bintree{nil, map[string]*bintree{
			"footer.tmpl": &bintree{templatesPartialsFooterTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{templatesPartialsHeaderTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

