// +build production
// Code generated by go-bindata.
// sources:
// templates/dataset/finishpage.tmpl
// templates/dataset/index.tmpl
// templates/dataset/middlepage.tmpl
// templates/error.tmpl
// templates/homepage.tmpl
// templates/main.tmpl
// templates/partials/footer.tmpl
// templates/partials/header.tmpl
// templates/productPage.tmpl
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDatasetFinishpageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x0a\xc2\x40\x0c\x86\xf7\x3e\x45\xa8\x38\x9f\x74\x70\x8a\x59\xea\xe0\xe4\xa0\xe0\x9e\x72\x29\x57\x68\x7b\x25\x17\x29\x7d\x7b\x39\xaa\x88\x75\xfb\x48\xf2\xfd\xe4\xc7\x60\x43\x4f\x05\x00\x86\x8a\x2e\xa2\x02\x5d\x02\x86\x34\xf2\x94\x42\x34\x88\x2d\x2c\xf1\xa9\xe0\xd9\x18\x5d\xa8\x08\x1b\xa5\x22\xdf\x1b\x37\xbd\x64\x33\xb3\xae\x90\xd1\x53\xdd\xd9\x82\xce\xfc\xcf\x4c\xbb\x41\xe0\xc6\x26\xdf\x0d\xba\x8f\xb7\x09\xb8\xca\x3c\x45\xb5\x6d\xc6\xf1\xb0\xff\x97\xd1\xbd\x1f\xc9\xcc\x10\x54\xda\x53\xb9\x2b\xe9\x1c\xe7\xb1\x8f\xec\xa1\xbe\x3f\xd0\x31\x15\xe8\xd6\xaa\xaf\x00\x00\x00\xff\xff\x85\x7d\x36\x7b\xf2\x00\x00\x00")

func templatesDatasetFinishpageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetFinishpageTmpl,
		"templates/dataset/finishpage.tmpl",
	)
}

func templatesDatasetFinishpageTmpl() (*asset, error) {
	bytes, err := templatesDatasetFinishpageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset/finishpage.tmpl", size: 242, mode: os.FileMode(420), modTime: time.Unix(1497946555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4d\x4e\xc3\x40\x0c\x85\xf7\x3d\x85\x35\x7b\x30\x09\x3f\x65\x31\x19\x16\x20\x71\x80\x72\x81\x49\xe2\x62\x8b\x4c\x27\x1a\x3b\x15\x55\xd5\xbb\xa3\x24\x82\x15\x52\x77\x7e\xb6\xde\x27\xbf\xe7\xd9\xd2\x10\x36\x00\x9e\xeb\xf0\xca\x39\x2b\x41\x84\xbd\x0c\x46\xc5\x23\xd7\xcb\x69\x9f\x4b\x82\xd8\x99\xe4\x43\xe3\xb0\x8f\x16\x95\x4c\xb1\xaa\xef\x1f\x90\x7a\x99\xf7\x8a\x8f\x4f\xdb\x67\x3c\x52\xd1\x45\xd5\x77\xd5\x16\x57\x8c\x83\x44\xc6\xb9\x6f\xdc\x98\xd5\xdc\x4c\x04\xf0\x72\x18\x27\x03\x3b\x8d\xd4\x74\x4c\xdd\x57\x9b\xbf\xe1\x18\x87\x89\x1a\xf7\x4e\xf9\xb3\xc4\x91\x4f\x2e\xfc\x8d\xbe\x2d\xd7\x8d\x26\x89\x6e\x94\x8a\x90\xba\xf0\x21\x89\x60\xb7\x88\xd9\xfc\x2f\xc0\xe9\xd4\x26\x31\xf7\x0b\x50\x8b\x65\xfd\xd0\xe3\x1c\x7a\x2d\xa6\x0a\xda\xbf\xc0\xf9\x7c\xbb\xa3\x58\x3a\x7e\x13\x8d\xed\x40\xfd\xe5\xe2\x91\xab\xb0\xf1\xb8\x76\xf8\x13\x00\x00\xff\xff\xa0\xb0\xb6\xd0\x4b\x01\x00\x00")

func templatesDatasetIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetIndexTmpl,
		"templates/dataset/index.tmpl",
	)
}

func templatesDatasetIndexTmpl() (*asset, error) {
	bytes, err := templatesDatasetIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset/index.tmpl", size: 331, mode: os.FileMode(420), modTime: time.Unix(1498053355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatasetMiddlepageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x0e\x83\x30\x0c\x45\x77\x4e\x61\xe5\x00\x44\x62\xac\x4c\x96\xb2\xb4\x37\xe8\x18\x9a\x54\xb8\x22\x71\x44\x1c\x50\x85\xb8\x7b\x15\xba\x75\xb3\xe4\xff\xfe\xfb\x38\x49\x98\x4d\x03\x80\x53\x67\xae\x25\x0b\x07\xca\x1e\x1e\x5c\x16\x18\xac\x58\xd4\x53\x77\xbe\x5f\xbc\x04\xb0\x4f\x21\x8e\xbd\xd2\x6f\x1e\xb3\xde\xf7\xb6\x46\xda\x3b\x8f\xb7\xe1\x38\xb4\xa3\xe0\x63\x26\x8e\x59\x55\x04\x00\x29\xa6\x22\x20\x9f\xe4\x7b\x95\xcb\x18\x48\x14\xac\x76\x2e\xbe\x57\x69\xf1\x2b\xf9\x0d\x6c\x74\xe0\x78\x8b\x33\x5b\x77\x62\xa8\xab\xca\x34\xf5\x4c\xe6\xec\xbe\xc0\x9f\x0a\x75\x32\x0d\xea\xdf\xf6\x6f\x00\x00\x00\xff\xff\x2e\xc6\xb3\x4a\xc3\x00\x00\x00")

func templatesDatasetMiddlepageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatasetMiddlepageTmpl,
		"templates/dataset/middlepage.tmpl",
	)
}

func templatesDatasetMiddlepageTmpl() (*asset, error) {
	bytes, err := templatesDatasetMiddlepageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dataset/middlepage.tmpl", size: 195, mode: os.FileMode(420), modTime: time.Unix(1497946555, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesErrorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xc1\x8e\xd3\x30\x10\xbd\xe7\x2b\x46\xbe\x3b\xd5\x5e\x51\x1a\x21\x01\x12\x48\x70\x5b\xc4\x71\x35\xb1\x27\xb5\x55\xc7\x63\x79\x26\xe9\x56\x4b\xfe\x1d\xa5\xb0\x2c\xad\x7a\xe2\xf4\xc6\xcf\x6f\x34\xe3\xf7\xdc\xf9\xb8\x80\x4b\x28\xb2\x37\x05\x0f\x64\x03\xa1\xa7\x0a\x92\x50\xc9\xf4\xcd\xbf\xf7\xa7\x8a\xa5\x50\xdd\xd8\xf0\x70\xa7\xe9\xe9\x49\xa3\x26\x82\x31\xcd\x12\xac\x0d\x98\x46\x6b\x07\x56\xe5\xc9\xf4\x2f\x2f\xd0\x7e\xaa\x95\x6b\xfb\x78\x11\xad\x6b\xb7\x0b\x0f\x7d\xd3\xed\x7c\x5c\xfa\xe6\x15\xef\xcc\x83\x82\x99\x92\xb5\x13\xd6\x9b\x85\x0e\x35\x7a\xbb\xa9\xee\xf1\x8e\x13\x78\x92\xa3\x72\xb1\x17\x62\x9c\x53\xb2\xa7\xe8\x35\x6c\x72\xac\x1a\x5d\xa2\xeb\xc6\x81\x9f\x61\xe0\x67\x6b\x0b\x7a\x4f\xfe\x77\x5d\xc9\x5b\x8f\xf5\x78\x7d\xb2\x56\xa8\x60\x45\x25\x6f\x13\x8d\x0a\x42\x4e\x23\x67\xf2\x66\x7b\xcd\x7f\x6f\xa9\x27\xb6\x1a\x62\xf5\x62\xfa\xe6\xcd\xb4\x8f\x24\xae\xc6\xb2\x4d\x80\x9f\x20\x38\xd2\xe7\xc7\x6f\x5f\x61\x5d\x9b\xae\xf4\x5f\x46\x38\xf3\x0c\xa2\x31\x25\xa0\xec\x78\xce\xba\xf9\x56\x79\x48\x34\x09\x94\x44\x28\x04\x1d\x42\xa8\x34\xee\xcd\x84\x31\x29\xbf\x3b\xd1\xd0\x3a\x9e\x26\xca\x2a\xef\x39\x4b\x7b\xe0\xa5\x9d\x8f\x06\x2e\x31\xee\xcd\x07\xce\x8a\x4e\xe1\xbb\x98\xde\xfd\xa9\x67\xe9\x76\xd8\xb7\xf0\x83\x00\x0b\x27\x3e\x44\x21\x18\xb9\x02\xe6\x33\xc4\xec\x38\x2f\x94\x23\x65\x47\xa0\x21\x0a\x4c\x78\x86\x80\x0b\x81\xc3\x59\xc8\xb7\xdd\xae\xfc\xcd\xfc\x16\xde\x22\xb9\xfe\x13\xaf\xf8\x2b\x00\x00\xff\xff\x38\x7a\x05\x98\xac\x02\x00\x00")

func templatesErrorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesErrorTmpl,
		"templates/error.tmpl",
	)
}

func templatesErrorTmpl() (*asset, error) {
	bytes, err := templatesErrorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/error.tmpl", size: 684, mode: os.FileMode(420), modTime: time.Unix(1497004905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHomepageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\x36\xf6\x7d\xef\xa7\xb8\x83\x97\xdf\x4c\x66\x28\x5a\x8e\x7f\x69\xb3\x23\x33\x93\xc6\x4d\x9b\x26\x6b\x67\xe3\x38\xdd\xf6\xc5\x03\x91\x57\x24\x6a\x10\xc0\x02\xa0\x64\x45\xe3\xef\xbe\x03\x90\x94\x28\x8a\x54\xec\xd0\x4d\xdd\x6d\xfc\x62\x11\x7f\x0e\x2e\x2e\xce\xc1\xbd\x00\xf9\xcd\x24\x61\x73\x88\x39\x35\xe6\x98\x28\x9a\x62\xc0\x84\xd5\x12\xa6\x34\xbe\x4a\xb5\x2c\x44\x12\x04\xd4\x58\x4d\x39\x89\xbe\x01\x00\x68\xb6\x5f\x68\xaa\x14\xea\xaa\xa6\x5d\x1b\x4b\x1e\xb8\x16\x8d\xea\x9e\x66\x1d\x2d\x7c\xab\x6c\xbc\x6b\xd9\xe5\xa5\x65\x96\x23\x89\x7e\x41\x1e\xcb\x1c\xc1\x4a\xb0\x19\xc2\xd9\x6c\xc6\x62\x84\x99\xd4\x70\x4a\x2d\x93\x82\x72\x38\xb7\xd4\x32\x63\x59\x6c\x26\x61\x36\xee\x19\x44\x75\x8d\x11\x4b\x61\x51\x58\x12\xbd\xcf\x10\x2e\x5e\xff\x9f\x01\x4e\x75\x8a\xc6\x02\x13\x09\x2a\x14\x09\x0a\x0b\x4a\xcb\xa4\x88\x51\x83\x9c\x81\x74\xe3\x33\xca\xc1\xac\x07\x05\x2a\x12\x6f\x9b\xc6\x58\xa6\x82\x19\x4c\x40\xd4\xb6\xad\x9b\x51\x0e\x4c\x18\xcb\x6c\x61\xd1\x01\x59\x3f\xe2\x68\x12\xaa\x0e\xbf\x85\x09\x9b\x37\xbc\xbd\x79\xac\x7e\x56\xff\xb6\x56\xb5\xb9\x94\x29\xe5\x1c\xf5\x72\xef\x5a\x6e\xe0\xb3\xc3\xe8\x0d\xb5\x6e\xd6\xaa\x98\x72\x66\x32\x4c\x40\x23\x47\x6a\xd0\x79\xf4\xb0\x61\x49\xc1\x81\x25\xc7\xa4\xae\x0d\x38\x33\x96\xd4\xd8\xee\x21\x08\x04\x16\x8e\x47\x50\xf3\x02\x72\xaa\x53\x26\x02\x8e\x33\x1b\x04\x07\xf5\xe3\x54\x5a\x2b\xf3\x20\x38\x68\xb1\x62\xb5\xd2\x54\xa4\x08\xa3\x13\x6a\xe9\xe8\x5d\x35\xd0\xcd\x4d\xcb\x49\x13\xce\x1a\xcc\xf2\x83\x05\x3c\x0d\x0e\x9f\xd6\x96\xb7\xc7\x39\xac\x0b\x34\x4b\x33\x1b\x04\xe3\xb6\x5d\x4d\xff\x2d\x32\x66\x11\x14\x4d\x12\x26\xd2\xc0\x4a\xe5\xda\xd7\x8f\x6b\x80\xba\xa0\x1e\x62\x53\x52\x62\x8e\x3b\x09\x3f\xc9\x1e\xd7\x96\x57\xa6\xae\xb9\x3e\xa1\x90\x69\x9c\x1d\x93\xd5\x0a\x46\x17\xef\x5e\xdd\xdc\x90\xc8\xfd\x7c\xef\xaa\x6f\x6e\x26\x21\x8d\x26\x61\xf6\xb8\x13\x55\xed\x80\xae\xc9\xed\x20\x2a\x47\x9e\x50\xeb\x81\x76\x48\x37\x09\x39\x6b\x2f\x04\x8a\xa4\xe1\xf7\x49\x58\xf0\x16\x6b\x7e\x42\x9a\x70\x26\x10\x66\x2c\x2d\x74\x1f\x59\xb2\xaa\x55\x50\xb5\xba\x1b\x5f\xf6\xd2\xa3\x36\xe0\x65\x89\x7c\x5b\x96\x8c\x8f\x60\x6d\x54\x42\x2d\x7d\x28\xd4\x58\xad\xd8\x0c\x46\xe7\x8a\xea\x2b\x67\x9b\x9b\xe2\xce\x94\xaa\x89\x35\x24\xbd\x35\x95\xcb\x4b\x53\x77\x6f\x6a\x7c\x5f\xff\x75\x07\xf8\xdd\x04\x81\xc9\xe4\x82\x80\x83\x0a\xd6\x15\x8e\x90\x95\xdb\x5b\xc6\xc1\x6a\x15\xc0\xe8\x57\xf0\xbf\x3c\x5f\x7a\x36\xf9\xfa\x6f\xdd\x1f\x32\xd4\xd8\x6f\x5f\xb5\xc1\xf5\xd5\xaf\x56\xe1\x23\x38\x3d\x83\x9f\xcf\xe1\x51\xd8\xe3\x23\x8f\x23\xa4\x89\x35\x53\x76\xbf\x55\x13\x96\xa7\x3b\xee\x08\x58\x4e\xd3\xd2\x29\x19\x4b\x90\x80\xd1\x71\x43\x9a\xe1\xba\xa1\x6f\xb7\x67\xde\x93\x70\xbf\x15\xfd\x93\x6d\x6b\xb0\xd1\x67\xb3\x8b\xb4\xd6\xff\x3e\xf7\x92\x16\x74\x29\xe0\xde\x99\x96\xf4\x2d\x43\x49\xa9\xc8\xd1\x5b\x8d\x17\x82\xd9\x9b\x1b\x37\x74\x77\xcd\x9e\x49\x96\xa0\xad\x8e\xe5\xbf\x3d\xed\x77\x8c\xe8\xb1\xa0\x2e\xee\x75\x71\x57\x68\x6e\x7a\x67\xc6\x0b\x93\xdd\xd7\xf6\x0a\x77\xdf\xae\xfc\xe6\xf3\x40\xe2\xda\x67\xf1\xf1\x8d\x94\x57\x4c\xa4\x2e\xb7\x4b\xe4\x42\x70\x49\x13\xb0\x2c\x47\x30\xa8\x19\x9a\x67\xfd\x24\xdd\x59\x84\xf7\x7a\x09\xb2\xd0\xcd\xee\x80\xd7\x8a\x4b\x8d\x7a\x67\x3d\xb6\x57\xa3\x23\xb0\x9d\xd9\x0c\x35\x9c\x9d\x9e\xfb\xdc\xae\x23\xe7\xeb\x8e\x74\xd2\x75\xbb\x87\x9c\xe8\x49\xcb\xc1\x2d\x5e\x64\xe8\x57\xca\xb8\xac\xe6\xf1\x36\x4b\x7c\x45\x9e\xf8\x8a\xea\x89\xa7\x41\x70\xf4\x5d\x07\x0d\x9a\x2c\x3a\xe8\xb1\xa8\x4d\xaa\x75\x36\xf5\x89\x6c\xbf\x45\x98\x7e\x8e\x55\x1c\x6e\x53\xae\x0b\xbf\x3d\xc6\x54\x5e\xaf\x93\x1c\x68\x3e\x04\x41\x26\x73\x74\x79\xfe\xd6\x30\xce\x11\xe3\x6f\xb7\xb9\xec\x7c\x38\x3e\xd8\x2e\x73\xee\x1b\xff\x7f\xd3\x99\xe3\xa7\x5b\xce\x3c\xda\x6e\xef\xca\xda\x69\x4a\x8f\x34\x3c\x41\x2a\x49\xec\xd8\x76\xd8\x10\x49\x98\x21\x57\x21\x97\x31\xe5\x1b\xd2\x6d\x04\xe3\x8e\x3f\xbe\xb2\x41\xc9\x67\x13\xa3\xa8\xa8\x47\xf2\x31\x29\xc8\x24\x4f\x50\xc3\x82\x25\x36\xf3\x73\x7d\x5a\xfd\xf6\xb3\x1a\x57\x0f\xde\x31\x6e\x74\x17\x05\x7d\x90\x1b\x8d\xc2\xd1\x28\x64\x79\x1a\xda\x71\xe0\x07\x1a\x29\x91\x12\xa0\xdc\x1e\x93\x35\xb7\x85\x0c\xa6\x52\x27\xee\x34\x31\x71\xd1\x50\x44\x5b\x26\x94\x4b\xc2\x59\x7c\x45\xa7\x7e\x07\xa8\xda\xec\x89\x3c\x6d\x71\x37\x28\xea\x8d\x24\xd1\x73\xc8\xa8\x48\x96\x90\x16\x2c\xf1\x87\x42\x8e\x16\x96\xb2\x80\x2b\x21\x17\xb0\x70\x49\x85\x2b\x9d\x31\x91\xec\x78\xa8\xfb\xb0\x05\xbb\x07\xae\x3d\xc5\xbb\x1b\xf9\xad\xc4\x79\xd4\x16\x67\xaf\x1c\x6b\x01\xee\xd1\xe8\xff\x8a\x28\xef\xa4\xc0\xbb\x0b\xac\x29\xa7\x18\x85\x29\x0c\x89\x5e\xf8\xff\xf7\x44\xd3\xbb\xea\xed\x71\xaf\xc4\x4a\xf3\x02\x2e\x53\xd9\x10\x5a\x69\x2c\xb8\xd2\x3d\x9a\xbb\x85\x8c\x2c\xe3\x68\x1a\x07\xc2\x13\x66\x62\x39\x47\x0d\x99\x5c\xf8\xa8\x59\x8e\xdf\xbc\xd3\x70\xfb\x0f\x28\xca\x84\x05\x0a\x8a\xc5\xb6\xd0\xeb\x6b\x8b\xf2\x72\xc3\x87\x46\x07\xb0\x40\xe0\x6c\x8e\x5f\xd5\xf5\x77\x55\x57\x66\xad\xfa\x47\x18\xce\x99\x29\x28\x1f\x49\x61\x46\xa9\x9c\x8f\x8a\x2b\x02\x96\xea\x14\xed\x31\xb9\x9c\x72\x2a\xae\x48\xf4\xa1\x6c\x72\x76\x7a\xfe\xe0\x24\x58\x5a\x1f\x38\xeb\x37\x0a\xfc\xe1\x9a\xe6\x8a\x7b\xe2\x33\x61\x51\xd3\xd8\xb2\x39\xfa\xd3\x31\x94\x1d\x98\xf1\x62\xd8\xd5\x67\x35\x2a\x2d\xac\xac\x5d\x1d\x1c\x3e\x19\xa2\xda\x8d\xf3\x80\x19\xa0\xb0\xc0\xa9\x71\x2c\x2e\xd3\x5c\x97\x16\x08\x5c\x00\x55\x4a\x4b\x1a\x67\x68\x5c\x1c\xcc\xa9\xcf\x17\x5c\x9f\xe6\x85\x65\x1c\xa3\x31\x6c\xca\xd1\x8b\x58\x23\xc7\x39\x15\xd6\x75\xa0\xce\x6e\x2c\x2f\x02\x63\xa0\x45\xc2\x50\xc4\x5f\x46\xdb\x5e\xcd\x79\x12\x1c\x7d\xdb\xbc\xce\x6b\x28\xfe\xe8\xbb\xdb\xca\xfc\xcf\xd2\x70\xf7\xb5\xce\x9d\x35\x3c\x2c\xd6\x61\x2c\x85\xcc\x97\x21\x13\x33\x5e\x5e\x43\x8b\x44\x69\x16\x23\x13\x09\x8b\xd1\x84\xd3\x82\x73\xb4\x4c\x98\x30\x96\xc2\x14\x39\xea\xaa\xba\x6a\x1f\x72\x7f\x4c\x26\xd1\x89\xe3\xf9\x79\xec\x29\x00\x2f\x68\xae\xee\x2d\x74\x76\x65\x78\x5e\xa0\x9f\xb8\x3e\xfa\xbe\x60\xdc\x79\x1c\x16\x52\xf3\x24\xe0\x48\xfd\x13\x5e\x2b\xd4\x96\x19\x04\x26\x7c\x88\x62\x42\xc8\x39\xf5\x62\xa5\x4a\x71\x16\x97\x21\x4b\xce\x4a\xed\x9a\xf8\xcb\xd3\xba\xf3\xa8\x56\x05\xb2\xcd\x0e\xf1\x95\xd4\xdd\xa4\x56\x28\x15\x47\x25\x55\xb1\xe6\x74\x2c\xf3\xbc\x10\xcc\x2e\xc3\xad\xe2\x9c\xa5\xba\xa4\xf1\xa6\x18\x8d\x65\xb9\x23\x75\x83\xfb\x54\x88\x82\xf2\x9c\x25\x4b\xa4\xba\xab\x69\xad\x82\x1f\x51\xa6\x9a\xaa\x6c\x59\xbd\x08\xb2\x7f\xb8\x08\xa0\x75\xee\x39\xf0\x9b\x3f\xb3\x3e\x57\x93\x0a\x05\xa4\x1b\x9b\xa4\xb6\x94\x83\x3b\x10\x32\x71\x85\x49\x45\x70\x66\xf1\xcb\x9c\x77\xbe\xd2\xfb\xaf\x4e\xef\xb3\x0f\xa3\x8b\xd7\x7f\x02\xa5\xcb\x4b\xb6\xae\x17\xaa\xd5\x0b\xd7\x04\x58\xae\xa8\xb6\x8c\x72\xbe\xf4\x99\xca\x4c\x23\xc2\x4c\xcb\x1c\x94\xe4\xac\x7e\xab\x3a\xe3\xc5\x1f\xb3\x9b\xb7\x6e\x06\x57\xab\xf0\xd1\xf6\x3d\xe1\x4b\xa4\xee\x60\x94\x40\x45\x87\xee\x6b\xc1\x59\xd5\xea\x33\x6e\x06\xf7\x5f\x04\x36\xd2\xa4\x07\xf0\xb6\x73\xa3\xf2\xa3\xee\x0b\xe2\xce\x3b\xe0\x8b\xd7\xf0\x16\xb5\x51\xe8\x53\x6b\x03\x87\x07\xe3\x27\xdd\x44\xbb\xdd\x56\x54\xee\x3f\x7f\x59\x77\x9c\x34\xd2\x13\x88\xcb\x94\xeb\xef\xeb\x8d\x57\x8d\xaf\x30\x34\xce\x19\x2e\x5c\x0a\x77\xf1\x1a\xca\x1c\x97\xc5\x5b\x57\xf2\x9f\x76\x53\xef\x55\xff\x1d\xaf\xf8\x5d\xab\xcf\xf9\xf8\x61\xef\xcb\x6c\x6f\xc9\x1d\x5e\x61\x3f\xf8\x55\xed\x5f\xd7\x5b\xbc\x88\xbc\xed\x07\x09\xf5\xd3\xfa\x35\xf0\xf6\x27\x32\x7d\x5f\xc8\xdc\xe5\x63\xa7\xec\x30\x7a\xee\xce\xc6\xbf\x39\xf2\x35\x3f\xe8\x59\x47\xdb\x5d\xae\x54\x68\x34\xf8\xe8\x69\xd2\x5e\xac\xb6\xbb\x1a\xab\x5c\x77\x09\x98\xc5\xbc\x99\x23\x50\x2b\x3f\x3e\xa3\x1f\x8f\x29\x89\x9e\x97\x5e\xdb\xb3\x03\x7c\x12\x65\x4a\xa2\xef\x87\xa3\xc4\x24\x7a\x31\x1c\x25\x21\xd1\xc9\x70\x14\x24\xd1\x0f\xc3\x51\x66\x24\x7a\x39\x1c\x25\x25\xd1\x8f\xc3\x51\x32\x12\xfd\x34\x1c\x85\x91\xe8\xd5\x70\x94\xdf\x49\xf4\xf3\x70\x94\x2b\x12\xbd\x1e\x8e\xc2\x49\xf4\x66\x38\x4a\x4e\xa2\x7f\x0e\x47\x11\x24\x3a\x1d\x8e\x22\x49\x74\x36\x1c\x45\x91\xe8\xed\x70\x94\xff\x90\xe8\x5f\xc3\x51\x34\x89\xde\x0d\x47\x31\x24\x3a\x1f\x8e\x62\x49\xf4\x7e\x38\x4a\x41\xa2\x8b\xe1\x28\x73\x12\x7d\x18\x8e\xb2\x20\xd1\x2f\xc3\x51\xae\x49\xf4\xef\xe1\x28\x4b\x12\xfd\x3a\x1c\xe5\x23\x89\x7e\xdb\x45\xd9\xc4\xf8\xed\xb0\xfe\xdf\x00\x00\x00\xff\xff\xfb\x0f\xef\xf8\xd0\x2c\x00\x00")

func templatesHomepageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHomepageTmpl,
		"templates/homepage.tmpl",
	)
}

func templatesHomepageTmpl() (*asset, error) {
	bytes, err := templatesHomepageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/homepage.tmpl", size: 11472, mode: os.FileMode(420), modTime: time.Unix(1497004905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x97\xe1\x6e\xe3\x36\x12\xc7\x3f\x37\x4f\x31\x55\x81\x93\xbd\x11\x25\xab\xb9\xe4\xbc\x1b\x2b\x40\xb6\x1b\xf4\xf6\xae\xbb\x59\xdc\xa6\xb8\x3b\x04\x01\x4a\x4b\x23\x89\x29\x45\xaa\xe4\x28\xae\xa1\xe8\xdd\x0b\x4a\x76\xec\x24\x6e\x36\x45\xb0\x5f\x24\x4b\x9c\xf9\xfd\x67\x86\x43\x8a\x9e\x7d\xfb\xee\xfc\x87\x8b\xff\x7f\x3a\x83\x92\x2a\x79\xb2\x37\x5b\xdf\x90\x67\x27\x7b\x00\x00\x33\x12\x24\xf1\xa4\x6d\x21\xfc\x80\xc4\x33\x4e\x3c\xbc\x70\xaf\xa0\xeb\x80\xc1\x79\x9e\x8b\x14\x21\xd7\x06\x3e\x72\x12\x5a\x71\x09\x9f\x89\x93\xb0\x24\x52\x3b\x8b\x06\xef\x81\x54\x21\x71\x50\xbc\xc2\xc4\xcb\xd0\xa6\x46\xd4\xce\xc1\x83\x54\x2b\x42\x45\x89\x77\x4f\xe4\xdd\xc6\xa4\xeb\xbc\xc7\x88\x5f\x71\xb9\xd0\x26\xb3\xf7\xfc\x0d\x57\x05\x6e\x41\xfe\xbd\x32\xea\x3a\x68\x5b\x06\x61\xd7\x05\xd0\xb6\xa8\xb2\x07\xc8\x92\xa8\x66\xf8\x5b\x23\x6e\x12\xef\x7f\xec\xe7\x53\xf6\x83\xae\x6a\x4e\x62\x2e\x71\x8b\xff\xfe\x2c\xc1\xac\xc0\x20\x2d\x8d\xae\x30\x89\x3d\x88\xb6\x21\x69\xc9\x8d\x45\x4a\xbc\x86\x72\x36\xf5\xee\x8f\xad\x19\x0b\x91\x51\x99\x64\x78\x23\x52\x64\xfd\x43\x20\x94\x20\xc1\x25\xb3\x29\x97\x98\xc4\xe1\x24\x68\x2c\x9a\xfe\x91\xcf\x65\xaf\x33\xa4\x7c\x23\x70\x51\x6b\x43\x3b\xaa\x91\x6b\x53\x71\x62\x19\x12\xa6\x0f\xaa\x4a\x28\xb1\x2e\xb5\xc2\x44\xe9\x1d\x9e\x54\x62\x85\x2c\xd5\x52\x9b\x2d\xa7\xef\x0e\xa7\x87\xaf\x0f\xdf\xee\xb0\xe7\x75\x2d\x91\x55\x7a\x2e\x24\xb2\x05\xce\x19\xaf\x6b\x66\x89\x53\x63\xd9\x9c\x1b\x66\x69\x79\xaf\x68\x1b\xd2\xde\x37\xdf\xb4\xed\x2f\xb3\x6f\x19\xbb\x14\x39\x48\x42\x78\x7f\x06\xd3\xab\x93\x5f\xe0\x16\x2c\xcf\xf1\x9f\x17\x1f\x7e\xea\xba\x5e\x10\x60\x26\x85\xfa\x15\x0c\xca\xc4\xeb\x89\xb6\x44\x24\x0f\x4a\x83\xb9\x9b\xe8\xf0\x13\x27\x42\xa3\x7e\x12\x73\xc3\xcd\xf2\xd4\x5a\x24\xfb\x89\x53\xd9\x75\x51\x6a\x6d\xa4\x65\xc6\x04\x86\xa9\xb5\xde\xc9\x5a\xf7\x12\x55\x26\xf2\x2b\xc6\x76\x29\x6e\x45\xf6\xfe\x0c\x5e\x7f\x9d\xa8\x04\xb2\xd7\xab\x98\xee\x34\xff\x34\xaa\x7b\xd5\x2a\x68\x15\x96\x7b\xf1\x55\x62\xab\xb8\x50\x0f\x63\x63\xec\x89\xf8\x66\xd1\xb0\x4b\xcc\xe6\x3a\x5b\x42\x2a\xb9\xb5\xc3\x12\xbe\x58\xd6\x6e\x77\x70\x33\x3e\x90\x80\xb0\xaa\x25\x27\x04\xaf\xe6\xc6\xf5\xba\xed\x7d\xd1\x78\x10\x42\xd7\xed\xad\x9a\x8c\x0b\x05\x22\x4b\x3c\xf7\xc3\x03\xa3\x25\xae\x7f\x13\x9f\x0b\x95\xe1\xef\x89\xc7\xe2\x55\x80\x03\x7a\x29\x50\x66\xab\x12\xcc\xfa\x1c\x9e\x54\xcd\xb5\x26\xa7\xba\xd6\x7c\x54\xe1\xe9\x53\x15\x6e\xdb\xe8\x15\x5c\x9c\xbf\x3b\x07\x06\x4d\x9d\x39\xb4\x56\x20\xc5\x0d\xc2\xbc\x11\x32\x03\xd2\xd0\x58\x04\x5a\x68\xf8\xd7\x67\xc8\x85\x44\x1b\x80\xd2\x04\x1c\xac\x50\x85\x74\xf6\x08\xaf\xa2\xcd\x9c\x0d\x7b\x1c\xd0\xb2\x76\x4b\x11\x7f\xa7\xe8\x9a\xdf\xf0\xe1\xad\x07\xd6\xa4\x5f\x9a\xba\xeb\xd5\xcc\x5d\x5b\xef\x64\x16\x0d\x8e\x27\x7f\x81\xee\x00\xbc\xae\x77\xf8\x7f\xb9\x03\xf6\xb6\x44\xd6\x9a\xa3\xbc\x51\xfd\x0e\x34\x12\x81\x0d\x74\x50\x04\x26\xe0\x41\x35\x6e\xc5\xa5\xff\xa3\xd6\x85\xc4\x53\xc5\xe5\xd2\x7d\x1d\xce\xe7\xd7\x98\x92\x7f\x95\x98\x63\x71\x69\xae\x12\x77\xb9\xbd\xbd\xf3\x1f\xb7\x6b\xa4\x1b\x08\x7f\x4b\x86\xdb\xed\xed\xe5\xd5\x38\xac\x1b\x5b\x8e\xb8\x29\x9a\x0a\x15\xd9\x71\x17\xf4\x83\x32\x89\x5f\x29\x5c\xc0\x3b\x4e\x38\x1a\x1f\xf3\xc4\x86\xa9\x41\x4e\x78\x26\xd1\x19\x8e\xf4\x38\x58\x41\xab\xc4\x86\x05\xd2\x6a\xc0\xbe\x5d\x5e\xf0\xe2\x23\xaf\x70\xa4\xc7\x97\x93\xab\x63\x1e\x72\xbb\x54\x69\x12\x1f\xf3\xd0\xd5\xa9\x38\xae\xc2\x9a\x1b\x54\xf4\x51\x67\x18\x0a\x65\xd1\xd0\x5b\xcc\xb5\xc1\x91\x4b\x6f\x45\xed\xc6\xa3\x85\x50\x99\x5e\x04\x99\x4e\xfb\xd8\x02\x7f\xa8\x8f\x1f\xf8\x51\xb4\x58\x2c\xc2\xa2\x2f\x02\xe3\xeb\x2a\x84\xa9\xae\xa2\xcd\xd3\xb5\xf5\x03\xbf\xe0\xfe\xf8\x78\x85\x2c\xf8\xc8\x1f\x92\xf0\x03\xf0\x7f\x3e\x65\x87\x47\xd3\xd7\xdf\x4f\x0e\xfe\xc1\x0e\xfc\x00\x5a\x9f\x4b\xa9\x17\xa7\x2a\x2d\xb5\xf1\xdf\x00\x99\x06\xbb\x7b\xbe\x16\x55\xe6\x3c\x6b\x5e\xa0\xfb\x80\xf4\x4e\xee\xc1\x7f\x03\x52\xa7\xfd\x47\x3b\xac\x39\x95\x6e\x7b\x87\x7d\x28\x90\x3e\x23\x37\x69\x39\x1a\xc3\xfe\xc6\xa2\xe4\xb6\xdc\x80\xd7\x93\xb4\x6d\xdd\xde\x2d\xcb\xfb\x2b\xe5\xbf\x25\x2a\xb0\xbd\x11\x08\x0b\x95\xbe\xc1\x7e\xa5\x18\x54\x19\x1a\x34\xb0\x40\x5f\x4a\x50\x38\xbc\xe6\x59\xb6\xb6\x26\x34\x15\x08\x45\x1a\x5c\xbc\xf0\xe3\x29\x18\xb4\xb5\x56\x16\xb7\xa4\xa2\x08\x44\x3e\x7a\x9c\x49\x92\x24\xe0\x47\x03\xc9\xbf\x17\x5c\x14\xf5\xb7\x1b\x6e\x40\x35\xd5\x1c\xcd\x79\xfe\x1f\xb4\x8d\x24\x0b\x09\xb4\xed\x77\x22\x77\x3a\x8d\xa4\xf0\xc1\x70\x7f\x8a\x78\x62\x08\xa5\xc5\xae\x83\x89\x4b\x5f\xe4\x5d\x77\xfc\x58\xd4\x20\x35\x46\x6d\xca\xba\xca\x74\x1f\xfc\xbf\x3d\x20\x26\x3e\xec\x3f\x8c\xef\x01\xb0\x03\xa7\x08\x3b\x72\xdb\x2d\xf3\xc8\x7d\x6b\x27\xda\x78\xad\x5b\x79\x6f\xef\xce\xf2\x03\x72\xdb\x18\x04\x12\x55\xbf\xe5\xf5\xd3\xc1\x20\x35\x98\x09\x72\x93\xe6\xce\x4f\x6f\xa2\xa8\x44\x59\x87\x77\xbd\xec\xce\x4a\x7d\x77\x0f\x2d\x7f\xf7\x3e\xaa\x7a\x9c\x50\x05\x73\x40\xa6\x15\x9b\xeb\x46\xa5\xc8\x1c\x37\x7a\xd8\x62\xce\xc6\xc4\xf1\x68\xdc\x6e\xb7\x33\xde\xa0\x22\xf7\xe3\x42\x54\x78\xae\x3e\xb9\x86\x0e\xc0\x8f\xfb\x4b\xcc\x0e\x26\x60\x31\xd5\x2a\xb3\xae\xdf\xc1\x57\x5a\xbd\x57\x84\x86\xf7\x4c\xff\x0d\xc4\xd0\x8d\x8f\xbb\x9d\x5a\x07\xcf\xd4\xfa\xde\x5d\x0e\x62\x76\xf4\x02\xad\xa3\x67\x6a\xb9\xb5\xee\x1f\xc5\x2c\x9e\xbe\x40\x2c\x9e\x3e\x53\xed\xef\x7d\x15\xa7\x2e\xb5\x97\xe4\x36\x79\xa6\xdc\x61\x9f\xdc\xa4\xcf\xee\x45\xe9\x3d\x57\xf0\x68\xc8\x6f\x12\xef\xff\x15\xb5\x67\x80\x27\xfd\x85\xc5\xcf\xca\x62\x85\xb5\x48\x0e\xa2\x1b\x1a\xad\x5a\x3d\x88\xe3\xc9\x64\xf2\xa7\x06\x07\x71\x70\xf0\xa4\xc1\x51\x1c\x1c\x3d\x69\x10\x4f\xe3\x20\x9e\x3e\xcd\x98\xc4\xc1\xd1\xe4\x0b\x94\x89\xc3\x6c\x1b\x6d\x4e\x10\xb3\xc8\x1d\x0b\xdd\x7d\xf8\x4b\xf9\x47\x00\x00\x00\xff\xff\x7c\xc5\xca\xe2\x6a\x0e\x00\x00")

func templatesMainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainTmpl,
		"templates/main.tmpl",
	)
}

func templatesMainTmpl() (*asset, error) {
	bytes, err := templatesMainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.tmpl", size: 3690, mode: os.FileMode(420), modTime: time.Unix(1497004905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x61\x6f\xdb\x36\x13\xfe\xde\x5f\x71\xd0\x0b\xbc\x9f\x5e\x99\x49\x83\x77\x28\x32\x47\x5d\x91\xb4\x5d\xb0\x2e\x01\x96\x0c\xfb\x68\x9c\xc9\x93\x74\x0b\x45\x6a\x24\x25\xd5\x33\x02\xec\xe7\xec\x77\xed\x97\x0c\x94\x6c\xc7\xb1\x9d\xa6\x2d\x9a\xb9\xd8\x37\xe9\xc8\x3b\x3e\x47\x3e\xc7\xbb\xe3\x38\xb7\x36\x90\x03\xa9\xd1\xfb\x93\xa4\x76\x6c\x42\x9a\x96\xac\x28\xc9\x9e\x01\x8c\xcb\xc3\xcc\xab\x97\x30\x9f\x8f\xae\x08\x9d\x2c\xcf\xd8\xe3\x54\x93\xba\xbd\x1d\x8b\xf2\x30\x4e\x99\xcf\x39\x87\xd1\x8f\x14\x50\x61\xc0\xd1\x9b\xde\xde\xe8\xb5\x59\x4c\x7b\x06\x00\x63\xc5\xed\x72\x85\x8a\x02\xa6\x9d\xc3\xba\xb7\x0f\x1b\xa3\x71\xa0\x26\xb7\x1a\xdb\x1c\x97\x56\xdf\x57\x5e\x4d\xaa\xd7\xa6\x40\x9c\x96\x56\x2a\x3d\x7c\x3e\x7c\xea\x22\x3d\xfc\x3f\xc4\xa5\x27\x13\x0e\x54\x6d\xa9\xf7\x26\x10\x4a\x47\xf9\x49\x52\x86\x50\xfb\x63\x21\xba\xae\x1b\xf9\x80\x81\x7d\x60\xe9\xb1\x09\xa5\x75\x1c\x66\xa3\xc2\xb6\xa3\xe6\x46\x18\x0c\x6c\x0d\xea\x74\x35\x87\xd1\x88\x30\xab\xc9\xa7\x36\x4f\x6d\x9e\x47\xc9\xda\xb0\xdf\xb9\x6c\xbf\x34\x57\xc5\xfa\x06\x4d\x26\x5c\x61\x41\x09\x78\x27\x07\x3c\xc7\x42\x68\x2b\x51\x97\xd6\x87\xe3\x17\x07\x2f\x0e\x04\x57\xc5\x0e\x08\x7e\x54\x9b\x22\x01\xd4\xe1\x24\xb9\x58\x8c\xc2\xd5\x6a\x14\xb4\x2d\xec\x6e\xef\x05\xee\x14\xfb\x1a\x4d\x76\x6a\x4d\x40\x19\x8e\x61\x2c\xfa\xff\x5d\x13\xa7\xee\x83\x9b\x5a\x21\xeb\x60\x8f\x59\x4d\x9d\x42\xff\x9d\x35\x7e\x54\x78\x5e\xec\x65\x02\x91\x3b\x69\x81\x29\xb5\x64\xc2\xfd\xbf\x54\x62\xa0\xc2\xba\xd9\xd2\xc8\xc6\xec\x54\xe3\x94\xf4\x49\xf2\x80\xe9\x6c\x3e\xdf\x62\xe7\xc2\x9f\x48\xe2\x2d\xaf\xc7\xa2\x7e\x0a\x72\xf5\xfb\xf6\x13\x69\x42\x4f\x11\x3f\x7d\xc6\x66\xee\xf0\x64\x61\xf1\x0c\x03\x0d\xb1\xf6\xb8\xa5\xa7\x74\xf0\x82\xde\x07\x70\x03\xa6\xe3\x2f\xe1\x5f\x34\xb8\xf0\xf1\x6b\xf0\xef\x0c\x03\x7a\x0a\x70\x7e\xf6\x65\x8e\x6f\x61\xef\xfc\xec\xf6\x16\xfe\x6b\xa6\xbe\xfe\xf6\x43\x31\xf4\x9f\x64\xe9\x46\xb0\x56\x07\xae\x13\x08\x1c\x34\x9d\x24\xd7\x25\x7b\xf0\xe4\x98\x3c\x9c\x9f\x01\x7b\x40\x68\x0c\xff\xd6\x10\x38\x34\xca\x56\xc0\x8a\x4c\xe0\x9c\xc9\x41\x6e\x1d\x84\xa8\xc0\x46\x71\xcb\xaa\x41\x0d\x81\x2b\x5a\x18\x18\xc1\x75\x49\xa0\xb8\xe0\xe0\x21\x94\x54\x79\xd2\x2d\x79\x50\x16\x8c\x0d\x50\x62\x4b\x80\x66\x06\xbe\x26\xc9\x39\x4b\xa8\x08\x0d\x9b\x22\xc9\xa0\x2b\x31\xc4\xc5\xa3\xf5\x97\x7f\xfd\xf1\xe7\xe3\xe1\x35\x16\x8a\xdb\x55\x26\x58\xfd\xdc\x7d\xcd\xe7\x64\x96\x69\xa4\x7c\xbe\xf4\xbf\x65\xdf\xa0\xd6\xb3\x92\x95\x22\x93\x64\xc3\x76\x82\x66\x73\xe3\xc7\xa2\x7c\x9e\x6d\xa6\x9d\x21\xcd\x7d\x6c\xce\x19\x1b\x6c\xef\x03\xdf\xb6\x95\x1a\x6c\xe1\xc1\x7c\xb4\x99\xb5\x56\x4c\xb3\x86\xd2\x50\xb2\x53\x2b\x1a\xae\x24\xbb\x79\x57\x1e\x6d\xaf\x3b\x99\x94\x84\xaa\xdf\xf3\xef\x49\xd7\x63\x51\x1e\xed\xd4\x6d\xf4\x2e\x5d\xcd\x3e\x3c\x94\x8a\xc6\x9a\x77\xa9\x3c\x18\x16\x1b\x0c\x15\x25\xe9\x5a\xa0\x94\xe4\x3d\x4f\x59\x73\x98\x25\xd9\xab\xf5\xdf\x07\xf2\x4c\x7f\xe6\x9a\x9f\x12\x95\xb4\xf6\x86\xc9\xa3\x51\xb5\xe3\x16\xe5\x2c\xc9\x4e\x07\x11\xa0\x51\xb0\x10\xee\x0f\x5f\x20\x57\x45\x74\xd2\x1a\xc5\x31\x73\xfb\x24\xbb\x8e\xb2\x1e\xde\x9d\xf4\xd3\x11\x8e\x45\xa3\xb7\x09\xba\x1e\x79\x77\xd2\x7f\x88\xb6\xaf\xa6\xb6\x09\x70\x79\x71\xf5\x15\x71\x17\x23\xa6\xc6\x8b\x78\x8b\x75\xa4\x6c\x92\xfd\x12\xef\xb3\x8e\x40\xd9\xbd\xd0\x62\x09\x48\xa2\x23\x72\x3e\xc9\x4e\x87\x8f\xfd\x82\x19\x6a\xa7\x26\xc2\x19\x3e\xa1\xd9\x0f\x22\x43\x9d\x4f\xb2\x0b\xea\xf6\xbb\x21\xc1\xa1\xf1\x35\x3a\x32\x72\x86\x46\x15\xb6\x25\x67\xd0\x48\x12\xb9\x23\x52\xb6\xb2\x39\x9b\xdc\xba\xaa\x2f\xc7\x73\xcb\x49\xf6\x66\x18\x00\x9b\xc3\xf9\xdd\xd0\xbf\x22\xb0\x4f\xad\x31\x24\x03\x74\x1c\xca\x9e\x18\x5f\x4b\x78\x2f\xbb\xba\xd0\x71\x88\xa5\x97\xb4\x95\xb8\xbc\xb8\x5a\x95\x54\x2c\xad\x59\x74\xbe\x10\xd0\x15\x14\x4e\x92\xc9\x54\xa3\xb9\x49\xb2\xeb\x41\x67\x1f\x34\x5b\x6f\x46\x73\x94\x34\xb5\xf6\xe6\x93\xb0\xbf\x59\x28\xed\x1b\x7c\xac\xcd\x48\xb1\xe9\xc1\x4b\x5b\xd5\x68\x66\xa2\x6f\x92\x29\xcd\x6d\x34\xbc\xd5\xcb\x7e\x94\x7f\xef\x7a\xbb\xe7\x9f\x11\x3d\x5f\xce\xbf\xba\x99\x6a\x96\xb1\xe3\x54\xa4\xb9\x25\x37\xeb\xbd\x44\x29\x6d\x63\x82\x17\x3f\xff\x70\x79\x71\x25\x7c\x33\xf5\xd2\xf1\x94\x9c\x8f\x77\xd7\x47\x79\xf7\x3a\xb6\xbc\x80\x9a\x5c\x78\xc2\xc4\xbf\x29\x1a\x8b\xb5\x02\xf8\x7e\x89\xfe\x48\xe1\xbc\x5d\x26\x6b\x96\x64\x3c\x6d\x6c\xe7\xfa\x8b\xc7\xfd\x89\x93\x09\x57\xcb\x17\x8c\xcb\xb7\xef\x12\xe8\x58\x85\xf2\x24\xf9\xe6\x60\xf1\x1c\xd2\xbf\x7c\xd8\x42\xf7\x2f\x1d\x1b\x56\xeb\x87\x6c\x86\xd8\x98\x56\xe8\x0a\x36\xa9\xa6\x3c\xa4\xbe\x4a\xd3\x83\xed\x33\x7e\xa5\xe3\xd5\x68\x02\x99\xbe\x91\xc1\x16\x59\xe3\x54\x13\x34\x46\x51\x6c\x9b\x28\x9e\xfe\x8e\x83\xbb\x23\xc4\x82\xef\x4b\x3e\xa3\x93\x25\xb7\xe4\x97\xcf\x46\xca\x4a\x61\x6b\x32\xe9\x90\x28\xaa\xfe\x05\x23\xc2\x94\x24\x5a\x72\x9e\xad\x11\x47\x62\x9b\x09\x97\x35\x19\x78\xbb\xd2\x81\x77\x83\x0e\xb4\x47\xa3\x83\xc8\x8c\xa1\x43\x5d\x87\x06\x3d\x3e\x7a\x1f\x62\x3e\x8a\xb7\x3d\x17\x65\x74\x1c\xb5\x4e\xb2\x45\xf7\xfa\x3f\xa0\xf7\x92\xea\x00\x5d\x49\x8e\xc0\x86\x92\x5c\xc7\x9e\x20\x46\x21\xa9\x0d\x96\xd4\xf7\x38\xf2\x48\xe7\xd6\x73\x81\x55\x6c\xd6\xa8\xab\xad\x8b\x4b\xaf\x38\xff\xab\x4f\xef\xc4\xfc\x3b\x45\x40\x0f\x2b\x56\xea\x33\x15\x75\xf1\xb8\xe2\x58\x0c\x64\xc9\x9e\xfd\x1d\x00\x00\xff\xff\xe0\x17\xd3\x10\x0d\x15\x00\x00")

func templatesPartialsFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsFooterTmpl,
		"templates/partials/footer.tmpl",
	)
}

func templatesPartialsFooterTmpl() (*asset, error) {
	bytes, err := templatesPartialsFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/footer.tmpl", size: 5389, mode: os.FileMode(420), modTime: time.Unix(1498053420, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x4b\x8f\xdb\xb6\x13\xbf\xef\xa7\x18\xf0\x7f\x49\x0e\xb2\xb2\xc9\x1f\x7d\x04\xb2\x83\x66\x13\xa0\x01\x9a\xb4\xc8\x26\x87\x9e\x8c\xb1\x38\x96\x18\x53\xa4\x42\x52\xde\x35\x0c\x7f\xf7\x82\x7a\xdb\x96\xfc\x68\x73\x48\x7c\xb2\xc8\xe1\xf0\x37\x0f\xce\xfc\xc8\x28\x25\xe4\x64\x66\x37\x00\x00\x11\x42\x2c\xd1\xda\x29\xb3\x2b\x91\x4b\xa1\x56\x0c\x52\x43\xcb\x29\xfb\x5f\x86\x42\x31\x70\xb8\x10\x8a\xd3\xe3\x94\x3d\x63\xb3\xfb\x95\xc8\xc1\x69\xf0\x53\x10\x6b\xe5\x48\xb9\x28\xc4\x5a\x15\x17\x6b\x10\x7c\xca\x72\x4c\xe8\x2f\x74\x29\x6b\x54\xa7\x82\x13\x9b\x6d\xb7\x93\xcf\x1f\xdf\xed\x76\x51\xc8\xc5\x7a\x76\x53\xae\xd9\x6e\xc5\x12\x26\xf7\x64\xd6\x22\xa6\xf7\x64\x2d\x26\xb4\xdb\x95\x53\xad\xca\x5a\xc9\x82\x1c\x06\x0b\x54\x8a\x0c\x9b\xb5\x12\x87\x52\x0f\x06\xf3\xfc\x48\xa2\x94\xca\x3d\x82\xc3\xad\xa2\x30\x3f\x50\x56\xa1\x1b\xf8\xdc\x6e\x49\xf1\xdd\xee\xe6\xe6\xfc\x9e\xfd\xd9\xca\xdb\x10\x6b\x19\x78\xc1\x13\xd8\x63\x2d\x4b\xb1\x40\x26\x81\x56\x14\xb8\x54\x18\x5e\x8d\x64\xbc\x1b\x19\xb2\x0d\x4b\xc7\x4b\x9d\xe8\xa0\x1f\xc3\x70\x40\xb6\x94\x17\x59\xd2\xec\xea\x17\x31\xb0\x26\x9e\xb2\x10\xad\x25\x67\x43\x91\x25\xa1\x56\x36\xf0\x53\x13\xbb\x4e\x18\xa0\x74\x53\xf6\xe7\x72\x29\x62\x82\xa5\x36\xf0\x01\x9d\xd0\x0a\x25\xdc\x3b\x74\xc2\x3a\x11\xdb\x21\x58\x4d\x6a\x8c\x38\xf7\x94\x03\xdc\x83\xae\xcc\xb5\xad\x07\x7a\x43\x3e\xa3\x82\xc0\x66\x90\x1b\xa1\x5c\x10\x54\x19\x76\x0c\x80\xcb\xca\x31\xa8\x92\x02\x13\x6a\x33\xb2\x1d\x18\xf1\x0f\x77\x87\x92\xf3\xb9\x13\x4e\x12\x9b\xdd\xa5\xa8\x12\x82\x66\xfc\x65\x14\x72\x37\xa6\x85\x1f\x6b\x11\x8e\xb2\x91\x5d\xa1\x39\x10\xf4\x15\x26\x7f\xd4\x2b\x80\x91\x62\xbb\x5d\x77\x4e\x3b\x55\x3e\xd2\x20\x62\xad\x6a\xfb\x9b\xa0\x87\xf1\x66\xe2\x53\x5d\x38\x7a\xa3\xfd\x51\xdd\xed\x9a\xb3\xc7\x66\x77\x9b\xcc\x20\x25\xf0\xe4\xee\xef\xa7\x3e\x3e\x4d\x56\x5f\x01\x28\xde\x5c\x0b\x68\x14\xcd\x5b\x95\x48\x61\x53\x78\xf2\xf6\xc3\x59\x34\x51\xc8\xf9\x50\x8e\x71\x79\x55\x92\x59\x8a\xb5\xe2\x68\x36\x81\xc2\x35\x5c\x9e\x72\x67\x32\xad\xa8\x32\x4d\xe1\x3a\x68\x77\x60\x83\x7b\x7a\x3f\x59\x07\x5f\xac\xff\x08\x62\xa9\x15\x55\x43\x63\xc9\x28\xc5\x88\x9e\x33\xb9\xd4\xab\xed\x87\xfb\xab\x15\x1c\x01\xe8\x95\x0d\x43\x92\xd0\x52\x8c\x92\xfc\x32\x36\xfb\x58\x0d\x40\x33\x72\x74\xb2\x3b\xe7\x4b\xf1\xdd\x98\x91\x91\x4b\x35\xd7\x52\x27\x1b\x36\x7b\xdf\x7d\xfc\x18\xe8\x15\x3d\x58\x0f\x9b\x0b\xfc\x31\x00\xe3\x42\x17\xae\xb0\x6c\xf6\x9b\xff\xf3\xfd\x60\xee\x2a\xd2\x20\x7a\x87\x26\x21\x37\x65\xf3\x85\x44\xff\x6d\x48\x4e\x99\xd2\x3a\x27\x45\x06\x94\x36\xb4\x24\x63\xc8\x34\x76\xa6\xce\xe5\xf6\x65\x18\x2e\xa4\x4e\x26\x5a\xd9\x49\xa2\xd7\x93\x62\x15\xb2\xd9\x6b\xa9\x93\x2b\xcd\x8e\xc2\xe2\x74\xf9\xea\x7d\xf6\xff\xf6\x0a\x5a\x6e\x44\xd6\x94\xb3\xe1\x22\x15\x29\x3c\x2c\x88\x85\x6c\x96\x7b\x7f\x04\x9e\xcb\x19\x2d\x07\x9b\x78\x17\x94\x3d\xd1\x93\x41\x89\xb0\x61\x91\x7e\x4d\x8d\x90\x95\x15\x32\x23\x55\x04\x4e\x27\x89\x24\x06\x68\x04\xb6\x1a\xab\x0d\x5a\xe1\xe1\x4d\xfd\xf2\x53\x99\x60\x73\x54\x23\x4b\x1d\x3d\x3a\x7f\xa0\x54\x11\x85\x5e\x6c\x2c\x4e\x03\x01\x1c\x09\xde\x49\xd7\xc0\x45\xbe\xb1\x84\x26\x4e\x2b\xd7\x54\xff\x4f\x39\xa7\x91\x1e\xde\xb5\x9e\xfd\x2f\xde\xb9\x2f\x55\x7c\x03\xff\x0c\x24\xf6\x31\x65\x06\x8f\xc1\x73\x82\x32\x65\x39\x29\xd6\x36\xd1\x36\x0d\x4a\x2f\xd0\x63\x8e\x8a\x13\x9f\xb2\x25\x4a\x3b\xd6\x80\x8f\x0f\xc4\xa5\x8d\x75\x6f\x49\x19\xbc\x96\xf7\x7c\xfe\xf8\x0e\x58\xc8\x76\xbb\x23\x99\x20\xc0\xd8\x89\x35\xd5\xa4\xa5\x2e\x2e\x1d\x37\xd5\x92\x07\x82\x82\x80\x0b\x9b\x4b\xdc\x04\x0b\xa9\xe3\xd5\x68\x74\xba\x1a\x76\x80\x5f\xad\x3a\x96\x92\xf1\xe0\xe7\x96\xaf\xfc\xda\xa3\xf9\xbf\xeb\x8c\xfe\x45\xc5\xdd\x6e\x4d\xc9\x66\x27\x9f\xf0\x51\x2b\x9d\x6d\x4e\x30\xc1\x93\xee\xaa\x6d\xff\x62\xeb\x50\xe1\x42\x8e\x91\xeb\x9e\xc1\x15\xfc\x96\x0e\x5e\xe6\x80\x5f\x5a\x07\xdc\x3e\xab\xd3\x23\x45\x9b\xeb\xbc\xc8\xa7\xcc\x99\xa2\xba\x6a\x7e\xf2\x6c\xdd\xdf\xef\x46\x7c\xd2\x79\xc0\xdf\x40\xef\x52\x21\xb9\x21\x75\xc2\xfc\x16\xf6\x48\xa2\xc5\x5e\x45\x50\x52\xbb\x3e\xda\xdb\x9f\x5a\xb8\xcf\x9f\xed\xfb\x67\x3e\xaf\xaf\xd0\x4d\x5b\x6a\xce\xc0\x60\xca\x57\xa3\x12\x17\xbe\x3d\xd9\x62\x71\xa6\x10\xee\xdb\x58\x47\xf9\x0a\x33\x5b\x73\x47\xa2\x5e\x99\x5b\xc6\xfe\xc8\x2a\x3f\x75\x21\xb4\x76\x9b\xcb\x92\xa1\x71\x72\xd5\xb7\x9b\x97\x89\xe0\xf6\xaa\x90\xef\xed\x3b\x7a\x34\x0e\x7f\xe7\x2e\x4a\x9d\xc6\xc3\xc2\x77\xad\xa6\x53\xc7\xf5\xc4\xf5\xe8\xfc\xf1\xbc\x88\x41\x1d\x1f\xbe\x13\xa7\xaf\xae\x3f\xb6\x30\x6b\xda\x0c\xb1\x87\xfe\xef\x13\xae\x84\x4a\x20\x47\xe3\x40\x28\x40\xa8\x96\xbd\x3a\xe1\x88\x6f\xcd\xa5\x5a\x22\xd4\xe7\x52\xe9\xed\xcc\xf2\x57\x50\xbe\x0e\xf9\xee\xf7\x46\x58\x9f\xc8\xdc\xa7\x52\x7a\x3b\xeb\x1e\xaa\x94\x76\x70\x24\x73\xc4\xc7\xaa\x2e\x0c\x5d\xbb\x6e\x9a\xdb\x1e\x3b\xeb\x35\xfc\xd7\x38\xf6\x76\xd4\xbc\x2c\x81\xd1\x92\x1a\xf1\xc3\x17\xa4\xa5\x36\x59\xef\x05\xa5\x7c\x65\x82\x4a\x74\x3e\xf7\x93\x0c\x7c\x9f\xd2\xca\x07\x6a\x8c\x21\x44\x65\x61\xd9\x37\x61\x3e\xaf\x07\x7b\xe1\x7f\xfe\xa2\x2b\x67\xff\x67\xb0\xd4\x66\x8f\x98\xd4\xfc\xa1\x7c\x23\x42\x58\xd1\xe6\x41\x1b\xfe\xc4\x3e\x05\x6d\xc0\x89\x8c\xc0\x92\x11\x64\xe1\xdd\x9b\x28\x2c\x95\x0f\x20\x11\x2a\x2f\x1c\xb8\x4d\xde\x59\x0c\x58\x38\x1d\xeb\x2c\x97\xe4\x68\xca\xf4\x72\xc9\x0e\xa1\x56\xab\xf6\xa0\xde\xb6\x50\x5f\x3c\x67\xbd\xdb\x79\xa9\x72\x2c\xe9\x14\x66\x34\x65\x5f\x19\xac\x51\x16\x34\x65\x43\xbe\x5a\x14\xce\x69\xd5\x40\x2c\x16\x99\x70\x47\x78\x6a\x99\x06\x4c\xe7\xb6\x17\x87\x50\x82\x5a\xc3\x48\xaa\xf7\x29\xdb\x5a\xd8\x02\xa5\xdc\xd4\x8d\xe2\x12\xb6\xd6\x5f\xee\x2f\x42\xd5\x6d\xa8\x49\x4c\x29\x92\xd4\xb1\xd9\x98\x86\x28\xac\xcc\x38\x3c\x55\x3e\xab\xce\x5d\x51\x9a\x5a\x15\x85\xcd\x7b\xf3\x3f\x01\x00\x00\xff\xff\x7d\x6b\x09\x04\x79\x16\x00\x00")

func templatesPartialsHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsHeaderTmpl,
		"templates/partials/header.tmpl",
	)
}

func templatesPartialsHeaderTmpl() (*asset, error) {
	bytes, err := templatesPartialsHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/header.tmpl", size: 5753, mode: os.FileMode(420), modTime: time.Unix(1498052488, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesProductpageTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4b\x8f\xa4\x36\x10\xbe\xef\xaf\x28\x71\xaf\x61\x98\x5e\xe5\x21\x31\x1d\x25\xd9\x43\x22\x25\x52\x14\x25\xe7\x96\x1b\x17\xb6\xd3\xc6\x46\xc6\xf4\x6c\x6b\xd4\xff\x3d\x82\x81\x06\xdb\xf4\x3e\xb4\x27\xfc\x28\x97\xeb\xfb\xea\xab\x32\x25\x57\x67\xa8\x34\xeb\xba\xe7\xac\x65\x82\x50\x19\xef\x2c\x1c\x59\x75\x12\xce\xf6\x86\x23\x0a\xa6\x35\xb9\x4b\xb6\x7f\x07\xb0\x36\x7f\x71\xac\x6d\xc9\x8d\xeb\xe1\x4e\x65\x35\x0e\xbb\xd3\x56\xb2\x79\x5b\x07\x28\x0d\x3b\x2f\xb3\xd0\xf2\xe8\x88\xf1\xca\xf5\xcd\x31\x5b\x9b\x00\x94\x56\x83\xe2\x81\x41\x7a\xe6\x70\xd0\xaa\xf3\xd1\x49\x80\xd7\x57\xc7\x8c\x20\x78\xf8\xe5\x66\x79\xbd\x46\x36\x00\xa5\x56\x5b\x1e\x95\xa7\x26\xf1\x38\xda\x33\x90\x8e\xea\xe7\xec\xf5\x15\x1e\xfe\xfd\xfb\xf7\xeb\xf5\x4e\x44\xe6\x94\xed\x07\x9b\x7f\x94\xd7\x74\xbd\x96\x39\x4b\xdd\x95\xb9\x56\x69\xd8\x64\x78\x14\x68\x99\x5b\x1d\x70\x97\x73\xb5\x22\xb3\xcc\x03\x6e\x47\x66\x07\xd6\x96\x34\x67\xab\x9c\xc0\x90\x34\x6c\x38\xbe\xff\xfe\x6d\xa8\x05\xee\x7e\x08\xc0\x96\xb2\x48\xa5\x72\x38\xf8\x01\xca\x1b\xaa\x3f\xc9\x33\xce\x3c\x5b\xe0\xc9\x22\xf0\xd0\x6e\x39\xa8\xac\xf1\x64\xe2\x54\x05\xfe\x3e\x50\x57\x39\xd5\x7a\x65\x4d\x40\x42\x99\xb7\x6b\xc0\x21\xfe\x95\x94\x0c\x3b\x63\x47\x95\x35\x9c\xb9\x0b\xe2\xd1\x3a\x4e\x0e\x35\xd5\x1e\xb5\x80\x3b\xf0\x8b\x1f\x6f\x43\x5b\xd7\x1d\x79\x7c\x82\x96\x71\xae\x8c\x18\x8f\x42\xc3\x9c\x50\x06\xbd\x6d\x07\x1b\xdc\x45\x6c\x3d\xcd\xb7\x47\x76\x45\xb6\xff\x4d\x09\xa9\x95\x90\x9e\x38\x4c\xf0\xcb\x5c\x3e\x05\xe7\xfb\x37\x91\xcb\xd9\xb4\xc3\x51\xd0\xb3\xd3\x61\x82\x68\xa8\xf7\x8e\xe9\x75\x28\x68\x48\x30\xaf\xce\x84\xd6\x10\xd6\xea\x63\x42\xec\x54\x01\x1f\x06\x66\x57\x91\xfc\xc5\x04\x75\x49\x31\x94\xa9\x18\x37\xf5\xfe\x19\x59\xa7\xa2\x4e\x25\x5d\xe6\xbd\xbe\x93\xce\xd5\xe4\x36\x9c\x06\xf3\x27\xee\x64\x13\xaf\x30\x25\x7b\xa4\x46\x39\x6b\xb0\x6b\xd2\xb5\x86\x7f\x53\x7f\x0b\x2b\x6d\xca\x5c\x25\x95\xe6\x8e\xcc\x27\xf2\x16\xa4\x26\x4c\xcc\xaf\xd3\xe9\xb8\xe8\x97\xce\xb4\x96\xad\x64\xba\x5e\xd4\x6a\x08\xbd\x54\x8e\x07\x7d\xbc\x21\x57\xf5\xee\x02\x92\x86\x74\x23\xee\x0a\x54\x86\x93\xf1\xc4\x91\xb4\x56\x6d\xa7\xba\x40\x47\x8f\xf3\x6c\xac\x93\x86\x23\x16\xf3\xca\xd1\x7a\x6f\x1b\x5c\x15\xc4\x74\x62\x9e\xba\xb7\x3b\x96\x85\xf9\xc4\x63\x50\x42\xc3\xfc\xbf\x0e\xa5\x3d\x93\xc3\x4a\xab\xea\x94\xb4\xd7\x35\xf1\x8d\x32\x38\x87\x5f\x3c\x6e\xbd\x52\x61\x3c\x4f\xd1\x65\x45\x1c\x5f\xb1\xd1\xcd\x4b\xb9\x9b\xef\xab\x75\xdf\xc9\x6c\xff\x05\x6a\x2f\x73\xb9\x4b\x25\x1f\xf4\xa3\x14\x4e\x10\x6b\x1a\x5b\xc2\x5d\x91\xc0\xf9\x1a\x6d\x47\x71\xb4\x11\xc8\x8d\x57\x6d\xc0\x78\xaf\xf3\xce\x10\xdb\x2f\x40\x1d\xd7\x7e\x5c\xf9\xeb\xba\x0f\x5e\xad\xa8\xe8\x3e\xa3\xf6\x6c\xe3\xb1\xd3\xb6\x62\x1a\x3b\xcf\xbc\xea\xbc\xaa\x86\x1e\x6a\x4e\xb7\x5a\x0c\xa5\xb7\xaa\x8c\xad\xc2\xc9\xee\xfe\xa7\xd8\x8f\x87\x83\x6a\x98\xa0\x50\x7d\xc5\x77\xf7\x53\x3a\x25\x30\xfe\xb1\x49\xa4\x17\x93\x3b\x2b\x31\x97\xa4\xdb\x7c\x44\xb7\x80\xcb\xf6\x7f\x58\x7b\x52\x46\x40\x6d\x1d\x8c\x9b\xb0\xec\xfe\xb4\xd5\x95\xbb\x96\x99\xf9\xca\x11\x02\x4a\xab\x39\xb9\x1b\x17\xc5\xfb\x6c\x5f\xaa\x46\x40\xe7\xaa\xe7\x2c\x57\x8d\xc8\x7d\x81\xa3\xef\x87\xd6\x88\x0c\x98\xf6\xcf\x59\x06\xf9\xbe\xcc\x07\x67\x71\xe6\xe3\xb2\x58\x74\x37\xd2\x36\x37\xe9\x6d\xb8\x3f\x83\x64\x86\x5f\x40\xf4\x8a\x13\x78\x0b\x9a\x3c\x5c\x6c\x0f\x27\x63\x5f\xe0\x45\x92\x1b\x57\x6b\x65\x78\x02\xf7\xe1\xdd\x27\x84\x9a\xfc\x2a\x7d\xd5\x53\xf3\x7f\x00\x00\x00\xff\xff\xad\x53\x4d\x1a\x35\x0b\x00\x00")

func templatesProductpageTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesProductpageTmpl,
		"templates/productPage.tmpl",
	)
}

func templatesProductpageTmpl() (*asset, error) {
	bytes, err := templatesProductpageTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/productPage.tmpl", size: 2869, mode: os.FileMode(420), modTime: time.Unix(1497004905, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/dataset/finishpage.tmpl": templatesDatasetFinishpageTmpl,
	"templates/dataset/index.tmpl": templatesDatasetIndexTmpl,
	"templates/dataset/middlepage.tmpl": templatesDatasetMiddlepageTmpl,
	"templates/error.tmpl": templatesErrorTmpl,
	"templates/homepage.tmpl": templatesHomepageTmpl,
	"templates/main.tmpl": templatesMainTmpl,
	"templates/partials/footer.tmpl": templatesPartialsFooterTmpl,
	"templates/partials/header.tmpl": templatesPartialsHeaderTmpl,
	"templates/productPage.tmpl": templatesProductpageTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"dataset": &bintree{nil, map[string]*bintree{
			"finishpage.tmpl": &bintree{templatesDatasetFinishpageTmpl, map[string]*bintree{}},
			"index.tmpl": &bintree{templatesDatasetIndexTmpl, map[string]*bintree{}},
			"middlepage.tmpl": &bintree{templatesDatasetMiddlepageTmpl, map[string]*bintree{}},
		}},
		"error.tmpl": &bintree{templatesErrorTmpl, map[string]*bintree{}},
		"homepage.tmpl": &bintree{templatesHomepageTmpl, map[string]*bintree{}},
		"main.tmpl": &bintree{templatesMainTmpl, map[string]*bintree{}},
		"partials": &bintree{nil, map[string]*bintree{
			"footer.tmpl": &bintree{templatesPartialsFooterTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{templatesPartialsHeaderTmpl, map[string]*bintree{}},
		}},
		"productPage.tmpl": &bintree{templatesProductpageTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

